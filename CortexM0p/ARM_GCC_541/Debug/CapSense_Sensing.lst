ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB23:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 44


2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 45


2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 46


2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 47


2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2620 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2624 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2624 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2626 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 48


  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2625 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2630 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2630 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2632 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2631 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2636 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2636 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2638 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2637 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 49


  92              		.loc 1 2642 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2642 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2644 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2643 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2650 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2628 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2634 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2640 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2650 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2646 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 50


2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2654 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE23:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB24:
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 51


2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2696 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2702 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2706 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2726 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 52


 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2734 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2734 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2737 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2738 0
 194 0024 0023     		movs	r3, #0
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2740 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2742 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2743 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2740 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2746 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 53


 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2748 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2753 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2756 0
 228 003e D8B2     		uxtb	r0, r3
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2757 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE24:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_IsBusy
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_IsBusy, %function
 241              	CapSense_IsBusy:
 242              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 243              		.loc 1 237 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 248              		.loc 1 238 0
 249 0000 024B     		ldr	r3, .L24
 250 0002 DB68     		ldr	r3, [r3, #12]
 251 0004 8020     		movs	r0, #128
 252 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 54


 253              		.loc 1 239 0
 254              		@ sp needed
 255 0008 7047     		bx	lr
 256              	.L25:
 257 000a C046     		.align	2
 258              	.L24:
 259 000c 00000000 		.word	CapSense_dsRam
 260              		.cfi_endproc
 261              	.LFE1:
 262              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 263              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_SetupWidget
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_SetupWidget, %function
 269              	CapSense_SetupWidget:
 270              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 271              		.loc 1 283 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL25:
 276 0000 10B5     		push	{r4, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 280              		.loc 1 286 0
 281 0002 0E4B     		ldr	r3, .L32
 282 0004 DB68     		ldr	r3, [r3, #12]
 283 0006 DB03     		lsls	r3, r3, #15
 284 0008 0DD4     		bmi	.L29
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 285              		.loc 1 296 0
 286 000a 2128     		cmp	r0, #33
 287 000c 0DD8     		bhi	.L30
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 288              		.loc 1 297 0 discriminator 1
 289 000e 4309     		lsrs	r3, r0, #5
 290 0010 0433     		adds	r3, r3, #4
 291 0012 9B00     		lsls	r3, r3, #2
 292 0014 094A     		ldr	r2, .L32
 293 0016 9B58     		ldr	r3, [r3, r2]
 294 0018 1F22     		movs	r2, #31
 295 001a 0240     		ands	r2, r0
 296 001c D340     		lsrs	r3, r3, r2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 297              		.loc 1 296 0 discriminator 1
 298 001e DB07     		lsls	r3, r3, #31
 299 0020 05D4     		bmi	.L31
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 300              		.loc 1 304 0
 301 0022 0124     		movs	r4, #1
 302 0024 04E0     		b	.L27
 303              	.L29:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 55


 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 304              		.loc 1 289 0
 305 0026 1124     		movs	r4, #17
 306 0028 02E0     		b	.L27
 307              	.L30:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 308              		.loc 1 304 0
 309 002a 0124     		movs	r4, #1
 310 002c 00E0     		b	.L27
 311              	.L31:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 312              		.loc 1 300 0
 313 002e 0024     		movs	r4, #0
 314              	.L27:
 315              	.LVL26:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316              		.loc 1 311 0
 317 0030 002C     		cmp	r4, #0
 318 0032 01D1     		bne	.L28
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 319              		.loc 1 324 0
 320 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 321              	.LVL27:
 322              	.L28:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 323              		.loc 1 340 0
 324 0038 2000     		movs	r0, r4
 325              		@ sp needed
 326              	.LVL28:
 327 003a 10BD     		pop	{r4, pc}
 328              	.L33:
 329              		.align	2
 330              	.L32:
 331 003c 00000000 		.word	CapSense_dsRam
 332              		.cfi_endproc
 333              	.LFE2:
 334              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 335              		.section	.text.CapSense_Scan,"ax",%progbits
 336              		.align	2
 337              		.global	CapSense_Scan
 338              		.code	16
 339              		.thumb_func
 340              		.type	CapSense_Scan, %function
 341              	CapSense_Scan:
 342              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 343              		.loc 1 366 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 4, -8
 350              		.cfi_offset 14, -4
 351              	.LVL29:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 352              		.loc 1 369 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 56


 353 0002 084B     		ldr	r3, .L40
 354 0004 DB68     		ldr	r3, [r3, #12]
 355 0006 DB03     		lsls	r3, r3, #15
 356 0008 07D4     		bmi	.L37
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 357              		.loc 1 376 0
 358 000a 074B     		ldr	r3, .L40+4
 359 000c 1B78     		ldrb	r3, [r3]
 360 000e 012B     		cmp	r3, #1
 361 0010 05D1     		bne	.L39
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 362              		.loc 1 385 0
 363 0012 FFF7FEFF 		bl	CapSense_CSDScan
 364              	.LVL30:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 365              		.loc 1 367 0
 366 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 367              		.loc 1 386 0
 368 0018 03E0     		b	.L35
 369              	.L37:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 370              		.loc 1 372 0
 371 001a 1120     		movs	r0, #17
 372 001c 01E0     		b	.L35
 373              	.L39:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 374              		.loc 1 394 0
 375 001e 0120     		movs	r0, #1
 376 0020 4042     		rsbs	r0, r0, #0
 377              	.L35:
 378              	.LVL31:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 379              		.loc 1 399 0
 380              		@ sp needed
 381 0022 10BD     		pop	{r4, pc}
 382              	.L41:
 383              		.align	2
 384              	.L40:
 385 0024 00000000 		.word	CapSense_dsRam
 386 0028 00000000 		.word	.LANCHOR0
 387              		.cfi_endproc
 388              	.LFE3:
 389              		.size	CapSense_Scan, .-CapSense_Scan
 390              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 391              		.align	2
 392              		.global	CapSense_ScanAllWidgets
 393              		.code	16
 394              		.thumb_func
 395              		.type	CapSense_ScanAllWidgets, %function
 396              	CapSense_ScanAllWidgets:
 397              	.LFB4:
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 398              		.loc 1 428 0
 399              		.cfi_startproc
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 57


 402 0000 10B5     		push	{r4, lr}
 403              		.cfi_def_cfa_offset 8
 404              		.cfi_offset 4, -8
 405              		.cfi_offset 14, -4
 406              	.LVL32:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 407              		.loc 1 433 0
 408 0002 0F4B     		ldr	r3, .L50
 409 0004 DB68     		ldr	r3, [r3, #12]
 410 0006 1B06     		lsls	r3, r3, #24
 411 0008 18D4     		bmi	.L49
 412 000a 0024     		movs	r4, #0
 413 000c 0120     		movs	r0, #1
 414 000e 4042     		rsbs	r0, r0, #0
 415 0010 11E0     		b	.L44
 416              	.LVL33:
 417              	.L48:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 418              		.loc 1 449 0
 419 0012 2000     		movs	r0, r4
 420              	.LVL34:
 421 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 422              	.LVL35:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 423              		.loc 1 451 0
 424 0018 0028     		cmp	r0, #0
 425 001a 0BD1     		bne	.L45
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 426              		.loc 1 455 0
 427 001c 202C     		cmp	r4, #32
 428 001e 03D8     		bhi	.L46
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 429              		.loc 1 458 0
 430 0020 0122     		movs	r2, #1
 431 0022 084B     		ldr	r3, .L50+4
 432 0024 5A70     		strb	r2, [r3, #1]
 433 0026 02E0     		b	.L47
 434              	.L46:
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 435              		.loc 1 463 0
 436 0028 0022     		movs	r2, #0
 437 002a 064B     		ldr	r3, .L50+4
 438 002c 5A70     		strb	r2, [r3, #1]
 439              	.L47:
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 440              		.loc 1 473 0
 441 002e FFF7FEFF 		bl	CapSense_Scan
 442              	.LVL36:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 443              		.loc 1 475 0
 444 0032 04E0     		b	.L43
 445              	.L45:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 446              		.loc 1 446 0
 447 0034 0134     		adds	r4, r4, #1
 448              	.LVL37:
 449              	.L44:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 58


 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 450              		.loc 1 444 0 discriminator 1
 451 0036 212C     		cmp	r4, #33
 452 0038 EBD9     		bls	.L48
 453 003a 00E0     		b	.L43
 454              	.LVL38:
 455              	.L49:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 456              		.loc 1 436 0
 457 003c 1120     		movs	r0, #17
 458              	.LVL39:
 459              	.L43:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 460              		.loc 1 481 0
 461              		@ sp needed
 462 003e 10BD     		pop	{r4, pc}
 463              	.L51:
 464              		.align	2
 465              	.L50:
 466 0040 00000000 		.word	CapSense_dsRam
 467 0044 00000000 		.word	.LANCHOR0
 468              		.cfi_endproc
 469              	.LFE4:
 470              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 471              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 472              		.align	2
 473              		.global	CapSense_SetupWidgetExt
 474              		.code	16
 475              		.thumb_func
 476              		.type	CapSense_SetupWidgetExt, %function
 477              	CapSense_SetupWidgetExt:
 478              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 479              		.loc 1 536 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483              	.LVL40:
 484 0000 10B5     		push	{r4, lr}
 485              		.cfi_def_cfa_offset 8
 486              		.cfi_offset 4, -8
 487              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 488              		.loc 1 539 0
 489 0002 124B     		ldr	r3, .L59
 490 0004 DB68     		ldr	r3, [r3, #12]
 491 0006 DB03     		lsls	r3, r3, #15
 492 0008 13D4     		bmi	.L55
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 493              		.loc 1 549 0
 494 000a 2128     		cmp	r0, #33
 495 000c 13D8     		bhi	.L56
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 496              		.loc 1 550 0 discriminator 1
 497 000e 4309     		lsrs	r3, r0, #5
 498 0010 0433     		adds	r3, r3, #4
 499 0012 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 59


 500 0014 0D4A     		ldr	r2, .L59
 501 0016 9B58     		ldr	r3, [r3, r2]
 502 0018 1F22     		movs	r2, #31
 503 001a 0240     		ands	r2, r0
 504 001c D340     		lsrs	r3, r3, r2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 505              		.loc 1 549 0 discriminator 1
 506 001e DB07     		lsls	r3, r3, #31
 507 0020 0BD5     		bpl	.L57
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 508              		.loc 1 551 0
 509 0022 4301     		lsls	r3, r0, #5
 510 0024 0A4A     		ldr	r2, .L59+4
 511 0026 D318     		adds	r3, r2, r3
 512 0028 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 513              		.loc 1 550 0
 514 002a 8B42     		cmp	r3, r1
 515 002c 07D8     		bhi	.L58
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 516              		.loc 1 558 0
 517 002e 0124     		movs	r4, #1
 518 0030 06E0     		b	.L53
 519              	.L55:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 520              		.loc 1 542 0
 521 0032 1124     		movs	r4, #17
 522 0034 04E0     		b	.L53
 523              	.L56:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 524              		.loc 1 558 0
 525 0036 0124     		movs	r4, #1
 526 0038 02E0     		b	.L53
 527              	.L57:
 528 003a 0124     		movs	r4, #1
 529 003c 00E0     		b	.L53
 530              	.L58:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 531              		.loc 1 554 0
 532 003e 0024     		movs	r4, #0
 533              	.L53:
 534              	.LVL41:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 535              		.loc 1 565 0
 536 0040 002C     		cmp	r4, #0
 537 0042 01D1     		bne	.L54
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 538              		.loc 1 578 0
 539 0044 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 540              	.LVL42:
 541              	.L54:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 542              		.loc 1 594 0
 543 0048 2000     		movs	r0, r4
 544              		@ sp needed
 545              	.LVL43:
 546 004a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 60


 547              	.L60:
 548              		.align	2
 549              	.L59:
 550 004c 00000000 		.word	CapSense_dsRam
 551 0050 00000000 		.word	CapSense_dsFlash
 552              		.cfi_endproc
 553              	.LFE5:
 554              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 555              		.section	.text.CapSense_ScanExt,"ax",%progbits
 556              		.align	2
 557              		.global	CapSense_ScanExt
 558              		.code	16
 559              		.thumb_func
 560              		.type	CapSense_ScanExt, %function
 561              	CapSense_ScanExt:
 562              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 563              		.loc 1 642 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 0
 566              		@ frame_needed = 0, uses_anonymous_args = 0
 567 0000 10B5     		push	{r4, lr}
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 4, -8
 570              		.cfi_offset 14, -4
 571              	.LVL44:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 572              		.loc 1 645 0
 573 0002 084B     		ldr	r3, .L67
 574 0004 DB68     		ldr	r3, [r3, #12]
 575 0006 DB03     		lsls	r3, r3, #15
 576 0008 07D4     		bmi	.L64
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 577              		.loc 1 652 0
 578 000a 074B     		ldr	r3, .L67+4
 579 000c 1B78     		ldrb	r3, [r3]
 580 000e 012B     		cmp	r3, #1
 581 0010 05D1     		bne	.L66
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 582              		.loc 1 661 0
 583 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 584              	.LVL45:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 585              		.loc 1 643 0
 586 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587              		.loc 1 662 0
 588 0018 03E0     		b	.L62
 589              	.L64:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 590              		.loc 1 648 0
 591 001a 1120     		movs	r0, #17
 592 001c 01E0     		b	.L62
 593              	.L66:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 594              		.loc 1 670 0
 595 001e 0120     		movs	r0, #1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 61


 596 0020 4042     		rsbs	r0, r0, #0
 597              	.L62:
 598              	.LVL46:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 599              		.loc 1 675 0
 600              		@ sp needed
 601 0022 10BD     		pop	{r4, pc}
 602              	.L68:
 603              		.align	2
 604              	.L67:
 605 0024 00000000 		.word	CapSense_dsRam
 606 0028 00000000 		.word	.LANCHOR0
 607              		.cfi_endproc
 608              	.LFE6:
 609              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 610              		.section	.text.CapSense_SetPinState,"ax",%progbits
 611              		.align	2
 612              		.global	CapSense_SetPinState
 613              		.code	16
 614              		.thumb_func
 615              		.type	CapSense_SetPinState, %function
 616              	CapSense_SetPinState:
 617              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 618              		.loc 1 841 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 0
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622              	.LVL47:
 623 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 624              		.cfi_def_cfa_offset 24
 625              		.cfi_offset 3, -24
 626              		.cfi_offset 4, -20
 627              		.cfi_offset 5, -16
 628              		.cfi_offset 6, -12
 629              		.cfi_offset 7, -8
 630              		.cfi_offset 14, -4
 631 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 632              		.loc 1 866 0
 633 0004 4001     		lsls	r0, r0, #5
 634              	.LVL48:
 635 0006 244B     		ldr	r3, .L76
 636 0008 C458     		ldr	r4, [r0, r3]
 637 000a CB00     		lsls	r3, r1, #3
 638 000c 591A     		subs	r1, r3, r1
 639              	.LVL49:
 640 000e 8B00     		lsls	r3, r1, #2
 641 0010 E418     		adds	r4, r4, r3
 642              	.LVL50:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 643              		.loc 1 871 0
 644 0012 0025     		movs	r5, #0
 645 0014 3CE0     		b	.L70
 646              	.LVL51:
 647              	.L75:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 62


 648              		.loc 1 874 0
 649 0016 FFF7FEFF 		bl	CyEnterCriticalSection
 650              	.LVL52:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 651              		.loc 1 875 0
 652 001a 2168     		ldr	r1, [r4]
 653 001c 0B68     		ldr	r3, [r1]
 654 001e 277E     		ldrb	r7, [r4, #24]
 655 0020 0F22     		movs	r2, #15
 656 0022 BA40     		lsls	r2, r2, r7
 657 0024 9343     		bics	r3, r2
 658 0026 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 659              		.loc 1 876 0
 660 0028 6168     		ldr	r1, [r4, #4]
 661 002a 0B68     		ldr	r3, [r1]
 662 002c A77E     		ldrb	r7, [r4, #26]
 663 002e 0722     		movs	r2, #7
 664 0030 BA40     		lsls	r2, r2, r7
 665 0032 9343     		bics	r3, r2
 666 0034 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 667              		.loc 1 877 0
 668 0036 FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL53:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670              		.loc 1 879 0
 671 003a 012E     		cmp	r6, #1
 672 003c 17D0     		beq	.L72
 673 003e 002E     		cmp	r6, #0
 674 0040 02D0     		beq	.L73
 675 0042 032E     		cmp	r6, #3
 676 0044 1FD0     		beq	.L74
 677 0046 21E0     		b	.L71
 678              	.L73:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 679              		.loc 1 883 0
 680 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 681              	.LVL54:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 682              		.loc 1 884 0
 683 004c 6268     		ldr	r2, [r4, #4]
 684 004e 1168     		ldr	r1, [r2]
 685 0050 A77E     		ldrb	r7, [r4, #26]
 686 0052 0623     		movs	r3, #6
 687 0054 BB40     		lsls	r3, r3, r7
 688 0056 0B43     		orrs	r3, r1
 689 0058 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 690              		.loc 1 885 0
 691 005a A168     		ldr	r1, [r4, #8]
 692 005c 0B68     		ldr	r3, [r1]
 693 005e 677E     		ldrb	r7, [r4, #25]
 694 0060 0122     		movs	r2, #1
 695 0062 BA40     		lsls	r2, r2, r7
 696 0064 9343     		bics	r3, r2
 697 0066 0B60     		str	r3, [r1]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 63


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 698              		.loc 1 886 0
 699 0068 FFF7FEFF 		bl	CyExitCriticalSection
 700              	.LVL55:
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 701              		.loc 1 887 0
 702 006c 0EE0     		b	.L71
 703              	.L72:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 704              		.loc 1 890 0
 705 006e FFF7FEFF 		bl	CyEnterCriticalSection
 706              	.LVL56:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 707              		.loc 1 891 0
 708 0072 A168     		ldr	r1, [r4, #8]
 709 0074 0B68     		ldr	r3, [r1]
 710 0076 677E     		ldrb	r7, [r4, #25]
 711 0078 0122     		movs	r2, #1
 712 007a BA40     		lsls	r2, r2, r7
 713 007c 9343     		bics	r3, r2
 714 007e 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 715              		.loc 1 892 0
 716 0080 FFF7FEFF 		bl	CyExitCriticalSection
 717              	.LVL57:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718              		.loc 1 893 0
 719 0084 02E0     		b	.L71
 720              	.L74:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 721              		.loc 1 898 0
 722 0086 2000     		movs	r0, r4
 723 0088 FFF7FEFF 		bl	CapSense_CSDConnectSns
 724              	.LVL58:
 725              	.L71:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 726              		.loc 1 933 0 discriminator 2
 727 008c 1C34     		adds	r4, r4, #28
 728              	.LVL59:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 729              		.loc 1 871 0 discriminator 2
 730 008e 0135     		adds	r5, r5, #1
 731              	.LVL60:
 732              	.L70:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 733              		.loc 1 871 0 is_stmt 0 discriminator 1
 734 0090 002D     		cmp	r5, #0
 735 0092 C0D0     		beq	.L75
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736              		.loc 1 935 0 is_stmt 1
 737              		@ sp needed
 738              	.LVL61:
 739              	.LVL62:
 740              	.LVL63:
 741 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 742              	.L77:
 743 0096 C046     		.align	2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 64


 744              	.L76:
 745 0098 00000000 		.word	CapSense_dsFlash
 746              		.cfi_endproc
 747              	.LFE8:
 748              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 749              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 750              		.align	2
 751              		.global	CapSense_SsSetAllIOsState
 752              		.code	16
 753              		.thumb_func
 754              		.type	CapSense_SsSetAllIOsState, %function
 755              	CapSense_SsSetAllIOsState:
 756              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 757              		.loc 1 1167 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL64:
 762 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 763              		.cfi_def_cfa_offset 24
 764              		.cfi_offset 3, -24
 765              		.cfi_offset 4, -20
 766              		.cfi_offset 5, -16
 767              		.cfi_offset 6, -12
 768              		.cfi_offset 7, -8
 769              		.cfi_offset 14, -4
 770 0002 4F46     		mov	r7, r9
 771 0004 4646     		mov	r6, r8
 772 0006 C0B4     		push	{r6, r7}
 773              		.cfi_def_cfa_offset 32
 774              		.cfi_offset 8, -32
 775              		.cfi_offset 9, -28
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 776              		.loc 1 1180 0
 777 0008 0128     		cmp	r0, #1
 778 000a 0BD0     		beq	.L84
 779 000c 0228     		cmp	r0, #2
 780 000e 04D0     		beq	.L81
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 781              		.loc 1 1184 0
 782 0010 0023     		movs	r3, #0
 783 0012 9946     		mov	r9, r3
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 784              		.loc 1 1183 0
 785 0014 0633     		adds	r3, r3, #6
 786 0016 9846     		mov	r8, r3
 787 0018 07E0     		b	.L80
 788              	.L81:
 789              	.LVL65:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 790              		.loc 1 1192 0
 791 001a 0523     		movs	r3, #5
 792 001c 9946     		mov	r9, r3
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 793              		.loc 1 1191 0
 794 001e 0023     		movs	r3, #0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 65


 795 0020 9846     		mov	r8, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 796              		.loc 1 1193 0
 797 0022 02E0     		b	.L80
 798              	.LVL66:
 799              	.L84:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 800              		.loc 1 1188 0
 801 0024 0023     		movs	r3, #0
 802 0026 9946     		mov	r9, r3
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 803              		.loc 1 1187 0
 804 0028 9846     		mov	r8, r3
 805              	.L80:
 806              	.LVL67:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 807              		.loc 1 1201 0
 808 002a 144C     		ldr	r4, .L85
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 809              		.loc 1 1202 0
 810 002c 0025     		movs	r5, #0
 811 002e 1FE0     		b	.L82
 812              	.LVL68:
 813              	.L83:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 814              		.loc 1 1204 0 discriminator 3
 815 0030 FFF7FEFF 		bl	CyEnterCriticalSection
 816              	.LVL69:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 817              		.loc 1 1206 0 discriminator 3
 818 0034 2268     		ldr	r2, [r4]
 819 0036 1368     		ldr	r3, [r2]
 820              	.LVL70:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 821              		.loc 1 1207 0 discriminator 3
 822 0038 2169     		ldr	r1, [r4, #16]
 823 003a 8B43     		bics	r3, r1
 824              	.LVL71:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 825              		.loc 1 1208 0 discriminator 3
 826 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 827              		.loc 1 1210 0 discriminator 3
 828 003e 6668     		ldr	r6, [r4, #4]
 829 0040 3268     		ldr	r2, [r6]
 830              	.LVL72:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 831              		.loc 1 1211 0 discriminator 3
 832 0042 A77E     		ldrb	r7, [r4, #26]
 833 0044 0721     		movs	r1, #7
 834 0046 B940     		lsls	r1, r1, r7
 835 0048 8A43     		bics	r2, r1
 836              	.LVL73:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 837              		.loc 1 1212 0 discriminator 3
 838 004a 4146     		mov	r1, r8
 839 004c B940     		lsls	r1, r1, r7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 66


 840 004e 0A43     		orrs	r2, r1
 841              	.LVL74:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 842              		.loc 1 1213 0 discriminator 3
 843 0050 3260     		str	r2, [r6]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 844              		.loc 1 1215 0 discriminator 3
 845 0052 227E     		ldrb	r2, [r4, #24]
 846              	.LVL75:
 847 0054 4946     		mov	r1, r9
 848 0056 9140     		lsls	r1, r1, r2
 849 0058 0B43     		orrs	r3, r1
 850              	.LVL76:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 851              		.loc 1 1216 0 discriminator 3
 852 005a 2268     		ldr	r2, [r4]
 853 005c 1360     		str	r3, [r2]
 854              	.LVL77:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 855              		.loc 1 1218 0 discriminator 3
 856 005e A268     		ldr	r2, [r4, #8]
 857 0060 1368     		ldr	r3, [r2]
 858              	.LVL78:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 859              		.loc 1 1219 0 discriminator 3
 860 0062 6169     		ldr	r1, [r4, #20]
 861 0064 8B43     		bics	r3, r1
 862              	.LVL79:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 863              		.loc 1 1220 0 discriminator 3
 864 0066 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 865              		.loc 1 1222 0 discriminator 3
 866 0068 FFF7FEFF 		bl	CyExitCriticalSection
 867              	.LVL80:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 868              		.loc 1 1225 0 discriminator 3
 869 006c 1C34     		adds	r4, r4, #28
 870              	.LVL81:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 871              		.loc 1 1202 0 discriminator 3
 872 006e 0135     		adds	r5, r5, #1
 873              	.LVL82:
 874              	.L82:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 875              		.loc 1 1202 0 is_stmt 0 discriminator 1
 876 0070 212D     		cmp	r5, #33
 877 0072 DDD9     		bls	.L83
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 878              		.loc 1 1238 0 is_stmt 1
 879              		@ sp needed
 880              	.LVL83:
 881              	.LVL84:
 882              	.LVL85:
 883              	.LVL86:
 884 0074 0CBC     		pop	{r2, r3}
 885 0076 9046     		mov	r8, r2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 67


 886 0078 9946     		mov	r9, r3
 887 007a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 888              	.L86:
 889              		.align	2
 890              	.L85:
 891 007c 00000000 		.word	CapSense_ioList
 892              		.cfi_endproc
 893              	.LFE11:
 894              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 895              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 896              		.align	2
 897              		.global	CapSense_SsPostAllWidgetsScan
 898              		.code	16
 899              		.thumb_func
 900              		.type	CapSense_SsPostAllWidgetsScan, %function
 901              	CapSense_SsPostAllWidgetsScan:
 902              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 903              		.loc 1 1317 0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 10B5     		push	{r4, lr}
 908              		.cfi_def_cfa_offset 8
 909              		.cfi_offset 4, -8
 910              		.cfi_offset 14, -4
 911              	.L92:
1328:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 912              		.loc 1 1328 0
 913 0002 1B4A     		ldr	r2, .L93
 914 0004 9378     		ldrb	r3, [r2, #2]
 915 0006 0133     		adds	r3, r3, #1
 916 0008 DBB2     		uxtb	r3, r3
 917 000a 9370     		strb	r3, [r2, #2]
1330:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 918              		.loc 1 1330 0
 919 000c 9078     		ldrb	r0, [r2, #2]
 920 000e C0B2     		uxtb	r0, r0
 921 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 922              	.LVL87:
 923 0014 041E     		subs	r4, r0, #0
 924              	.LVL88:
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 925              		.loc 1 1332 0
 926 0016 09D1     		bne	.L88
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 927              		.loc 1 1334 0
 928 0018 154B     		ldr	r3, .L93
 929 001a 9B78     		ldrb	r3, [r3, #2]
 930 001c 212B     		cmp	r3, #33
 931 001e 02D1     		bne	.L89
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 932              		.loc 1 1337 0
 933 0020 0022     		movs	r2, #0
 934 0022 134B     		ldr	r3, .L93
 935 0024 5A70     		strb	r2, [r3, #1]
 936              	.L89:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 68


1339:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 937              		.loc 1 1339 0
 938 0026 FFF7FEFF 		bl	CapSense_Scan
 939              	.LVL89:
 940 002a 1EE0     		b	.L90
 941              	.LVL90:
 942              	.L88:
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 943              		.loc 1 1341 0
 944 002c 104B     		ldr	r3, .L93
 945 002e 9B78     		ldrb	r3, [r3, #2]
 946 0030 212B     		cmp	r3, #33
 947 0032 11D1     		bne	.L91
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 948              		.loc 1 1355 0
 949 0034 0F4B     		ldr	r3, .L93+4
 950 0036 1A89     		ldrh	r2, [r3, #8]
 951 0038 0132     		adds	r2, r2, #1
 952 003a 1A81     		strh	r2, [r3, #8]
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 953              		.loc 1 1357 0
 954 003c DA68     		ldr	r2, [r3, #12]
 955 003e 8021     		movs	r1, #128
 956 0040 8A43     		bics	r2, r1
 957 0042 DA60     		str	r2, [r3, #12]
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 958              		.loc 1 1360 0
 959 0044 DA68     		ldr	r2, [r3, #12]
 960 0046 1202     		lsls	r2, r2, #8
 961 0048 120A     		lsrs	r2, r2, #8
 962 004a DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 963              		.loc 1 1361 0
 964 004c DA68     		ldr	r2, [r3, #12]
 965 004e 0406     		lsls	r4, r0, #24
 966 0050 1443     		orrs	r4, r2
 967 0052 DC60     		str	r4, [r3, #12]
 968              	.LVL91:
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 969              		.loc 1 1364 0
 970 0054 0024     		movs	r4, #0
 971 0056 08E0     		b	.L90
 972              	.LVL92:
 973              	.L91:
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 974              		.loc 1 1369 0
 975 0058 064A     		ldr	r2, .L93+4
 976 005a D368     		ldr	r3, [r2, #12]
 977 005c 1B02     		lsls	r3, r3, #8
 978 005e 1B0A     		lsrs	r3, r3, #8
 979 0060 D360     		str	r3, [r2, #12]
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 980              		.loc 1 1370 0
 981 0062 D168     		ldr	r1, [r2, #12]
 982 0064 0306     		lsls	r3, r0, #24
 983 0066 0B43     		orrs	r3, r1
 984 0068 D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 69


 985              	.LVL93:
 986              	.L90:
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 987              		.loc 1 1372 0
 988 006a 002C     		cmp	r4, #0
 989 006c C9D1     		bne	.L92
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 990              		.loc 1 1374 0
 991              		@ sp needed
 992              	.LVL94:
 993 006e 10BD     		pop	{r4, pc}
 994              	.L94:
 995              		.align	2
 996              	.L93:
 997 0070 00000000 		.word	.LANCHOR0
 998 0074 00000000 		.word	CapSense_dsRam
 999              		.cfi_endproc
 1000              	.LFE12:
 1001              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 1002              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 1003              		.align	2
 1004              		.global	CapSense_SsIsrInitialize
 1005              		.code	16
 1006              		.thumb_func
 1007              		.type	CapSense_SsIsrInitialize, %function
 1008              	CapSense_SsIsrInitialize:
 1009              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 1010              		.loc 1 1394 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL95:
 1015 0000 10B5     		push	{r4, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 4, -8
 1018              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1019              		.loc 1 1395 0
 1020 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 1021              	.LVL96:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1022              		.loc 1 1396 0
 1023              		@ sp needed
 1024 0006 10BD     		pop	{r4, pc}
 1025              		.cfi_endproc
 1026              	.LFE13:
 1027              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 1028              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 1029              		.align	2
 1030              		.global	CapSense_SsSetModClkClockDivider
 1031              		.code	16
 1032              		.thumb_func
 1033              		.type	CapSense_SsSetModClkClockDivider, %function
 1034              	CapSense_SsSetModClkClockDivider:
 1035              	.LFB14:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 70


 1036              		.loc 1 1417 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041              	.LVL97:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 1042              		.loc 1 1420 0
 1043 0000 074A     		ldr	r2, .L98
 1044 0002 084B     		ldr	r3, .L98+4
 1045 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1046              		.loc 1 1430 0
 1047 0006 0138     		subs	r0, r0, #1
 1048              	.LVL98:
 1049 0008 0002     		lsls	r0, r0, #8
 1050              	.LVL99:
 1051 000a 074B     		ldr	r3, .L98+8
 1052 000c 1860     		str	r0, [r3]
 1053              	.L97:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1054              		.loc 1 1433 0 discriminator 1
 1055 000e 054B     		ldr	r3, .L98+4
 1056 0010 1B68     		ldr	r3, [r3]
 1057 0012 002B     		cmp	r3, #0
 1058 0014 FBDB     		blt	.L97
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 1059              		.loc 1 1439 0
 1060 0016 054A     		ldr	r2, .L98+12
 1061 0018 024B     		ldr	r3, .L98+4
 1062 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1063              		.loc 1 1464 0
 1064              		@ sp needed
 1065 001c 7047     		bx	lr
 1066              	.L99:
 1067 001e C046     		.align	2
 1068              	.L98:
 1069 0020 40000040 		.word	1073741888
 1070 0024 00000140 		.word	1073807360
 1071 0028 00030140 		.word	1073808128
 1072 002c 40FF0080 		.word	-2147418304
 1073              		.cfi_endproc
 1074              	.LFE14:
 1075              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 1076              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 1077              		.align	2
 1078              		.global	CapSense_SsSetSnsClockDivider
 1079              		.code	16
 1080              		.thumb_func
 1081              		.type	CapSense_SsSetSnsClockDivider, %function
 1082              	CapSense_SsSetSnsClockDivider:
 1083              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1084              		.loc 1 1485 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 71


 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              		@ link register save eliminated.
 1089              	.LVL100:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1090              		.loc 1 1494 0
 1091 0000 034A     		ldr	r2, .L101
 1092 0002 1368     		ldr	r3, [r2]
 1093              	.LVL101:
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1094              		.loc 1 1495 0
 1095 0004 1B0B     		lsrs	r3, r3, #12
 1096              	.LVL102:
 1097 0006 1B03     		lsls	r3, r3, #12
 1098              	.LVL103:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1099              		.loc 1 1496 0
 1100 0008 0138     		subs	r0, r0, #1
 1101              	.LVL104:
 1102 000a 1843     		orrs	r0, r3
 1103              	.LVL105:
1497:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1104              		.loc 1 1497 0
 1105 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1106              		.loc 1 1546 0
 1107              		@ sp needed
 1108 000e 7047     		bx	lr
 1109              	.L102:
 1110              		.align	2
 1111              	.L101:
 1112 0010 00020B40 		.word	1074463232
 1113              		.cfi_endproc
 1114              	.LFE15:
 1115              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1116              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1117              		.align	2
 1118              		.global	CapSense_SsSetClockDividers
 1119              		.code	16
 1120              		.thumb_func
 1121              		.type	CapSense_SsSetClockDividers, %function
 1122              	CapSense_SsSetClockDividers:
 1123              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 1124              		.loc 1 1569 0
 1125              		.cfi_startproc
 1126              		@ args = 0, pretend = 0, frame = 0
 1127              		@ frame_needed = 0, uses_anonymous_args = 0
 1128              	.LVL106:
 1129 0000 10B5     		push	{r4, lr}
 1130              		.cfi_def_cfa_offset 8
 1131              		.cfi_offset 4, -8
 1132              		.cfi_offset 14, -4
 1133 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1134              		.loc 1 1571 0
 1135 0004 0800     		movs	r0, r1
 1136              	.LVL107:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 72


 1137 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1138              	.LVL108:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1139              		.loc 1 1574 0
 1140 000a 2000     		movs	r0, r4
 1141 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1142              	.LVL109:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1143              		.loc 1 1575 0
 1144              		@ sp needed
 1145              	.LVL110:
 1146 0010 10BD     		pop	{r4, pc}
 1147              		.cfi_endproc
 1148              	.LFE16:
 1149              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1150 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1151              		.align	2
 1152              		.global	CapSense_CalibrateWidget
 1153              		.code	16
 1154              		.thumb_func
 1155              		.type	CapSense_CalibrateWidget, %function
 1156              	CapSense_CalibrateWidget:
 1157              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1158              		.loc 1 1621 0
 1159              		.cfi_startproc
 1160              		@ args = 0, pretend = 0, frame = 0
 1161              		@ frame_needed = 0, uses_anonymous_args = 0
 1162              	.LVL111:
 1163 0000 10B5     		push	{r4, lr}
 1164              		.cfi_def_cfa_offset 8
 1165              		.cfi_offset 4, -8
 1166              		.cfi_offset 14, -4
 1167 0002 0300     		movs	r3, r0
 1168              	.LVL112:
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1169              		.loc 1 1626 0
 1170 0004 2128     		cmp	r0, #33
 1171 0006 01D8     		bhi	.L107
1622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1172              		.loc 1 1622 0
 1173 0008 0020     		movs	r0, #0
 1174              	.LVL113:
 1175 000a 00E0     		b	.L105
 1176              	.LVL114:
 1177              	.L107:
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1178              		.loc 1 1628 0
 1179 000c 0120     		movs	r0, #1
 1180              	.LVL115:
 1181              	.L105:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1182              		.loc 1 1646 0
 1183 000e 0028     		cmp	r0, #0
 1184 0010 03D1     		bne	.L106
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1185              		.loc 1 1685 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 73


 1186 0012 5521     		movs	r1, #85
 1187 0014 1800     		movs	r0, r3
 1188              	.LVL116:
 1189 0016 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1190              	.LVL117:
 1191              	.L106:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1192              		.loc 1 1701 0
 1193              		@ sp needed
 1194 001a 10BD     		pop	{r4, pc}
 1195              		.cfi_endproc
 1196              	.LFE17:
 1197              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1198              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1199              		.align	2
 1200              		.global	CapSense_CalibrateAllWidgets
 1201              		.code	16
 1202              		.thumb_func
 1203              		.type	CapSense_CalibrateAllWidgets, %function
 1204              	CapSense_CalibrateAllWidgets:
 1205              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1206              		.loc 1 1738 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 0
 1209              		@ frame_needed = 0, uses_anonymous_args = 0
 1210 0000 70B5     		push	{r4, r5, r6, lr}
 1211              		.cfi_def_cfa_offset 16
 1212              		.cfi_offset 4, -16
 1213              		.cfi_offset 5, -12
 1214              		.cfi_offset 6, -8
 1215              		.cfi_offset 14, -4
 1216              	.LVL118:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1217              		.loc 1 1742 0
 1218 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1219              		.loc 1 1739 0
 1220 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1221              		.loc 1 1742 0
 1222 0006 04E0     		b	.L109
 1223              	.LVL119:
 1224              	.L110:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1225              		.loc 1 1744 0 discriminator 3
 1226 0008 2000     		movs	r0, r4
 1227 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1228              	.LVL120:
 1229 000e 0543     		orrs	r5, r0
 1230              	.LVL121:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1231              		.loc 1 1742 0 discriminator 3
 1232 0010 0134     		adds	r4, r4, #1
 1233              	.LVL122:
 1234              	.L109:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 74


 1235              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1236 0012 212C     		cmp	r4, #33
 1237 0014 F8D9     		bls	.L110
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1238              		.loc 1 1748 0 is_stmt 1
 1239 0016 2800     		movs	r0, r5
 1240              		@ sp needed
 1241              	.LVL123:
 1242              	.LVL124:
 1243 0018 70BD     		pop	{r4, r5, r6, pc}
 1244              		.cfi_endproc
 1245              	.LFE18:
 1246              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1247 001a C046     		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1248              		.align	2
 1249              		.global	CapSense_SsCSDGetColSnsClkDivider
 1250              		.code	16
 1251              		.thumb_func
 1252              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1253              	CapSense_SsCSDGetColSnsClkDivider:
 1254              	.LFB25:
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 75


 1255              		.loc 1 2793 0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 1260              	.LVL125:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1261              		.loc 1 2800 0
 1262 0000 4001     		lsls	r0, r0, #5
 1263              	.LVL126:
 1264 0002 024B     		ldr	r3, .L112
 1265 0004 1818     		adds	r0, r3, r0
 1266 0006 4368     		ldr	r3, [r0, #4]
 1267              	.LVL127:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1268              		.loc 1 2803 0
 1269 0008 9889     		ldrh	r0, [r3, #12]
 1270              	.LVL128:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1271              		.loc 1 2811 0
 1272              		@ sp needed
 1273 000a 7047     		bx	lr
 1274              	.L113:
 1275              		.align	2
 1276              	.L112:
 1277 000c 00000000 		.word	CapSense_dsFlash
 1278              		.cfi_endproc
 1279              	.LFE25:
 1280              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1281              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1282              		.align	2
 1283              		.global	CapSense_SsCSDCalcPrsSize
 1284              		.code	16
 1285              		.thumb_func
 1286              		.type	CapSense_SsCSDCalcPrsSize, %function
 1287              	CapSense_SsCSDCalcPrsSize:
 1288              	.LFB26:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 76


2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 77


2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1289              		.loc 1 2881 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 0
 1292              		@ frame_needed = 0, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294              	.LVL129:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1295              		.loc 1 2897 0
 1296 0000 0203     		lsls	r2, r0, #12
 1297 0002 121A     		subs	r2, r2, r0
 1298 0004 0123     		movs	r3, #1
 1299 0006 8B40     		lsls	r3, r3, r1
 1300 0008 013B     		subs	r3, r3, #1
 1301 000a 9A42     		cmp	r2, r3
 1302 000c 05D9     		bls	.L116
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1303              		.loc 1 2902 0
 1304 000e 0202     		lsls	r2, r0, #8
 1305 0010 101A     		subs	r0, r2, r0
 1306              	.LVL130:
 1307 0012 8342     		cmp	r3, r0
 1308 0014 03D3     		bcc	.L117
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1309              		.loc 1 2905 0
 1310 0016 0520     		movs	r0, #5
 1311 0018 02E0     		b	.L115
 1312              	.LVL131:
 1313              	.L116:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 78


2900:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1314              		.loc 1 2900 0
 1315 001a 0620     		movs	r0, #6
 1316              	.LVL132:
 1317 001c 00E0     		b	.L115
 1318              	.L117:
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1319              		.loc 1 2910 0
 1320 001e 0020     		movs	r0, #0
 1321              	.L115:
 1322              	.LVL133:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1323              		.loc 1 2913 0
 1324 0020 C0B2     		uxtb	r0, r0
 1325              	.LVL134:
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1326              		.loc 1 2914 0
 1327              		@ sp needed
 1328 0022 7047     		bx	lr
 1329              		.cfi_endproc
 1330              	.LFE26:
 1331              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1332              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1333              		.align	2
 1334              		.code	16
 1335              		.thumb_func
 1336              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1337              	CapSense_SsSetWidgetSenseClkSrc:
 1338              	.LFB22:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1339              		.loc 1 2458 0
 1340              		.cfi_startproc
 1341              		@ args = 0, pretend = 0, frame = 0
 1342              		@ frame_needed = 0, uses_anonymous_args = 0
 1343              	.LVL135:
 1344 0000 70B5     		push	{r4, r5, r6, lr}
 1345              		.cfi_def_cfa_offset 16
 1346              		.cfi_offset 4, -16
 1347              		.cfi_offset 5, -12
 1348              		.cfi_offset 6, -8
 1349              		.cfi_offset 14, -4
 1350 0002 0E00     		movs	r6, r1
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1351              		.loc 1 2470 0
 1352 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1353              	.LVL136:
 1354 0008 0500     		movs	r5, r0
 1355              	.LVL137:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1356              		.loc 1 2473 0
 1357 000a 3188     		ldrh	r1, [r6]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 79


 1358 000c 0022     		movs	r2, #0
 1359 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1360              	.LVL138:
 1361 0012 0100     		movs	r1, r0
 1362              	.LVL139:
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1363              		.loc 1 2475 0
 1364 0014 2800     		movs	r0, r5
 1365              	.LVL140:
 1366 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1367              	.LVL141:
 1368 001a 041E     		subs	r4, r0, #0
 1369              	.LVL142:
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1370              		.loc 1 2476 0
 1371 001c 04D1     		bne	.L119
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1372              		.loc 1 2482 0
 1373 001e 6800     		lsls	r0, r5, #1
 1374              	.LVL143:
 1375 0020 3188     		ldrh	r1, [r6]
 1376 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1377              	.LVL144:
 1378 0026 0400     		movs	r4, r0
 1379              	.LVL145:
 1380              	.L119:
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1381              		.loc 1 2484 0
 1382 0028 2100     		movs	r1, r4
 1383 002a 2800     		movs	r0, r5
 1384 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1385              	.LVL146:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1386              		.loc 1 2499 0
 1387 0030 0001     		lsls	r0, r0, #4
 1388              	.LVL147:
 1389 0032 C0B2     		uxtb	r0, r0
 1390 0034 2043     		orrs	r0, r4
 1391 0036 B073     		strb	r0, [r6, #14]
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1392              		.loc 1 2534 0
 1393              		@ sp needed
 1394              	.LVL148:
 1395              	.LVL149:
 1396              	.LVL150:
 1397 0038 70BD     		pop	{r4, r5, r6, pc}
 1398              		.cfi_endproc
 1399              	.LFE22:
 1400              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1401 003a C046     		.section	.text.CapSense_SsAutoTuneWidget,"ax",%progbits
 1402              		.align	2
 1403              		.global	CapSense_SsAutoTuneWidget
 1404              		.code	16
 1405              		.thumb_func
 1406              		.type	CapSense_SsAutoTuneWidget, %function
 1407              	CapSense_SsAutoTuneWidget:
 1408              	.LFB19:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 80


1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1409              		.loc 1 1781 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 32
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              	.LVL151:
 1414 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1415              		.cfi_def_cfa_offset 20
 1416              		.cfi_offset 4, -20
 1417              		.cfi_offset 5, -16
 1418              		.cfi_offset 6, -12
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 4746     		mov	r7, r8
 1422 0004 80B4     		push	{r7}
 1423              		.cfi_def_cfa_offset 24
 1424              		.cfi_offset 8, -24
 1425 0006 88B0     		sub	sp, sp, #32
 1426              		.cfi_def_cfa_offset 56
 1427 0008 0500     		movs	r5, r0
 1428              	.LVL152:
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 1429              		.loc 1 1801 0
 1430 000a 4301     		lsls	r3, r0, #5
 1431 000c 4A4A     		ldr	r2, .L130
 1432 000e D318     		adds	r3, r2, r3
 1433              	.LVL153:
 1434 0010 5C68     		ldr	r4, [r3, #4]
 1435              	.LVL154:
1802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1436              		.loc 1 1802 0
 1437 0012 9F68     		ldr	r7, [r3, #8]
 1438              	.LVL155:
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1439              		.loc 1 1807 0
 1440 0014 4423     		movs	r3, #68
 1441              	.LVL156:
 1442 0016 494A     		ldr	r2, .L130+4
 1443 0018 D15C     		ldrb	r1, [r2, r3]
 1444 001a 4948     		ldr	r0, .L130+8
 1445              	.LVL157:
 1446 001c FFF7FEFF 		bl	__aeabi_uidiv
 1447              	.LVL158:
 1448 0020 8046     		mov	r8, r0
 1449              	.LVL159:
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
 1450              		.loc 1 1834 0
 1451 0022 FA20     		movs	r0, #250
 1452              	.LVL160:
 1453 0024 8000     		lsls	r0, r0, #2
 1454 0026 4346     		mov	r3, r8
 1455 0028 5843     		muls	r0, r3
 1456              	.LVL161:
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1457              		.loc 1 1835 0
 1458 002a 4649     		ldr	r1, .L130+12
 1459 002c FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 81


 1460              	.LVL162:
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1461              		.loc 1 1837 0
 1462 0030 FA23     		movs	r3, #250
 1463 0032 1B01     		lsls	r3, r3, #4
 1464 0034 9842     		cmp	r0, r3
 1465 0036 00D8     		bhi	.L121
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 1466              		.loc 1 1812 0
 1467 0038 1800     		movs	r0, r3
 1468              	.LVL163:
 1469              	.L121:
1842:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1470              		.loc 1 1842 0
 1471 003a 434B     		ldr	r3, .L130+16
 1472 003c 9C46     		mov	ip, r3
 1473 003e 6044     		add	r0, r0, ip
 1474              	.LVL164:
 1475 0040 FA21     		movs	r1, #250
 1476 0042 8900     		lsls	r1, r1, #2
 1477 0044 FFF7FEFF 		bl	__aeabi_uidiv
 1478              	.LVL165:
 1479 0048 0600     		movs	r6, r0
 1480              	.LVL166:
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1481              		.loc 1 1845 0
 1482 004a C307     		lsls	r3, r0, #31
 1483 004c 00D5     		bpl	.L122
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1484              		.loc 1 1847 0
 1485 004e 0136     		adds	r6, r6, #1
 1486              	.LVL167:
 1487              	.L122:
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
 1488              		.loc 1 1851 0
 1489 0050 01AB     		add	r3, sp, #4
 1490 0052 4246     		mov	r2, r8
 1491 0054 DA82     		strh	r2, [r3, #22]
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1492              		.loc 1 1852 0
 1493 0056 FA22     		movs	r2, #250
 1494 0058 9200     		lsls	r2, r2, #2
 1495 005a 1A82     		strh	r2, [r3, #16]
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
 1496              		.loc 1 1853 0
 1497 005c 3B4A     		ldr	r2, .L130+20
 1498 005e 5A82     		strh	r2, [r3, #18]
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
 1499              		.loc 1 1854 0
 1500 0060 228A     		ldrh	r2, [r4, #16]
 1501 0062 9A82     		strh	r2, [r3, #20]
1855:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1502              		.loc 1 1855 0
 1503 0064 2200     		movs	r2, r4
 1504 0066 1232     		adds	r2, r2, #18
 1505 0068 0492     		str	r2, [sp, #16]
1864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 82


 1506              		.loc 1 1864 0
 1507 006a 0C23     		movs	r3, #12
 1508 006c 2380     		strh	r3, [r4]
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1509              		.loc 1 1866 0
 1510 006e 3849     		ldr	r1, .L130+24
 1511 0070 4046     		mov	r0, r8
 1512 0072 FFF7FEFF 		bl	__aeabi_uidiv
 1513              	.LVL168:
 1514 0076 A081     		strh	r0, [r4, #12]
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1515              		.loc 1 1867 0
 1516 0078 0023     		movs	r3, #0
 1517 007a A373     		strb	r3, [r4, #14]
1875:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1518              		.loc 1 1875 0
 1519 007c 5521     		movs	r1, #85
 1520 007e 2800     		movs	r0, r5
 1521 0080 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1522              	.LVL169:
1793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1523              		.loc 1 1793 0
 1524 0084 0021     		movs	r1, #0
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
 1525              		.loc 1 1791 0
 1526 0086 0023     		movs	r3, #0
 1527 0088 9C46     		mov	ip, r3
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1528              		.loc 1 1878 0
 1529 008a 0022     		movs	r2, #0
 1530 008c 07E0     		b	.L123
 1531              	.LVL170:
 1532              	.L125:
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1533              		.loc 1 1881 0
 1534 008e 7B7A     		ldrb	r3, [r7, #9]
 1535 0090 9942     		cmp	r1, r3
 1536 0092 02D2     		bcs	.L124
 1537              	.LVL171:
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1538              		.loc 1 1887 0
 1539 0094 3988     		ldrh	r1, [r7]
 1540 0096 8C46     		mov	ip, r1
 1541              	.LVL172:
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
 1542              		.loc 1 1886 0
 1543 0098 1900     		movs	r1, r3
 1544              	.LVL173:
 1545              	.L124:
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1546              		.loc 1 1898 0 discriminator 2
 1547 009a 0A37     		adds	r7, r7, #10
 1548              	.LVL174:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1549              		.loc 1 1878 0 discriminator 2
 1550 009c 0132     		adds	r2, r2, #1
 1551              	.LVL175:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 83


 1552              	.L123:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1553              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1554 009e 6B01     		lsls	r3, r5, #5
 1555 00a0 2548     		ldr	r0, .L130
 1556 00a2 C318     		adds	r3, r0, r3
 1557 00a4 DB7E     		ldrb	r3, [r3, #27]
 1558 00a6 9A42     		cmp	r2, r3
 1559 00a8 F1D3     		bcc	.L125
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
 1560              		.loc 1 1902 0 is_stmt 1
 1561 00aa 637A     		ldrb	r3, [r4, #9]
 1562 00ac 01AF     		add	r7, sp, #4
 1563              	.LVL176:
 1564 00ae BB76     		strb	r3, [r7, #26]
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
 1565              		.loc 1 1903 0
 1566 00b0 F976     		strb	r1, [r7, #27]
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1567              		.loc 1 1904 0
 1568 00b2 A37A     		ldrb	r3, [r4, #10]
 1569 00b4 DB00     		lsls	r3, r3, #3
 1570 00b6 274A     		ldr	r2, .L130+28
 1571              	.LVL177:
 1572 00b8 D318     		adds	r3, r2, r3
 1573 00ba 5B68     		ldr	r3, [r3, #4]
 1574 00bc 0293     		str	r3, [sp, #8]
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1575              		.loc 1 1905 0
 1576 00be 0C23     		movs	r3, #12
 1577 00c0 9846     		mov	r8, r3
 1578              	.LVL178:
 1579 00c2 A044     		add	r8, r8, r4
 1580 00c4 4346     		mov	r3, r8
 1581 00c6 0393     		str	r3, [sp, #12]
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1582              		.loc 1 1906 0
 1583 00c8 FA23     		movs	r3, #250
 1584 00ca 9B00     		lsls	r3, r3, #2
 1585 00cc 6046     		mov	r0, ip
 1586 00ce 5843     		muls	r0, r3
 1587 00d0 2149     		ldr	r1, .L130+32
 1588              	.LVL179:
 1589 00d2 FFF7FEFF 		bl	__aeabi_uidiv
 1590              	.LVL180:
 1591 00d6 3883     		strh	r0, [r7, #24]
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
 1592              		.loc 1 1910 0
 1593 00d8 3800     		movs	r0, r7
 1594 00da FFF7FEFF 		bl	SmartSense_TunePrescalers
 1595              	.LVL181:
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1596              		.loc 1 1911 0
 1597 00de 0190     		str	r0, [sp, #4]
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1598              		.loc 1 1914 0
 1599 00e0 01E0     		b	.L126
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 84


 1600              	.L127:
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1601              		.loc 1 1916 0
 1602 00e2 5B00     		lsls	r3, r3, #1
 1603 00e4 A381     		strh	r3, [r4, #12]
 1604              	.L126:
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1605              		.loc 1 1914 0
 1606 00e6 A389     		ldrh	r3, [r4, #12]
 1607 00e8 9E42     		cmp	r6, r3
 1608 00ea FAD8     		bhi	.L127
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1609              		.loc 1 1972 0
 1610 00ec 1B4B     		ldr	r3, .L130+36
 1611 00ee 9842     		cmp	r0, r3
 1612 00f0 01D8     		bhi	.L129
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1613              		.loc 1 1782 0
 1614 00f2 0026     		movs	r6, #0
 1615              	.LVL182:
 1616 00f4 00E0     		b	.L128
 1617              	.LVL183:
 1618              	.L129:
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1619              		.loc 1 1974 0
 1620 00f6 0626     		movs	r6, #6
 1621              	.LVL184:
 1622              	.L128:
1984:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1623              		.loc 1 1984 0
 1624 00f8 5521     		movs	r1, #85
 1625 00fa 2800     		movs	r0, r5
 1626              	.LVL185:
 1627 00fc FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1628              	.LVL186:
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
 1629              		.loc 1 1986 0
 1630 0100 A37A     		ldrb	r3, [r4, #10]
 1631 0102 DB00     		lsls	r3, r3, #3
 1632 0104 134A     		ldr	r2, .L130+28
 1633 0106 D318     		adds	r3, r2, r3
 1634 0108 5B68     		ldr	r3, [r3, #4]
 1635 010a 01A8     		add	r0, sp, #4
 1636 010c 4360     		str	r3, [r0, #4]
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1637              		.loc 1 1987 0
 1638 010e 637A     		ldrb	r3, [r4, #9]
 1639 0110 8376     		strb	r3, [r0, #26]
1988:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1640              		.loc 1 1988 0
 1641 0112 4346     		mov	r3, r8
 1642 0114 8360     		str	r3, [r0, #8]
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1643              		.loc 1 2003 0
 1644 0116 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1645              	.LVL187:
 1646 011a 2080     		strh	r0, [r4]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 85


2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1647              		.loc 1 2013 0
 1648 011c 2100     		movs	r1, r4
 1649 011e 2800     		movs	r0, r5
 1650 0120 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1651              	.LVL188:
2016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1652              		.loc 1 2016 0
 1653 0124 5521     		movs	r1, #85
 1654 0126 2800     		movs	r0, r5
 1655 0128 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1656              	.LVL189:
 1657 012c 3043     		orrs	r0, r6
 1658              	.LVL190:
2023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1659              		.loc 1 2023 0
 1660 012e 08B0     		add	sp, sp, #32
 1661              		@ sp needed
 1662              	.LVL191:
 1663              	.LVL192:
 1664 0130 04BC     		pop	{r2}
 1665 0132 9046     		mov	r8, r2
 1666 0134 F0BD     		pop	{r4, r5, r6, r7, pc}
 1667              	.L131:
 1668 0136 C046     		.align	2
 1669              	.L130:
 1670 0138 00000000 		.word	CapSense_dsFlash
 1671 013c 00000000 		.word	CapSense_dsRam
 1672 0140 C05D0000 		.word	24000
 1673 0144 70170000 		.word	6000
 1674 0148 E7030000 		.word	999
 1675 014c E5070000 		.word	2021
 1676 0150 DC050000 		.word	1500
 1677 0154 00000000 		.word	.LANCHOR1
 1678 0158 FF0F0000 		.word	4095
 1679 015c 880D0100 		.word	69000
 1680              		.cfi_endproc
 1681              	.LFE19:
 1682              		.size	CapSense_SsAutoTuneWidget, .-CapSense_SsAutoTuneWidget
 1683              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1684              		.align	2
 1685              		.global	CapSense_SsAutoTune
 1686              		.code	16
 1687              		.thumb_func
 1688              		.type	CapSense_SsAutoTune, %function
 1689              	CapSense_SsAutoTune:
 1690              	.LFB20:
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1691              		.loc 1 2048 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695 0000 70B5     		push	{r4, r5, r6, lr}
 1696              		.cfi_def_cfa_offset 16
 1697              		.cfi_offset 4, -16
 1698              		.cfi_offset 5, -12
 1699              		.cfi_offset 6, -8
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 86


 1700              		.cfi_offset 14, -4
 1701              	.LVL193:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1702              		.loc 1 2053 0
 1703 0002 0024     		movs	r4, #0
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1704              		.loc 1 2049 0
 1705 0004 0025     		movs	r5, #0
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1706              		.loc 1 2053 0
 1707 0006 04E0     		b	.L133
 1708              	.LVL194:
 1709              	.L134:
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1710              		.loc 1 2058 0
 1711 0008 2000     		movs	r0, r4
 1712 000a FFF7FEFF 		bl	CapSense_SsAutoTuneWidget
 1713              	.LVL195:
 1714 000e 0543     		orrs	r5, r0
 1715              	.LVL196:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1716              		.loc 1 2053 0
 1717 0010 0134     		adds	r4, r4, #1
 1718              	.LVL197:
 1719              	.L133:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1720              		.loc 1 2053 0 is_stmt 0 discriminator 1
 1721 0012 212C     		cmp	r4, #33
 1722 0014 F8D9     		bls	.L134
2062:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1723              		.loc 1 2062 0 is_stmt 1
 1724 0016 2800     		movs	r0, r5
 1725              		@ sp needed
 1726              	.LVL198:
 1727              	.LVL199:
 1728 0018 70BD     		pop	{r4, r5, r6, pc}
 1729              		.cfi_endproc
 1730              	.LFE20:
 1731              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1732 001a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1733              		.align	2
 1734              		.global	CapSense_SsInitializeSourceSenseClk
 1735              		.code	16
 1736              		.thumb_func
 1737              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1738              	CapSense_SsInitializeSourceSenseClk:
 1739              	.LFB21:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1740              		.loc 1 2405 0
 1741              		.cfi_startproc
 1742              		@ args = 0, pretend = 0, frame = 0
 1743              		@ frame_needed = 0, uses_anonymous_args = 0
 1744 0000 10B5     		push	{r4, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 4, -8
 1747              		.cfi_offset 14, -4
 1748              	.LVL200:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 87


2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1749              		.loc 1 2409 0
 1750 0002 0024     		movs	r4, #0
 1751 0004 07E0     		b	.L136
 1752              	.LVL201:
 1753              	.L137:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1754              		.loc 1 2411 0
 1755 0006 6301     		lsls	r3, r4, #5
 1756 0008 044A     		ldr	r2, .L138
 1757 000a D318     		adds	r3, r2, r3
 1758 000c 5968     		ldr	r1, [r3, #4]
 1759              	.LVL202:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1760              		.loc 1 2417 0
 1761 000e 2000     		movs	r0, r4
 1762 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1763              	.LVL203:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1764              		.loc 1 2409 0
 1765 0014 0134     		adds	r4, r4, #1
 1766              	.LVL204:
 1767              	.L136:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1768              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1769 0016 212C     		cmp	r4, #33
 1770 0018 F5D9     		bls	.L137
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1771              		.loc 1 2432 0 is_stmt 1
 1772              		@ sp needed
 1773              	.LVL205:
 1774 001a 10BD     		pop	{r4, pc}
 1775              	.L139:
 1776              		.align	2
 1777              	.L138:
 1778 001c 00000000 		.word	CapSense_dsFlash
 1779              		.cfi_endproc
 1780              	.LFE21:
 1781              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1782              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1783              		.align	2
 1784              		.global	CapSense_DischargeExtCapacitors
 1785              		.code	16
 1786              		.thumb_func
 1787              		.type	CapSense_DischargeExtCapacitors, %function
 1788              	CapSense_DischargeExtCapacitors:
 1789              	.LFB27:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 88


2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1790              		.loc 1 2939 0
 1791              		.cfi_startproc
 1792              		@ args = 0, pretend = 0, frame = 8
 1793              		@ frame_needed = 0, uses_anonymous_args = 0
 1794              	.LVL206:
 1795 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1796              		.cfi_def_cfa_offset 20
 1797              		.cfi_offset 4, -20
 1798              		.cfi_offset 5, -16
 1799              		.cfi_offset 6, -12
 1800              		.cfi_offset 7, -8
 1801              		.cfi_offset 14, -4
 1802 0002 5F46     		mov	r7, fp
 1803 0004 5646     		mov	r6, r10
 1804 0006 4D46     		mov	r5, r9
 1805 0008 4446     		mov	r4, r8
 1806 000a F0B4     		push	{r4, r5, r6, r7}
 1807              		.cfi_def_cfa_offset 36
 1808              		.cfi_offset 8, -36
 1809              		.cfi_offset 9, -32
 1810              		.cfi_offset 10, -28
 1811              		.cfi_offset 11, -24
 1812 000c 83B0     		sub	sp, sp, #12
 1813              		.cfi_def_cfa_offset 48
 1814 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1815              		.loc 1 2947 0
 1816 0010 2B4E     		ldr	r6, .L141
 1817 0012 3468     		ldr	r4, [r6]
 1818 0014 F023     		movs	r3, #240
 1819 0016 1B01     		lsls	r3, r3, #4
 1820 0018 1C40     		ands	r4, r3
 1821 001a 0094     		str	r4, [sp]
 1822              	.LVL207:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 89


 1823              		.loc 1 2948 0
 1824 001c 294F     		ldr	r7, .L141+4
 1825 001e 3B68     		ldr	r3, [r7]
 1826 0020 0422     		movs	r2, #4
 1827 0022 9246     		mov	r10, r2
 1828 0024 1A40     		ands	r2, r3
 1829 0026 9146     		mov	r9, r2
 1830              	.LVL208:
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1831              		.loc 1 2949 0
 1832 0028 274C     		ldr	r4, .L141+8
 1833              	.LVL209:
 1834 002a 2568     		ldr	r5, [r4]
 1835 002c E023     		movs	r3, #224
 1836 002e 5B00     		lsls	r3, r3, #1
 1837 0030 1D40     		ands	r5, r3
 1838 0032 AB46     		mov	fp, r5
 1839              	.LVL210:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1840              		.loc 1 2952 0
 1841 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 1842              	.LVL211:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1843              		.loc 1 2953 0
 1844 0038 3368     		ldr	r3, [r6]
 1845              	.LVL212:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1846              		.loc 1 2954 0
 1847 003a 244A     		ldr	r2, .L141+12
 1848 003c 9046     		mov	r8, r2
 1849 003e 1340     		ands	r3, r2
 1850              	.LVL213:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1851              		.loc 1 2955 0
 1852 0040 3360     		str	r3, [r6]
 1853              	.LVL214:
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1854              		.loc 1 2956 0
 1855 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1856              	.LVL215:
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1857              		.loc 1 2959 0
 1858 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 1859              	.LVL216:
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1860              		.loc 1 2960 0
 1861 004a 3B68     		ldr	r3, [r7]
 1862              	.LVL217:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1863              		.loc 1 2961 0
 1864 004c 5246     		mov	r2, r10
 1865 004e 9343     		bics	r3, r2
 1866              	.LVL218:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 90


2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1867              		.loc 1 2962 0
 1868 0050 3B60     		str	r3, [r7]
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1869              		.loc 1 2963 0
 1870 0052 FFF7FEFF 		bl	CyExitCriticalSection
 1871              	.LVL219:
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1872              		.loc 1 2966 0
 1873 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 1874              	.LVL220:
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1875              		.loc 1 2967 0
 1876 005a 2368     		ldr	r3, [r4]
 1877              	.LVL221:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1878              		.loc 1 2968 0
 1879 005c 1C4D     		ldr	r5, .L141+16
 1880              	.LVL222:
 1881 005e 2B40     		ands	r3, r5
 1882              	.LVL223:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1883              		.loc 1 2969 0
 1884 0060 C022     		movs	r2, #192
 1885 0062 5200     		lsls	r2, r2, #1
 1886 0064 1343     		orrs	r3, r2
 1887              	.LVL224:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1888              		.loc 1 2970 0
 1889 0066 2360     		str	r3, [r4]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1890              		.loc 1 2971 0
 1891 0068 FFF7FEFF 		bl	CyExitCriticalSection
 1892              	.LVL225:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1893              		.loc 1 2974 0
 1894 006c 6B46     		mov	r3, sp
 1895 006e 9888     		ldrh	r0, [r3, #4]
 1896 0070 FFF7FEFF 		bl	CyDelayUs
 1897              	.LVL226:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1898              		.loc 1 2977 0
 1899 0074 FFF7FEFF 		bl	CyEnterCriticalSection
 1900              	.LVL227:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1901              		.loc 1 2978 0
 1902 0078 2368     		ldr	r3, [r4]
 1903              	.LVL228:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1904              		.loc 1 2979 0
 1905 007a 1D40     		ands	r5, r3
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 91


 1906              	.LVL229:
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1907              		.loc 1 2980 0
 1908 007c 5A46     		mov	r2, fp
 1909 007e 1543     		orrs	r5, r2
 1910              	.LVL230:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1911              		.loc 1 2981 0
 1912 0080 2560     		str	r5, [r4]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1913              		.loc 1 2982 0
 1914 0082 FFF7FEFF 		bl	CyExitCriticalSection
 1915              	.LVL231:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1916              		.loc 1 2984 0
 1917 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 1918              	.LVL232:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1919              		.loc 1 2985 0
 1920 008a 3B68     		ldr	r3, [r7]
 1921              	.LVL233:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1922              		.loc 1 2986 0
 1923 008c 5246     		mov	r2, r10
 1924 008e 9343     		bics	r3, r2
 1925              	.LVL234:
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1926              		.loc 1 2987 0
 1927 0090 4A46     		mov	r2, r9
 1928 0092 1343     		orrs	r3, r2
 1929              	.LVL235:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1930              		.loc 1 2988 0
 1931 0094 3B60     		str	r3, [r7]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1932              		.loc 1 2989 0
 1933 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1934              	.LVL236:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1935              		.loc 1 2991 0
 1936 009a FFF7FEFF 		bl	CyEnterCriticalSection
 1937              	.LVL237:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1938              		.loc 1 2992 0
 1939 009e 3368     		ldr	r3, [r6]
 1940              	.LVL238:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1941              		.loc 1 2993 0
 1942 00a0 4246     		mov	r2, r8
 1943 00a2 1A40     		ands	r2, r3
 1944 00a4 1400     		movs	r4, r2
 1945              	.LVL239:
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1946              		.loc 1 2994 0
 1947 00a6 009B     		ldr	r3, [sp]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 92


 1948 00a8 1C43     		orrs	r4, r3
 1949              	.LVL240:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1950              		.loc 1 2995 0
 1951 00aa 3460     		str	r4, [r6]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1952              		.loc 1 2996 0
 1953 00ac FFF7FEFF 		bl	CyExitCriticalSection
 1954              	.LVL241:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1955              		.loc 1 2997 0
 1956 00b0 03B0     		add	sp, sp, #12
 1957              		@ sp needed
 1958              	.LVL242:
 1959              	.LVL243:
 1960              	.LVL244:
 1961 00b2 3CBC     		pop	{r2, r3, r4, r5}
 1962 00b4 9046     		mov	r8, r2
 1963 00b6 9946     		mov	r9, r3
 1964 00b8 A246     		mov	r10, r4
 1965 00ba AB46     		mov	fp, r5
 1966 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1967              	.L142:
 1968 00be C046     		.align	2
 1969              	.L141:
 1970 00c0 00040240 		.word	1073873920
 1971 00c4 00040440 		.word	1074004992
 1972 00c8 08040440 		.word	1074005000
 1973 00cc FFF0FFFF 		.word	-3841
 1974 00d0 3FFEFFFF 		.word	-449
 1975              		.cfi_endproc
 1976              	.LFE27:
 1977              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1978              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1979              		.align	2
 1980              		.global	CapSense_SetInactiveElectrodeState
 1981              		.code	16
 1982              		.thumb_func
 1983              		.type	CapSense_SetInactiveElectrodeState, %function
 1984              	CapSense_SetInactiveElectrodeState:
 1985              	.LFB28:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 93


3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 94


3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 95


3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 96


3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1986              		.loc 1 3205 0
 1987              		.cfi_startproc
 1988              		@ args = 0, pretend = 0, frame = 0
 1989              		@ frame_needed = 0, uses_anonymous_args = 0
 1990              	.LVL245:
 1991 0000 10B5     		push	{r4, lr}
 1992              		.cfi_def_cfa_offset 8
 1993              		.cfi_offset 4, -8
 1994              		.cfi_offset 14, -4
 1995              	.LVL246:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1996              		.loc 1 3208 0
 1997 0002 0028     		cmp	r0, #0
 1998 0004 04D1     		bne	.L147
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1999              		.loc 1 3212 0
 2000 0006 8923     		movs	r3, #137
 2001 0008 DB00     		lsls	r3, r3, #3
 2002 000a 044A     		ldr	r2, .L148
 2003 000c D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 2004              		.loc 1 3213 0
 2005 000e 03E0     		b	.L146
 2006              	.L147:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 97


3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 2007              		.loc 1 3256 0 discriminator 1
 2008 0010 0020     		movs	r0, #0
 2009              	.LVL247:
 2010 0012 FFF7FEFF 		bl	CyHalt
 2011              	.LVL248:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 2012              		.loc 1 3257 0 discriminator 1
 2013 0016 0120     		movs	r0, #1
 2014              	.LVL249:
 2015              	.L146:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 2016              		.loc 1 3262 0
 2017              		@ sp needed
 2018 0018 10BD     		pop	{r4, pc}
 2019              	.L149:
 2020 001a C046     		.align	2
 2021              	.L148:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 98


 2022 001c 00000000 		.word	CapSense_dsRam
 2023              		.cfi_endproc
 2024              	.LFE28:
 2025              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 2026              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 2027              		.align	2
 2028              		.global	CapSense_WriteBitsSafe
 2029              		.code	16
 2030              		.thumb_func
 2031              		.type	CapSense_WriteBitsSafe, %function
 2032              	CapSense_WriteBitsSafe:
 2033              	.LFB29:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 2034              		.loc 1 3290 0
 2035              		.cfi_startproc
 2036              		@ args = 0, pretend = 0, frame = 0
 2037              		@ frame_needed = 0, uses_anonymous_args = 0
 2038              	.LVL250:
 2039 0000 70B5     		push	{r4, r5, r6, lr}
 2040              		.cfi_def_cfa_offset 16
 2041              		.cfi_offset 4, -16
 2042              		.cfi_offset 5, -12
 2043              		.cfi_offset 6, -8
 2044              		.cfi_offset 14, -4
 2045 0002 0500     		movs	r5, r0
 2046 0004 0E00     		movs	r6, r1
 2047 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 2048              		.loc 1 3291 0
 2049 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 99


 2050              	.LVL251:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 2051              		.loc 1 3292 0
 2052 000c 2B68     		ldr	r3, [r5]
 2053 000e 5C40     		eors	r4, r3
 2054              	.LVL252:
 2055 0010 3440     		ands	r4, r6
 2056 0012 5C40     		eors	r4, r3
 2057 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 2058              		.loc 1 3293 0
 2059 0016 FFF7FEFF 		bl	CyExitCriticalSection
 2060              	.LVL253:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 2061              		.loc 1 3294 0
 2062              		@ sp needed
 2063              	.LVL254:
 2064              	.LVL255:
 2065 001a 70BD     		pop	{r4, r5, r6, pc}
 2066              		.cfi_endproc
 2067              	.LFE29:
 2068              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 2069              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 2070              		.align	2
 2071              		.code	16
 2072              		.thumb_func
 2073              		.type	CapSense_SsCSDDisableMode, %function
 2074              	CapSense_SsCSDDisableMode:
 2075              	.LFB9:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 2076              		.loc 1 954 0
 2077              		.cfi_startproc
 2078              		@ args = 0, pretend = 0, frame = 0
 2079              		@ frame_needed = 0, uses_anonymous_args = 0
 2080 0000 10B5     		push	{r4, lr}
 2081              		.cfi_def_cfa_offset 8
 2082              		.cfi_offset 4, -8
 2083              		.cfi_offset 14, -4
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 2084              		.loc 1 961 0
 2085 0002 074A     		ldr	r2, .L152
 2086 0004 1368     		ldr	r3, [r2]
 2087              	.LVL256:
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 2088              		.loc 1 962 0
 2089 0006 0121     		movs	r1, #1
 2090 0008 8B43     		bics	r3, r1
 2091              	.LVL257:
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 2092              		.loc 1 963 0
 2093 000a 1360     		str	r3, [r2]
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2094              		.loc 1 968 0
 2095 000c 0022     		movs	r2, #0
 2096 000e F021     		movs	r1, #240
 2097 0010 0901     		lsls	r1, r1, #4
 2098 0012 0448     		ldr	r0, .L152+4
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 100


 2099 0014 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 2100              	.LVL258:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2101              		.loc 1 971 0
 2102 0018 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 2103              	.LVL259:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 2104              		.loc 1 983 0
 2105              		@ sp needed
 2106 001c 10BD     		pop	{r4, pc}
 2107              	.L153:
 2108 001e C046     		.align	2
 2109              	.L152:
 2110 0020 A8020B40 		.word	1074463400
 2111 0024 00040240 		.word	1073873920
 2112              		.cfi_endproc
 2113              	.LFE9:
 2114              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 2115              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 2116              		.align	2
 2117              		.global	CapSense_SsSwitchSensingMode
 2118              		.code	16
 2119              		.thumb_func
 2120              		.type	CapSense_SsSwitchSensingMode, %function
 2121              	CapSense_SsSwitchSensingMode:
 2122              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 2123              		.loc 1 1068 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 0, uses_anonymous_args = 0
 2127              	.LVL260:
 2128 0000 10B5     		push	{r4, lr}
 2129              		.cfi_def_cfa_offset 8
 2130              		.cfi_offset 4, -8
 2131              		.cfi_offset 14, -4
 2132 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 2133              		.loc 1 1069 0
 2134 0004 0C4B     		ldr	r3, .L158
 2135 0006 1B78     		ldrb	r3, [r3]
 2136 0008 8342     		cmp	r3, r0
 2137 000a 14D0     		beq	.L154
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2138              		.loc 1 1072 0
 2139 000c 012B     		cmp	r3, #1
 2140 000e 01D1     		bne	.L156
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 2141              		.loc 1 1075 0
 2142 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 2143              	.LVL261:
 2144              	.L156:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2145              		.loc 1 1105 0
 2146 0014 012C     		cmp	r4, #1
 2147 0016 05D1     		bne	.L157
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 101


 2148              		.loc 1 1109 0
 2149 0018 FFF7FEFF 		bl	CapSense_SsCSDInitialize
 2150              	.LVL262:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 2151              		.loc 1 1110 0
 2152 001c 0122     		movs	r2, #1
 2153 001e 064B     		ldr	r3, .L158
 2154 0020 1A70     		strb	r2, [r3]
 2155 0022 08E0     		b	.L154
 2156              	.L157:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2157              		.loc 1 1113 0
 2158 0024 022C     		cmp	r4, #2
 2159 0026 06D0     		beq	.L154
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2160              		.loc 1 1121 0
 2161 0028 042C     		cmp	r4, #4
 2162 002a 04D0     		beq	.L154
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 2163              		.loc 1 1129 0
 2164 002c 032C     		cmp	r4, #3
 2165 002e 02D0     		beq	.L154
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 2166              		.loc 1 1138 0
 2167 0030 0022     		movs	r2, #0
 2168 0032 014B     		ldr	r3, .L158
 2169 0034 1A70     		strb	r2, [r3]
 2170              	.L154:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2171              		.loc 1 1141 0
 2172              		@ sp needed
 2173 0036 10BD     		pop	{r4, pc}
 2174              	.L159:
 2175              		.align	2
 2176              	.L158:
 2177 0038 00000000 		.word	.LANCHOR0
 2178              		.cfi_endproc
 2179              	.LFE10:
 2180              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 2181              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 2182              		.align	2
 2183              		.global	CapSense_SsInitialize
 2184              		.code	16
 2185              		.thumb_func
 2186              		.type	CapSense_SsInitialize, %function
 2187              	CapSense_SsInitialize:
 2188              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 2189              		.loc 1 708 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193 0000 10B5     		push	{r4, lr}
 2194              		.cfi_def_cfa_offset 8
 2195              		.cfi_offset 4, -8
 2196              		.cfi_offset 14, -4
 2197              	.LVL263:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 102


 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 2198              		.loc 1 747 0
 2199 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 2200              	.LVL264:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 2201              		.loc 1 752 0
 2202 0006 0020     		movs	r0, #0
 2203 0008 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 2204              	.LVL265:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2205              		.loc 1 753 0
 2206 000c 0021     		movs	r1, #0
 2207 000e 054B     		ldr	r3, .L161
 2208 0010 054A     		ldr	r2, .L161+4
 2209 0012 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 2210              		.loc 1 755 0
 2211 0014 0020     		movs	r0, #0
 2212 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2213              	.LVL266:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 2214              		.loc 1 758 0
 2215 001a 0120     		movs	r0, #1
 2216 001c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2217              	.LVL267:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2218              		.loc 1 769 0
 2219 0020 0020     		movs	r0, #0
 2220              		@ sp needed
 2221 0022 10BD     		pop	{r4, pc}
 2222              	.L162:
 2223              		.align	2
 2224              	.L161:
 2225 0024 49040000 		.word	1097
 2226 0028 00000000 		.word	CapSense_dsRam
 2227              		.cfi_endproc
 2228              	.LFE7:
 2229              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 2230              		.global	CapSense_idacGainTable
 2231              		.comm	CapSense_curSnsIOPtr,4,4
 2232              		.comm	CapSense_curRamSnsPtr,4,4
 2233              		.global	CapSense_requestScanAllWidget
 2234              		.global	CapSense_sensorIndex
 2235              		.global	CapSense_widgetIndex
 2236              		.global	CapSense_scanFreqIndex
 2237              		.global	CapSense_currentSenseMethod
 2238              		.section	.rodata
 2239              		.align	2
 2240              		.set	.LANCHOR1,. + 0
 2241              		.type	CapSense_idacGainTable, %object
 2242              		.size	CapSense_idacGainTable, 48
 2243              	CapSense_idacGainTable:
 2244 0000 00000001 		.word	16777216
 2245 0004 7C920000 		.word	37500
 2246 0008 00000003 		.word	50331648
 2247 000c F8240100 		.word	75000
 2248 0010 00004001 		.word	20971520
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 103


 2249 0014 E0930400 		.word	300000
 2250 0018 00004003 		.word	54525952
 2251 001c C0270900 		.word	600000
 2252 0020 00008001 		.word	25165824
 2253 0024 009F2400 		.word	2400000
 2254 0028 00008003 		.word	58720256
 2255 002c 003E4900 		.word	4800000
 2256              		.type	CapSense_scanFreqIndex, %object
 2257              		.size	CapSense_scanFreqIndex, 1
 2258              	CapSense_scanFreqIndex:
 2259 0030 00       		.space	1
 2260              		.bss
 2261              		.set	.LANCHOR0,. + 0
 2262              		.type	CapSense_currentSenseMethod, %object
 2263              		.size	CapSense_currentSenseMethod, 1
 2264              	CapSense_currentSenseMethod:
 2265 0000 00       		.space	1
 2266              		.type	CapSense_requestScanAllWidget, %object
 2267              		.size	CapSense_requestScanAllWidget, 1
 2268              	CapSense_requestScanAllWidget:
 2269 0001 00       		.space	1
 2270              		.type	CapSense_widgetIndex, %object
 2271              		.size	CapSense_widgetIndex, 1
 2272              	CapSense_widgetIndex:
 2273 0002 00       		.space	1
 2274              		.type	CapSense_sensorIndex, %object
 2275              		.size	CapSense_sensorIndex, 1
 2276              	CapSense_sensorIndex:
 2277 0003 00       		.space	1
 2278              		.text
 2279              	.Letext0:
 2280              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2281              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2282              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2283              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2284              		.file 6 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 2285              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2286              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2287              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 2288              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 2289              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2290              		.section	.debug_info,"",%progbits
 2291              	.Ldebug_info0:
 2292 0000 7E180000 		.4byte	0x187e
 2293 0004 0400     		.2byte	0x4
 2294 0006 00000000 		.4byte	.Ldebug_abbrev0
 2295 000a 04       		.byte	0x4
 2296 000b 01       		.uleb128 0x1
 2297 000c 64030000 		.4byte	.LASF264
 2298 0010 0C       		.byte	0xc
 2299 0011 E40B0000 		.4byte	.LASF265
 2300 0015 C30A0000 		.4byte	.LASF266
 2301 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2302 001d 00000000 		.4byte	0
 2303 0021 00000000 		.4byte	.Ldebug_line0
 2304 0025 02       		.uleb128 0x2
 2305 0026 01       		.byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 104


 2306 0027 06       		.byte	0x6
 2307 0028 610E0000 		.4byte	.LASF0
 2308 002c 02       		.uleb128 0x2
 2309 002d 01       		.byte	0x1
 2310 002e 08       		.byte	0x8
 2311 002f 190D0000 		.4byte	.LASF1
 2312 0033 02       		.uleb128 0x2
 2313 0034 02       		.byte	0x2
 2314 0035 05       		.byte	0x5
 2315 0036 4D0A0000 		.4byte	.LASF2
 2316 003a 02       		.uleb128 0x2
 2317 003b 02       		.byte	0x2
 2318 003c 07       		.byte	0x7
 2319 003d 890E0000 		.4byte	.LASF3
 2320 0041 02       		.uleb128 0x2
 2321 0042 04       		.byte	0x4
 2322 0043 05       		.byte	0x5
 2323 0044 850A0000 		.4byte	.LASF4
 2324 0048 03       		.uleb128 0x3
 2325 0049 330D0000 		.4byte	.LASF9
 2326 004d 02       		.byte	0x2
 2327 004e 41       		.byte	0x41
 2328 004f 53000000 		.4byte	0x53
 2329 0053 02       		.uleb128 0x2
 2330 0054 04       		.byte	0x4
 2331 0055 07       		.byte	0x7
 2332 0056 760C0000 		.4byte	.LASF5
 2333 005a 02       		.uleb128 0x2
 2334 005b 08       		.byte	0x8
 2335 005c 05       		.byte	0x5
 2336 005d 9F070000 		.4byte	.LASF6
 2337 0061 02       		.uleb128 0x2
 2338 0062 08       		.byte	0x8
 2339 0063 07       		.byte	0x7
 2340 0064 39040000 		.4byte	.LASF7
 2341 0068 04       		.uleb128 0x4
 2342 0069 04       		.byte	0x4
 2343 006a 05       		.byte	0x5
 2344 006b 696E7400 		.ascii	"int\000"
 2345 006f 02       		.uleb128 0x2
 2346 0070 04       		.byte	0x4
 2347 0071 07       		.byte	0x7
 2348 0072 6B010000 		.4byte	.LASF8
 2349 0076 03       		.uleb128 0x3
 2350 0077 F4020000 		.4byte	.LASF10
 2351 007b 03       		.byte	0x3
 2352 007c 30       		.byte	0x30
 2353 007d 48000000 		.4byte	0x48
 2354 0081 05       		.uleb128 0x5
 2355 0082 160F0000 		.4byte	.LASF11
 2356 0086 04       		.byte	0x4
 2357 0087 FB01     		.2byte	0x1fb
 2358 0089 2C000000 		.4byte	0x2c
 2359 008d 05       		.uleb128 0x5
 2360 008e A3060000 		.4byte	.LASF12
 2361 0092 04       		.byte	0x4
 2362 0093 FC01     		.2byte	0x1fc
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 105


 2363 0095 3A000000 		.4byte	0x3a
 2364 0099 05       		.uleb128 0x5
 2365 009a D0080000 		.4byte	.LASF13
 2366 009e 04       		.byte	0x4
 2367 009f FD01     		.2byte	0x1fd
 2368 00a1 53000000 		.4byte	0x53
 2369 00a5 02       		.uleb128 0x2
 2370 00a6 04       		.byte	0x4
 2371 00a7 04       		.byte	0x4
 2372 00a8 4E030000 		.4byte	.LASF14
 2373 00ac 02       		.uleb128 0x2
 2374 00ad 08       		.byte	0x8
 2375 00ae 04       		.byte	0x4
 2376 00af 1C0F0000 		.4byte	.LASF15
 2377 00b3 02       		.uleb128 0x2
 2378 00b4 01       		.byte	0x1
 2379 00b5 08       		.byte	0x8
 2380 00b6 04060000 		.4byte	.LASF16
 2381 00ba 05       		.uleb128 0x5
 2382 00bb 100D0000 		.4byte	.LASF17
 2383 00bf 04       		.byte	0x4
 2384 00c0 9D02     		.2byte	0x29d
 2385 00c2 53000000 		.4byte	0x53
 2386 00c6 06       		.uleb128 0x6
 2387 00c7 81000000 		.4byte	0x81
 2388 00cb 05       		.uleb128 0x5
 2389 00cc A5090000 		.4byte	.LASF18
 2390 00d0 04       		.byte	0x4
 2391 00d1 A702     		.2byte	0x2a7
 2392 00d3 D7000000 		.4byte	0xd7
 2393 00d7 06       		.uleb128 0x6
 2394 00d8 99000000 		.4byte	0x99
 2395 00dc 05       		.uleb128 0x5
 2396 00dd 8D080000 		.4byte	.LASF19
 2397 00e1 04       		.byte	0x4
 2398 00e2 B702     		.2byte	0x2b7
 2399 00e4 E8000000 		.4byte	0xe8
 2400 00e8 07       		.uleb128 0x7
 2401 00e9 04       		.byte	0x4
 2402 00ea EE000000 		.4byte	0xee
 2403 00ee 08       		.uleb128 0x8
 2404 00ef 05       		.uleb128 0x5
 2405 00f0 8B0D0000 		.4byte	.LASF20
 2406 00f4 05       		.byte	0x5
 2407 00f5 A201     		.2byte	0x1a2
 2408 00f7 8D000000 		.4byte	0x8d
 2409 00fb 05       		.uleb128 0x5
 2410 00fc 19070000 		.4byte	.LASF21
 2411 0100 05       		.byte	0x5
 2412 0101 A601     		.2byte	0x1a6
 2413 0103 81000000 		.4byte	0x81
 2414 0107 09       		.uleb128 0x9
 2415 0108 1C       		.byte	0x1c
 2416 0109 06       		.byte	0x6
 2417 010a 31       		.byte	0x31
 2418 010b 94010000 		.4byte	0x194
 2419 010f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 106


 2420 0110 600D0000 		.4byte	.LASF22
 2421 0114 06       		.byte	0x6
 2422 0115 36       		.byte	0x36
 2423 0116 99000000 		.4byte	0x99
 2424 011a 00       		.byte	0
 2425 011b 0A       		.uleb128 0xa
 2426 011c 00020000 		.4byte	.LASF23
 2427 0120 06       		.byte	0x6
 2428 0121 3B       		.byte	0x3b
 2429 0122 99000000 		.4byte	0x99
 2430 0126 04       		.byte	0x4
 2431 0127 0A       		.uleb128 0xa
 2432 0128 4E090000 		.4byte	.LASF24
 2433 012c 06       		.byte	0x6
 2434 012d 40       		.byte	0x40
 2435 012e 94010000 		.4byte	0x194
 2436 0132 08       		.byte	0x8
 2437 0133 0A       		.uleb128 0xa
 2438 0134 58050000 		.4byte	.LASF25
 2439 0138 06       		.byte	0x6
 2440 0139 45       		.byte	0x45
 2441 013a 94010000 		.4byte	0x194
 2442 013e 0C       		.byte	0xc
 2443 013f 0A       		.uleb128 0xa
 2444 0140 95090000 		.4byte	.LASF26
 2445 0144 06       		.byte	0x6
 2446 0145 4A       		.byte	0x4a
 2447 0146 8D000000 		.4byte	0x8d
 2448 014a 10       		.byte	0x10
 2449 014b 0A       		.uleb128 0xa
 2450 014c 8F0C0000 		.4byte	.LASF27
 2451 0150 06       		.byte	0x6
 2452 0151 4F       		.byte	0x4f
 2453 0152 8D000000 		.4byte	0x8d
 2454 0156 12       		.byte	0x12
 2455 0157 0A       		.uleb128 0xa
 2456 0158 A10B0000 		.4byte	.LASF28
 2457 015c 06       		.byte	0x6
 2458 015d 54       		.byte	0x54
 2459 015e 8D000000 		.4byte	0x8d
 2460 0162 14       		.byte	0x14
 2461 0163 0A       		.uleb128 0xa
 2462 0164 48020000 		.4byte	.LASF29
 2463 0168 06       		.byte	0x6
 2464 0169 59       		.byte	0x59
 2465 016a 8D000000 		.4byte	0x8d
 2466 016e 16       		.byte	0x16
 2467 016f 0A       		.uleb128 0xa
 2468 0170 30050000 		.4byte	.LASF30
 2469 0174 06       		.byte	0x6
 2470 0175 5E       		.byte	0x5e
 2471 0176 8D000000 		.4byte	0x8d
 2472 017a 18       		.byte	0x18
 2473 017b 0A       		.uleb128 0xa
 2474 017c 1F060000 		.4byte	.LASF31
 2475 0180 06       		.byte	0x6
 2476 0181 63       		.byte	0x63
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 107


 2477 0182 81000000 		.4byte	0x81
 2478 0186 1A       		.byte	0x1a
 2479 0187 0A       		.uleb128 0xa
 2480 0188 BE090000 		.4byte	.LASF32
 2481 018c 06       		.byte	0x6
 2482 018d 68       		.byte	0x68
 2483 018e 81000000 		.4byte	0x81
 2484 0192 1B       		.byte	0x1b
 2485 0193 00       		.byte	0
 2486 0194 07       		.uleb128 0x7
 2487 0195 04       		.byte	0x4
 2488 0196 8D000000 		.4byte	0x8d
 2489 019a 03       		.uleb128 0x3
 2490 019b 9C0E0000 		.4byte	.LASF33
 2491 019f 06       		.byte	0x6
 2492 01a0 6A       		.byte	0x6a
 2493 01a1 07010000 		.4byte	0x107
 2494 01a5 09       		.uleb128 0x9
 2495 01a6 0C       		.byte	0xc
 2496 01a7 06       		.byte	0x6
 2497 01a8 75       		.byte	0x75
 2498 01a9 02020000 		.4byte	0x202
 2499 01ad 0A       		.uleb128 0xa
 2500 01ae 310F0000 		.4byte	.LASF34
 2501 01b2 06       		.byte	0x6
 2502 01b3 7A       		.byte	0x7a
 2503 01b4 8D000000 		.4byte	0x8d
 2504 01b8 00       		.byte	0
 2505 01b9 0A       		.uleb128 0xa
 2506 01ba 380F0000 		.4byte	.LASF35
 2507 01be 06       		.byte	0x6
 2508 01bf 7E       		.byte	0x7e
 2509 01c0 8D000000 		.4byte	0x8d
 2510 01c4 02       		.byte	0x2
 2511 01c5 0A       		.uleb128 0xa
 2512 01c6 3F0F0000 		.4byte	.LASF36
 2513 01ca 06       		.byte	0x6
 2514 01cb 82       		.byte	0x82
 2515 01cc 8D000000 		.4byte	0x8d
 2516 01d0 04       		.byte	0x4
 2517 01d1 0A       		.uleb128 0xa
 2518 01d2 460F0000 		.4byte	.LASF37
 2519 01d6 06       		.byte	0x6
 2520 01d7 86       		.byte	0x86
 2521 01d8 8D000000 		.4byte	0x8d
 2522 01dc 06       		.byte	0x6
 2523 01dd 0A       		.uleb128 0xa
 2524 01de 4D0F0000 		.4byte	.LASF38
 2525 01e2 06       		.byte	0x6
 2526 01e3 8A       		.byte	0x8a
 2527 01e4 8D000000 		.4byte	0x8d
 2528 01e8 08       		.byte	0x8
 2529 01e9 0A       		.uleb128 0xa
 2530 01ea 540F0000 		.4byte	.LASF39
 2531 01ee 06       		.byte	0x6
 2532 01ef 8E       		.byte	0x8e
 2533 01f0 81000000 		.4byte	0x81
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 108


 2534 01f4 0A       		.byte	0xa
 2535 01f5 0A       		.uleb128 0xa
 2536 01f6 5B0F0000 		.4byte	.LASF40
 2537 01fa 06       		.byte	0x6
 2538 01fb 92       		.byte	0x92
 2539 01fc 81000000 		.4byte	0x81
 2540 0200 0B       		.byte	0xb
 2541 0201 00       		.byte	0
 2542 0202 03       		.uleb128 0x3
 2543 0203 C8050000 		.4byte	.LASF41
 2544 0207 06       		.byte	0x6
 2545 0208 93       		.byte	0x93
 2546 0209 A5010000 		.4byte	0x1a5
 2547 020d 0B       		.uleb128 0xb
 2548 020e 01       		.byte	0x1
 2549 020f 2C000000 		.4byte	0x2c
 2550 0213 07       		.byte	0x7
 2551 0214 70       		.byte	0x70
 2552 0215 38020000 		.4byte	0x238
 2553 0219 0C       		.uleb128 0xc
 2554 021a FC000000 		.4byte	.LASF42
 2555 021e 00       		.byte	0
 2556 021f 0C       		.uleb128 0xc
 2557 0220 250C0000 		.4byte	.LASF43
 2558 0224 01       		.byte	0x1
 2559 0225 0C       		.uleb128 0xc
 2560 0226 A70A0000 		.4byte	.LASF44
 2561 022a 02       		.byte	0x2
 2562 022b 0C       		.uleb128 0xc
 2563 022c C10D0000 		.4byte	.LASF45
 2564 0230 03       		.byte	0x3
 2565 0231 0C       		.uleb128 0xc
 2566 0232 6D090000 		.4byte	.LASF46
 2567 0236 04       		.byte	0x4
 2568 0237 00       		.byte	0
 2569 0238 03       		.uleb128 0x3
 2570 0239 52070000 		.4byte	.LASF47
 2571 023d 07       		.byte	0x7
 2572 023e 76       		.byte	0x76
 2573 023f 0D020000 		.4byte	0x20d
 2574 0243 09       		.uleb128 0x9
 2575 0244 14       		.byte	0x14
 2576 0245 07       		.byte	0x7
 2577 0246 AD       		.byte	0xad
 2578 0247 E8020000 		.4byte	0x2e8
 2579 024b 0A       		.uleb128 0xa
 2580 024c DA060000 		.4byte	.LASF48
 2581 0250 07       		.byte	0x7
 2582 0251 B2       		.byte	0xb2
 2583 0252 8D000000 		.4byte	0x8d
 2584 0256 00       		.byte	0
 2585 0257 0A       		.uleb128 0xa
 2586 0258 C10C0000 		.4byte	.LASF49
 2587 025c 07       		.byte	0x7
 2588 025d B7       		.byte	0xb7
 2589 025e EF000000 		.4byte	0xef
 2590 0262 02       		.byte	0x2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 109


 2591 0263 0A       		.uleb128 0xa
 2592 0264 FC050000 		.4byte	.LASF50
 2593 0268 07       		.byte	0x7
 2594 0269 BC       		.byte	0xbc
 2595 026a 81000000 		.4byte	0x81
 2596 026e 04       		.byte	0x4
 2597 026f 0A       		.uleb128 0xa
 2598 0270 79080000 		.4byte	.LASF51
 2599 0274 07       		.byte	0x7
 2600 0275 C1       		.byte	0xc1
 2601 0276 81000000 		.4byte	0x81
 2602 027a 05       		.byte	0x5
 2603 027b 0A       		.uleb128 0xa
 2604 027c 5F050000 		.4byte	.LASF52
 2605 0280 07       		.byte	0x7
 2606 0281 C7       		.byte	0xc7
 2607 0282 81000000 		.4byte	0x81
 2608 0286 06       		.byte	0x6
 2609 0287 0A       		.uleb128 0xa
 2610 0288 CE070000 		.4byte	.LASF53
 2611 028c 07       		.byte	0x7
 2612 028d CD       		.byte	0xcd
 2613 028e 81000000 		.4byte	0x81
 2614 0292 07       		.byte	0x7
 2615 0293 0A       		.uleb128 0xa
 2616 0294 99050000 		.4byte	.LASF54
 2617 0298 07       		.byte	0x7
 2618 0299 D4       		.byte	0xd4
 2619 029a FB000000 		.4byte	0xfb
 2620 029e 08       		.byte	0x8
 2621 029f 0A       		.uleb128 0xa
 2622 02a0 940C0000 		.4byte	.LASF55
 2623 02a4 07       		.byte	0x7
 2624 02a5 DB       		.byte	0xdb
 2625 02a6 E8020000 		.4byte	0x2e8
 2626 02aa 09       		.byte	0x9
 2627 02ab 0A       		.uleb128 0xa
 2628 02ac 1D030000 		.4byte	.LASF56
 2629 02b0 07       		.byte	0x7
 2630 02b1 E0       		.byte	0xe0
 2631 02b2 81000000 		.4byte	0x81
 2632 02b6 0A       		.byte	0xa
 2633 02b7 0A       		.uleb128 0xa
 2634 02b8 100E0000 		.4byte	.LASF57
 2635 02bc 07       		.byte	0x7
 2636 02bd E8       		.byte	0xe8
 2637 02be 8D000000 		.4byte	0x8d
 2638 02c2 0C       		.byte	0xc
 2639 02c3 0A       		.uleb128 0xa
 2640 02c4 0A0A0000 		.4byte	.LASF58
 2641 02c8 07       		.byte	0x7
 2642 02c9 ED       		.byte	0xed
 2643 02ca 81000000 		.4byte	0x81
 2644 02ce 0E       		.byte	0xe
 2645 02cf 0A       		.uleb128 0xa
 2646 02d0 A10B0000 		.4byte	.LASF28
 2647 02d4 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 110


 2648 02d5 F3       		.byte	0xf3
 2649 02d6 8D000000 		.4byte	0x8d
 2650 02da 10       		.byte	0x10
 2651 02db 0A       		.uleb128 0xa
 2652 02dc 58050000 		.4byte	.LASF25
 2653 02e0 07       		.byte	0x7
 2654 02e1 F8       		.byte	0xf8
 2655 02e2 8D000000 		.4byte	0x8d
 2656 02e6 12       		.byte	0x12
 2657 02e7 00       		.byte	0
 2658 02e8 0D       		.uleb128 0xd
 2659 02e9 81000000 		.4byte	0x81
 2660 02ed F8020000 		.4byte	0x2f8
 2661 02f1 0E       		.uleb128 0xe
 2662 02f2 F8020000 		.4byte	0x2f8
 2663 02f6 00       		.byte	0
 2664 02f7 00       		.byte	0
 2665 02f8 02       		.uleb128 0x2
 2666 02f9 04       		.byte	0x4
 2667 02fa 07       		.byte	0x7
 2668 02fb 650C0000 		.4byte	.LASF59
 2669 02ff 03       		.uleb128 0x3
 2670 0300 AB080000 		.4byte	.LASF60
 2671 0304 07       		.byte	0x7
 2672 0305 F9       		.byte	0xf9
 2673 0306 43020000 		.4byte	0x243
 2674 030a 09       		.uleb128 0x9
 2675 030b 14       		.byte	0x14
 2676 030c 07       		.byte	0x7
 2677 030d FE       		.byte	0xfe
 2678 030e BC030000 		.4byte	0x3bc
 2679 0312 0F       		.uleb128 0xf
 2680 0313 DA060000 		.4byte	.LASF48
 2681 0317 07       		.byte	0x7
 2682 0318 0301     		.2byte	0x103
 2683 031a 8D000000 		.4byte	0x8d
 2684 031e 00       		.byte	0
 2685 031f 0F       		.uleb128 0xf
 2686 0320 C10C0000 		.4byte	.LASF49
 2687 0324 07       		.byte	0x7
 2688 0325 0801     		.2byte	0x108
 2689 0327 EF000000 		.4byte	0xef
 2690 032b 02       		.byte	0x2
 2691 032c 0F       		.uleb128 0xf
 2692 032d FC050000 		.4byte	.LASF50
 2693 0331 07       		.byte	0x7
 2694 0332 0D01     		.2byte	0x10d
 2695 0334 81000000 		.4byte	0x81
 2696 0338 04       		.byte	0x4
 2697 0339 0F       		.uleb128 0xf
 2698 033a 79080000 		.4byte	.LASF51
 2699 033e 07       		.byte	0x7
 2700 033f 1201     		.2byte	0x112
 2701 0341 81000000 		.4byte	0x81
 2702 0345 05       		.byte	0x5
 2703 0346 0F       		.uleb128 0xf
 2704 0347 5F050000 		.4byte	.LASF52
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 111


 2705 034b 07       		.byte	0x7
 2706 034c 1801     		.2byte	0x118
 2707 034e 81000000 		.4byte	0x81
 2708 0352 06       		.byte	0x6
 2709 0353 0F       		.uleb128 0xf
 2710 0354 CE070000 		.4byte	.LASF53
 2711 0358 07       		.byte	0x7
 2712 0359 1E01     		.2byte	0x11e
 2713 035b 81000000 		.4byte	0x81
 2714 035f 07       		.byte	0x7
 2715 0360 0F       		.uleb128 0xf
 2716 0361 99050000 		.4byte	.LASF54
 2717 0365 07       		.byte	0x7
 2718 0366 2501     		.2byte	0x125
 2719 0368 FB000000 		.4byte	0xfb
 2720 036c 08       		.byte	0x8
 2721 036d 0F       		.uleb128 0xf
 2722 036e 940C0000 		.4byte	.LASF55
 2723 0372 07       		.byte	0x7
 2724 0373 2C01     		.2byte	0x12c
 2725 0375 E8020000 		.4byte	0x2e8
 2726 0379 09       		.byte	0x9
 2727 037a 0F       		.uleb128 0xf
 2728 037b 1D030000 		.4byte	.LASF56
 2729 037f 07       		.byte	0x7
 2730 0380 3101     		.2byte	0x131
 2731 0382 81000000 		.4byte	0x81
 2732 0386 0A       		.byte	0xa
 2733 0387 0F       		.uleb128 0xf
 2734 0388 100E0000 		.4byte	.LASF57
 2735 038c 07       		.byte	0x7
 2736 038d 3901     		.2byte	0x139
 2737 038f 8D000000 		.4byte	0x8d
 2738 0393 0C       		.byte	0xc
 2739 0394 0F       		.uleb128 0xf
 2740 0395 0A0A0000 		.4byte	.LASF58
 2741 0399 07       		.byte	0x7
 2742 039a 3E01     		.2byte	0x13e
 2743 039c 81000000 		.4byte	0x81
 2744 03a0 0E       		.byte	0xe
 2745 03a1 0F       		.uleb128 0xf
 2746 03a2 A10B0000 		.4byte	.LASF28
 2747 03a6 07       		.byte	0x7
 2748 03a7 4401     		.2byte	0x144
 2749 03a9 8D000000 		.4byte	0x8d
 2750 03ad 10       		.byte	0x10
 2751 03ae 0F       		.uleb128 0xf
 2752 03af 58050000 		.4byte	.LASF25
 2753 03b3 07       		.byte	0x7
 2754 03b4 4901     		.2byte	0x149
 2755 03b6 8D000000 		.4byte	0x8d
 2756 03ba 12       		.byte	0x12
 2757 03bb 00       		.byte	0
 2758 03bc 05       		.uleb128 0x5
 2759 03bd F20C0000 		.4byte	.LASF61
 2760 03c1 07       		.byte	0x7
 2761 03c2 4A01     		.2byte	0x14a
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 112


 2762 03c4 0A030000 		.4byte	0x30a
 2763 03c8 10       		.uleb128 0x10
 2764 03c9 A802     		.2byte	0x2a8
 2765 03cb 07       		.byte	0x7
 2766 03cc 5001     		.2byte	0x150
 2767 03ce A2050000 		.4byte	0x5a2
 2768 03d2 0F       		.uleb128 0xf
 2769 03d3 280B0000 		.4byte	.LASF62
 2770 03d7 07       		.byte	0x7
 2771 03d8 5501     		.2byte	0x155
 2772 03da BC030000 		.4byte	0x3bc
 2773 03de 00       		.byte	0
 2774 03df 0F       		.uleb128 0xf
 2775 03e0 300B0000 		.4byte	.LASF63
 2776 03e4 07       		.byte	0x7
 2777 03e5 5A01     		.2byte	0x15a
 2778 03e7 BC030000 		.4byte	0x3bc
 2779 03eb 14       		.byte	0x14
 2780 03ec 0F       		.uleb128 0xf
 2781 03ed 380B0000 		.4byte	.LASF64
 2782 03f1 07       		.byte	0x7
 2783 03f2 5F01     		.2byte	0x15f
 2784 03f4 BC030000 		.4byte	0x3bc
 2785 03f8 28       		.byte	0x28
 2786 03f9 0F       		.uleb128 0xf
 2787 03fa 400B0000 		.4byte	.LASF65
 2788 03fe 07       		.byte	0x7
 2789 03ff 6401     		.2byte	0x164
 2790 0401 BC030000 		.4byte	0x3bc
 2791 0405 3C       		.byte	0x3c
 2792 0406 0F       		.uleb128 0xf
 2793 0407 480B0000 		.4byte	.LASF66
 2794 040b 07       		.byte	0x7
 2795 040c 6901     		.2byte	0x169
 2796 040e BC030000 		.4byte	0x3bc
 2797 0412 50       		.byte	0x50
 2798 0413 0F       		.uleb128 0xf
 2799 0414 500B0000 		.4byte	.LASF67
 2800 0418 07       		.byte	0x7
 2801 0419 6E01     		.2byte	0x16e
 2802 041b BC030000 		.4byte	0x3bc
 2803 041f 64       		.byte	0x64
 2804 0420 0F       		.uleb128 0xf
 2805 0421 580B0000 		.4byte	.LASF68
 2806 0425 07       		.byte	0x7
 2807 0426 7301     		.2byte	0x173
 2808 0428 BC030000 		.4byte	0x3bc
 2809 042c 78       		.byte	0x78
 2810 042d 0F       		.uleb128 0xf
 2811 042e 600B0000 		.4byte	.LASF69
 2812 0432 07       		.byte	0x7
 2813 0433 7801     		.2byte	0x178
 2814 0435 BC030000 		.4byte	0x3bc
 2815 0439 8C       		.byte	0x8c
 2816 043a 0F       		.uleb128 0xf
 2817 043b 680B0000 		.4byte	.LASF70
 2818 043f 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 113


 2819 0440 7D01     		.2byte	0x17d
 2820 0442 BC030000 		.4byte	0x3bc
 2821 0446 A0       		.byte	0xa0
 2822 0447 0F       		.uleb128 0xf
 2823 0448 700B0000 		.4byte	.LASF71
 2824 044c 07       		.byte	0x7
 2825 044d 8201     		.2byte	0x182
 2826 044f BC030000 		.4byte	0x3bc
 2827 0453 B4       		.byte	0xb4
 2828 0454 0F       		.uleb128 0xf
 2829 0455 2F100000 		.4byte	.LASF72
 2830 0459 07       		.byte	0x7
 2831 045a 8701     		.2byte	0x187
 2832 045c BC030000 		.4byte	0x3bc
 2833 0460 C8       		.byte	0xc8
 2834 0461 0F       		.uleb128 0xf
 2835 0462 38100000 		.4byte	.LASF73
 2836 0466 07       		.byte	0x7
 2837 0467 8C01     		.2byte	0x18c
 2838 0469 BC030000 		.4byte	0x3bc
 2839 046d DC       		.byte	0xdc
 2840 046e 0F       		.uleb128 0xf
 2841 046f 00000000 		.4byte	.LASF74
 2842 0473 07       		.byte	0x7
 2843 0474 9101     		.2byte	0x191
 2844 0476 BC030000 		.4byte	0x3bc
 2845 047a F0       		.byte	0xf0
 2846 047b 11       		.uleb128 0x11
 2847 047c 09000000 		.4byte	.LASF75
 2848 0480 07       		.byte	0x7
 2849 0481 9601     		.2byte	0x196
 2850 0483 BC030000 		.4byte	0x3bc
 2851 0487 0401     		.2byte	0x104
 2852 0489 11       		.uleb128 0x11
 2853 048a 12000000 		.4byte	.LASF76
 2854 048e 07       		.byte	0x7
 2855 048f 9B01     		.2byte	0x19b
 2856 0491 BC030000 		.4byte	0x3bc
 2857 0495 1801     		.2byte	0x118
 2858 0497 11       		.uleb128 0x11
 2859 0498 1B000000 		.4byte	.LASF77
 2860 049c 07       		.byte	0x7
 2861 049d A001     		.2byte	0x1a0
 2862 049f BC030000 		.4byte	0x3bc
 2863 04a3 2C01     		.2byte	0x12c
 2864 04a5 11       		.uleb128 0x11
 2865 04a6 24000000 		.4byte	.LASF78
 2866 04aa 07       		.byte	0x7
 2867 04ab A501     		.2byte	0x1a5
 2868 04ad BC030000 		.4byte	0x3bc
 2869 04b1 4001     		.2byte	0x140
 2870 04b3 11       		.uleb128 0x11
 2871 04b4 2D000000 		.4byte	.LASF79
 2872 04b8 07       		.byte	0x7
 2873 04b9 AA01     		.2byte	0x1aa
 2874 04bb BC030000 		.4byte	0x3bc
 2875 04bf 5401     		.2byte	0x154
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 114


 2876 04c1 11       		.uleb128 0x11
 2877 04c2 36000000 		.4byte	.LASF80
 2878 04c6 07       		.byte	0x7
 2879 04c7 AF01     		.2byte	0x1af
 2880 04c9 BC030000 		.4byte	0x3bc
 2881 04cd 6801     		.2byte	0x168
 2882 04cf 11       		.uleb128 0x11
 2883 04d0 3F000000 		.4byte	.LASF81
 2884 04d4 07       		.byte	0x7
 2885 04d5 B401     		.2byte	0x1b4
 2886 04d7 BC030000 		.4byte	0x3bc
 2887 04db 7C01     		.2byte	0x17c
 2888 04dd 11       		.uleb128 0x11
 2889 04de 11010000 		.4byte	.LASF82
 2890 04e2 07       		.byte	0x7
 2891 04e3 B901     		.2byte	0x1b9
 2892 04e5 BC030000 		.4byte	0x3bc
 2893 04e9 9001     		.2byte	0x190
 2894 04eb 11       		.uleb128 0x11
 2895 04ec 1A010000 		.4byte	.LASF83
 2896 04f0 07       		.byte	0x7
 2897 04f1 BE01     		.2byte	0x1be
 2898 04f3 BC030000 		.4byte	0x3bc
 2899 04f7 A401     		.2byte	0x1a4
 2900 04f9 11       		.uleb128 0x11
 2901 04fa 23010000 		.4byte	.LASF84
 2902 04fe 07       		.byte	0x7
 2903 04ff C301     		.2byte	0x1c3
 2904 0501 BC030000 		.4byte	0x3bc
 2905 0505 B801     		.2byte	0x1b8
 2906 0507 11       		.uleb128 0x11
 2907 0508 2C010000 		.4byte	.LASF85
 2908 050c 07       		.byte	0x7
 2909 050d C801     		.2byte	0x1c8
 2910 050f BC030000 		.4byte	0x3bc
 2911 0513 CC01     		.2byte	0x1cc
 2912 0515 11       		.uleb128 0x11
 2913 0516 35010000 		.4byte	.LASF86
 2914 051a 07       		.byte	0x7
 2915 051b CD01     		.2byte	0x1cd
 2916 051d BC030000 		.4byte	0x3bc
 2917 0521 E001     		.2byte	0x1e0
 2918 0523 11       		.uleb128 0x11
 2919 0524 3E010000 		.4byte	.LASF87
 2920 0528 07       		.byte	0x7
 2921 0529 D201     		.2byte	0x1d2
 2922 052b BC030000 		.4byte	0x3bc
 2923 052f F401     		.2byte	0x1f4
 2924 0531 11       		.uleb128 0x11
 2925 0532 47010000 		.4byte	.LASF88
 2926 0536 07       		.byte	0x7
 2927 0537 D701     		.2byte	0x1d7
 2928 0539 BC030000 		.4byte	0x3bc
 2929 053d 0802     		.2byte	0x208
 2930 053f 11       		.uleb128 0x11
 2931 0540 50010000 		.4byte	.LASF89
 2932 0544 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 115


 2933 0545 DC01     		.2byte	0x1dc
 2934 0547 BC030000 		.4byte	0x3bc
 2935 054b 1C02     		.2byte	0x21c
 2936 054d 11       		.uleb128 0x11
 2937 054e 59010000 		.4byte	.LASF90
 2938 0552 07       		.byte	0x7
 2939 0553 E101     		.2byte	0x1e1
 2940 0555 BC030000 		.4byte	0x3bc
 2941 0559 3002     		.2byte	0x230
 2942 055b 11       		.uleb128 0x11
 2943 055c 62010000 		.4byte	.LASF91
 2944 0560 07       		.byte	0x7
 2945 0561 E601     		.2byte	0x1e6
 2946 0563 BC030000 		.4byte	0x3bc
 2947 0567 4402     		.2byte	0x244
 2948 0569 11       		.uleb128 0x11
 2949 056a 24020000 		.4byte	.LASF92
 2950 056e 07       		.byte	0x7
 2951 056f EB01     		.2byte	0x1eb
 2952 0571 BC030000 		.4byte	0x3bc
 2953 0575 5802     		.2byte	0x258
 2954 0577 11       		.uleb128 0x11
 2955 0578 2D020000 		.4byte	.LASF93
 2956 057c 07       		.byte	0x7
 2957 057d F001     		.2byte	0x1f0
 2958 057f BC030000 		.4byte	0x3bc
 2959 0583 6C02     		.2byte	0x26c
 2960 0585 11       		.uleb128 0x11
 2961 0586 36020000 		.4byte	.LASF94
 2962 058a 07       		.byte	0x7
 2963 058b F501     		.2byte	0x1f5
 2964 058d BC030000 		.4byte	0x3bc
 2965 0591 8002     		.2byte	0x280
 2966 0593 11       		.uleb128 0x11
 2967 0594 3F020000 		.4byte	.LASF95
 2968 0598 07       		.byte	0x7
 2969 0599 FA01     		.2byte	0x1fa
 2970 059b BC030000 		.4byte	0x3bc
 2971 059f 9402     		.2byte	0x294
 2972 05a1 00       		.byte	0
 2973 05a2 05       		.uleb128 0x5
 2974 05a3 C1020000 		.4byte	.LASF96
 2975 05a7 07       		.byte	0x7
 2976 05a8 FB01     		.2byte	0x1fb
 2977 05aa C8030000 		.4byte	0x3c8
 2978 05ae 12       		.uleb128 0x12
 2979 05af 0A       		.byte	0xa
 2980 05b0 07       		.byte	0x7
 2981 05b1 0102     		.2byte	0x201
 2982 05b3 06060000 		.4byte	0x606
 2983 05b7 13       		.uleb128 0x13
 2984 05b8 72617700 		.ascii	"raw\000"
 2985 05bc 07       		.byte	0x7
 2986 05bd 0602     		.2byte	0x206
 2987 05bf 06060000 		.4byte	0x606
 2988 05c3 00       		.byte	0
 2989 05c4 0F       		.uleb128 0xf
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 116


 2990 05c5 840E0000 		.4byte	.LASF97
 2991 05c9 07       		.byte	0x7
 2992 05ca 0B02     		.2byte	0x20b
 2993 05cc 06060000 		.4byte	0x606
 2994 05d0 02       		.byte	0x2
 2995 05d1 0F       		.uleb128 0xf
 2996 05d2 CA0C0000 		.4byte	.LASF98
 2997 05d6 07       		.byte	0x7
 2998 05d7 1102     		.2byte	0x211
 2999 05d9 E8020000 		.4byte	0x2e8
 3000 05dd 04       		.byte	0x4
 3001 05de 0F       		.uleb128 0xf
 3002 05df 990A0000 		.4byte	.LASF99
 3003 05e3 07       		.byte	0x7
 3004 05e4 1602     		.2byte	0x216
 3005 05e6 EF000000 		.4byte	0xef
 3006 05ea 06       		.byte	0x6
 3007 05eb 0F       		.uleb128 0xf
 3008 05ec 230F0000 		.4byte	.LASF100
 3009 05f0 07       		.byte	0x7
 3010 05f1 1B02     		.2byte	0x21b
 3011 05f3 16060000 		.4byte	0x616
 3012 05f7 08       		.byte	0x8
 3013 05f8 0F       		.uleb128 0xf
 3014 05f9 90070000 		.4byte	.LASF101
 3015 05fd 07       		.byte	0x7
 3016 05fe 2002     		.2byte	0x220
 3017 0600 E8020000 		.4byte	0x2e8
 3018 0604 09       		.byte	0x9
 3019 0605 00       		.byte	0
 3020 0606 0D       		.uleb128 0xd
 3021 0607 8D000000 		.4byte	0x8d
 3022 060b 16060000 		.4byte	0x616
 3023 060f 0E       		.uleb128 0xe
 3024 0610 F8020000 		.4byte	0x2f8
 3025 0614 00       		.byte	0
 3026 0615 00       		.byte	0
 3027 0616 0D       		.uleb128 0xd
 3028 0617 FB000000 		.4byte	0xfb
 3029 061b 26060000 		.4byte	0x626
 3030 061f 0E       		.uleb128 0xe
 3031 0620 F8020000 		.4byte	0x2f8
 3032 0624 00       		.byte	0
 3033 0625 00       		.byte	0
 3034 0626 05       		.uleb128 0x5
 3035 0627 FE040000 		.4byte	.LASF102
 3036 062b 07       		.byte	0x7
 3037 062c 2102     		.2byte	0x221
 3038 062e AE050000 		.4byte	0x5ae
 3039 0632 10       		.uleb128 0x10
 3040 0633 5401     		.2byte	0x154
 3041 0635 07       		.byte	0x7
 3042 0636 2702     		.2byte	0x227
 3043 0638 FF070000 		.4byte	0x7ff
 3044 063c 0F       		.uleb128 0xf
 3045 063d 280B0000 		.4byte	.LASF62
 3046 0641 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 117


 3047 0642 2C02     		.2byte	0x22c
 3048 0644 FF070000 		.4byte	0x7ff
 3049 0648 00       		.byte	0
 3050 0649 0F       		.uleb128 0xf
 3051 064a 300B0000 		.4byte	.LASF63
 3052 064e 07       		.byte	0x7
 3053 064f 3102     		.2byte	0x231
 3054 0651 FF070000 		.4byte	0x7ff
 3055 0655 0A       		.byte	0xa
 3056 0656 0F       		.uleb128 0xf
 3057 0657 380B0000 		.4byte	.LASF64
 3058 065b 07       		.byte	0x7
 3059 065c 3602     		.2byte	0x236
 3060 065e FF070000 		.4byte	0x7ff
 3061 0662 14       		.byte	0x14
 3062 0663 0F       		.uleb128 0xf
 3063 0664 400B0000 		.4byte	.LASF65
 3064 0668 07       		.byte	0x7
 3065 0669 3B02     		.2byte	0x23b
 3066 066b FF070000 		.4byte	0x7ff
 3067 066f 1E       		.byte	0x1e
 3068 0670 0F       		.uleb128 0xf
 3069 0671 480B0000 		.4byte	.LASF66
 3070 0675 07       		.byte	0x7
 3071 0676 4002     		.2byte	0x240
 3072 0678 FF070000 		.4byte	0x7ff
 3073 067c 28       		.byte	0x28
 3074 067d 0F       		.uleb128 0xf
 3075 067e 500B0000 		.4byte	.LASF67
 3076 0682 07       		.byte	0x7
 3077 0683 4502     		.2byte	0x245
 3078 0685 FF070000 		.4byte	0x7ff
 3079 0689 32       		.byte	0x32
 3080 068a 0F       		.uleb128 0xf
 3081 068b 580B0000 		.4byte	.LASF68
 3082 068f 07       		.byte	0x7
 3083 0690 4A02     		.2byte	0x24a
 3084 0692 FF070000 		.4byte	0x7ff
 3085 0696 3C       		.byte	0x3c
 3086 0697 0F       		.uleb128 0xf
 3087 0698 600B0000 		.4byte	.LASF69
 3088 069c 07       		.byte	0x7
 3089 069d 4F02     		.2byte	0x24f
 3090 069f FF070000 		.4byte	0x7ff
 3091 06a3 46       		.byte	0x46
 3092 06a4 0F       		.uleb128 0xf
 3093 06a5 680B0000 		.4byte	.LASF70
 3094 06a9 07       		.byte	0x7
 3095 06aa 5402     		.2byte	0x254
 3096 06ac FF070000 		.4byte	0x7ff
 3097 06b0 50       		.byte	0x50
 3098 06b1 0F       		.uleb128 0xf
 3099 06b2 700B0000 		.4byte	.LASF71
 3100 06b6 07       		.byte	0x7
 3101 06b7 5902     		.2byte	0x259
 3102 06b9 FF070000 		.4byte	0x7ff
 3103 06bd 5A       		.byte	0x5a
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 118


 3104 06be 0F       		.uleb128 0xf
 3105 06bf 2F100000 		.4byte	.LASF72
 3106 06c3 07       		.byte	0x7
 3107 06c4 5E02     		.2byte	0x25e
 3108 06c6 FF070000 		.4byte	0x7ff
 3109 06ca 64       		.byte	0x64
 3110 06cb 0F       		.uleb128 0xf
 3111 06cc 38100000 		.4byte	.LASF73
 3112 06d0 07       		.byte	0x7
 3113 06d1 6302     		.2byte	0x263
 3114 06d3 FF070000 		.4byte	0x7ff
 3115 06d7 6E       		.byte	0x6e
 3116 06d8 0F       		.uleb128 0xf
 3117 06d9 00000000 		.4byte	.LASF74
 3118 06dd 07       		.byte	0x7
 3119 06de 6802     		.2byte	0x268
 3120 06e0 FF070000 		.4byte	0x7ff
 3121 06e4 78       		.byte	0x78
 3122 06e5 0F       		.uleb128 0xf
 3123 06e6 09000000 		.4byte	.LASF75
 3124 06ea 07       		.byte	0x7
 3125 06eb 6D02     		.2byte	0x26d
 3126 06ed FF070000 		.4byte	0x7ff
 3127 06f1 82       		.byte	0x82
 3128 06f2 0F       		.uleb128 0xf
 3129 06f3 12000000 		.4byte	.LASF76
 3130 06f7 07       		.byte	0x7
 3131 06f8 7202     		.2byte	0x272
 3132 06fa FF070000 		.4byte	0x7ff
 3133 06fe 8C       		.byte	0x8c
 3134 06ff 0F       		.uleb128 0xf
 3135 0700 1B000000 		.4byte	.LASF77
 3136 0704 07       		.byte	0x7
 3137 0705 7702     		.2byte	0x277
 3138 0707 FF070000 		.4byte	0x7ff
 3139 070b 96       		.byte	0x96
 3140 070c 0F       		.uleb128 0xf
 3141 070d 24000000 		.4byte	.LASF78
 3142 0711 07       		.byte	0x7
 3143 0712 7C02     		.2byte	0x27c
 3144 0714 FF070000 		.4byte	0x7ff
 3145 0718 A0       		.byte	0xa0
 3146 0719 0F       		.uleb128 0xf
 3147 071a 2D000000 		.4byte	.LASF79
 3148 071e 07       		.byte	0x7
 3149 071f 8102     		.2byte	0x281
 3150 0721 FF070000 		.4byte	0x7ff
 3151 0725 AA       		.byte	0xaa
 3152 0726 0F       		.uleb128 0xf
 3153 0727 36000000 		.4byte	.LASF80
 3154 072b 07       		.byte	0x7
 3155 072c 8602     		.2byte	0x286
 3156 072e FF070000 		.4byte	0x7ff
 3157 0732 B4       		.byte	0xb4
 3158 0733 0F       		.uleb128 0xf
 3159 0734 3F000000 		.4byte	.LASF81
 3160 0738 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 119


 3161 0739 8B02     		.2byte	0x28b
 3162 073b FF070000 		.4byte	0x7ff
 3163 073f BE       		.byte	0xbe
 3164 0740 0F       		.uleb128 0xf
 3165 0741 11010000 		.4byte	.LASF82
 3166 0745 07       		.byte	0x7
 3167 0746 9002     		.2byte	0x290
 3168 0748 FF070000 		.4byte	0x7ff
 3169 074c C8       		.byte	0xc8
 3170 074d 0F       		.uleb128 0xf
 3171 074e 1A010000 		.4byte	.LASF83
 3172 0752 07       		.byte	0x7
 3173 0753 9502     		.2byte	0x295
 3174 0755 FF070000 		.4byte	0x7ff
 3175 0759 D2       		.byte	0xd2
 3176 075a 0F       		.uleb128 0xf
 3177 075b 23010000 		.4byte	.LASF84
 3178 075f 07       		.byte	0x7
 3179 0760 9A02     		.2byte	0x29a
 3180 0762 FF070000 		.4byte	0x7ff
 3181 0766 DC       		.byte	0xdc
 3182 0767 0F       		.uleb128 0xf
 3183 0768 2C010000 		.4byte	.LASF85
 3184 076c 07       		.byte	0x7
 3185 076d 9F02     		.2byte	0x29f
 3186 076f FF070000 		.4byte	0x7ff
 3187 0773 E6       		.byte	0xe6
 3188 0774 0F       		.uleb128 0xf
 3189 0775 35010000 		.4byte	.LASF86
 3190 0779 07       		.byte	0x7
 3191 077a A402     		.2byte	0x2a4
 3192 077c FF070000 		.4byte	0x7ff
 3193 0780 F0       		.byte	0xf0
 3194 0781 0F       		.uleb128 0xf
 3195 0782 3E010000 		.4byte	.LASF87
 3196 0786 07       		.byte	0x7
 3197 0787 A902     		.2byte	0x2a9
 3198 0789 FF070000 		.4byte	0x7ff
 3199 078d FA       		.byte	0xfa
 3200 078e 11       		.uleb128 0x11
 3201 078f 47010000 		.4byte	.LASF88
 3202 0793 07       		.byte	0x7
 3203 0794 AE02     		.2byte	0x2ae
 3204 0796 FF070000 		.4byte	0x7ff
 3205 079a 0401     		.2byte	0x104
 3206 079c 11       		.uleb128 0x11
 3207 079d 50010000 		.4byte	.LASF89
 3208 07a1 07       		.byte	0x7
 3209 07a2 B302     		.2byte	0x2b3
 3210 07a4 FF070000 		.4byte	0x7ff
 3211 07a8 0E01     		.2byte	0x10e
 3212 07aa 11       		.uleb128 0x11
 3213 07ab 59010000 		.4byte	.LASF90
 3214 07af 07       		.byte	0x7
 3215 07b0 B802     		.2byte	0x2b8
 3216 07b2 FF070000 		.4byte	0x7ff
 3217 07b6 1801     		.2byte	0x118
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 120


 3218 07b8 11       		.uleb128 0x11
 3219 07b9 62010000 		.4byte	.LASF91
 3220 07bd 07       		.byte	0x7
 3221 07be BD02     		.2byte	0x2bd
 3222 07c0 FF070000 		.4byte	0x7ff
 3223 07c4 2201     		.2byte	0x122
 3224 07c6 11       		.uleb128 0x11
 3225 07c7 24020000 		.4byte	.LASF92
 3226 07cb 07       		.byte	0x7
 3227 07cc C202     		.2byte	0x2c2
 3228 07ce FF070000 		.4byte	0x7ff
 3229 07d2 2C01     		.2byte	0x12c
 3230 07d4 11       		.uleb128 0x11
 3231 07d5 2D020000 		.4byte	.LASF93
 3232 07d9 07       		.byte	0x7
 3233 07da C702     		.2byte	0x2c7
 3234 07dc FF070000 		.4byte	0x7ff
 3235 07e0 3601     		.2byte	0x136
 3236 07e2 11       		.uleb128 0x11
 3237 07e3 36020000 		.4byte	.LASF94
 3238 07e7 07       		.byte	0x7
 3239 07e8 CC02     		.2byte	0x2cc
 3240 07ea FF070000 		.4byte	0x7ff
 3241 07ee 4001     		.2byte	0x140
 3242 07f0 11       		.uleb128 0x11
 3243 07f1 3F020000 		.4byte	.LASF95
 3244 07f5 07       		.byte	0x7
 3245 07f6 D102     		.2byte	0x2d1
 3246 07f8 FF070000 		.4byte	0x7ff
 3247 07fc 4A01     		.2byte	0x14a
 3248 07fe 00       		.byte	0
 3249 07ff 0D       		.uleb128 0xd
 3250 0800 26060000 		.4byte	0x626
 3251 0804 0F080000 		.4byte	0x80f
 3252 0808 0E       		.uleb128 0xe
 3253 0809 F8020000 		.4byte	0x2f8
 3254 080d 00       		.byte	0
 3255 080e 00       		.byte	0
 3256 080f 05       		.uleb128 0x5
 3257 0810 12100000 		.4byte	.LASF103
 3258 0814 07       		.byte	0x7
 3259 0815 D202     		.2byte	0x2d2
 3260 0817 32060000 		.4byte	0x632
 3261 081b 10       		.uleb128 0x10
 3262 081c 4C04     		.2byte	0x44c
 3263 081e 07       		.byte	0x7
 3264 081f D802     		.2byte	0x2d8
 3265 0821 24090000 		.4byte	0x924
 3266 0825 0F       		.uleb128 0xf
 3267 0826 C7090000 		.4byte	.LASF104
 3268 082a 07       		.byte	0x7
 3269 082b DF02     		.2byte	0x2df
 3270 082d 8D000000 		.4byte	0x8d
 3271 0831 00       		.byte	0
 3272 0832 0F       		.uleb128 0xf
 3273 0833 7E0F0000 		.4byte	.LASF105
 3274 0837 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 121


 3275 0838 E402     		.2byte	0x2e4
 3276 083a 8D000000 		.4byte	0x8d
 3277 083e 02       		.byte	0x2
 3278 083f 0F       		.uleb128 0xf
 3279 0840 90010000 		.4byte	.LASF106
 3280 0844 07       		.byte	0x7
 3281 0845 E902     		.2byte	0x2e9
 3282 0847 8D000000 		.4byte	0x8d
 3283 084b 04       		.byte	0x4
 3284 084c 0F       		.uleb128 0xf
 3285 084d 9E0A0000 		.4byte	.LASF107
 3286 0851 07       		.byte	0x7
 3287 0852 EF02     		.2byte	0x2ef
 3288 0854 8D000000 		.4byte	0x8d
 3289 0858 06       		.byte	0x6
 3290 0859 0F       		.uleb128 0xf
 3291 085a 78010000 		.4byte	.LASF108
 3292 085e 07       		.byte	0x7
 3293 085f F402     		.2byte	0x2f4
 3294 0861 8D000000 		.4byte	0x8d
 3295 0865 08       		.byte	0x8
 3296 0866 0F       		.uleb128 0xf
 3297 0867 E5060000 		.4byte	.LASF109
 3298 086b 07       		.byte	0x7
 3299 086c F902     		.2byte	0x2f9
 3300 086e D7000000 		.4byte	0xd7
 3301 0872 0C       		.byte	0xc
 3302 0873 0F       		.uleb128 0xf
 3303 0874 8E0A0000 		.4byte	.LASF110
 3304 0878 07       		.byte	0x7
 3305 0879 FF02     		.2byte	0x2ff
 3306 087b 24090000 		.4byte	0x924
 3307 087f 10       		.byte	0x10
 3308 0880 0F       		.uleb128 0xf
 3309 0881 BF0B0000 		.4byte	.LASF111
 3310 0885 07       		.byte	0x7
 3311 0886 0603     		.2byte	0x306
 3312 0888 24090000 		.4byte	0x924
 3313 088c 18       		.byte	0x18
 3314 088d 0F       		.uleb128 0xf
 3315 088e F1090000 		.4byte	.LASF112
 3316 0892 07       		.byte	0x7
 3317 0893 1603     		.2byte	0x316
 3318 0895 34090000 		.4byte	0x934
 3319 0899 20       		.byte	0x20
 3320 089a 0F       		.uleb128 0xf
 3321 089b 82080000 		.4byte	.LASF113
 3322 089f 07       		.byte	0x7
 3323 08a0 1C03     		.2byte	0x31c
 3324 08a2 8D000000 		.4byte	0x8d
 3325 08a6 42       		.byte	0x42
 3326 08a7 0F       		.uleb128 0xf
 3327 08a8 F4040000 		.4byte	.LASF114
 3328 08ac 07       		.byte	0x7
 3329 08ad 2103     		.2byte	0x321
 3330 08af 81000000 		.4byte	0x81
 3331 08b3 44       		.byte	0x44
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 122


 3332 08b4 0F       		.uleb128 0xf
 3333 08b5 F1070000 		.4byte	.LASF115
 3334 08b9 07       		.byte	0x7
 3335 08ba 2603     		.2byte	0x326
 3336 08bc A2050000 		.4byte	0x5a2
 3337 08c0 46       		.byte	0x46
 3338 08c1 11       		.uleb128 0x11
 3339 08c2 31040000 		.4byte	.LASF116
 3340 08c6 07       		.byte	0x7
 3341 08c7 2B03     		.2byte	0x32b
 3342 08c9 0F080000 		.4byte	0x80f
 3343 08cd EE02     		.2byte	0x2ee
 3344 08cf 11       		.uleb128 0x11
 3345 08d0 EC000000 		.4byte	.LASF117
 3346 08d4 07       		.byte	0x7
 3347 08d5 3003     		.2byte	0x330
 3348 08d7 81000000 		.4byte	0x81
 3349 08db 4204     		.2byte	0x442
 3350 08dd 11       		.uleb128 0x11
 3351 08de 7E040000 		.4byte	.LASF118
 3352 08e2 07       		.byte	0x7
 3353 08e3 3503     		.2byte	0x335
 3354 08e5 81000000 		.4byte	0x81
 3355 08e9 4304     		.2byte	0x443
 3356 08eb 11       		.uleb128 0x11
 3357 08ec AB090000 		.4byte	.LASF119
 3358 08f0 07       		.byte	0x7
 3359 08f1 3A03     		.2byte	0x33a
 3360 08f3 8D000000 		.4byte	0x8d
 3361 08f7 4404     		.2byte	0x444
 3362 08f9 11       		.uleb128 0x11
 3363 08fa 69080000 		.4byte	.LASF120
 3364 08fe 07       		.byte	0x7
 3365 08ff 3F03     		.2byte	0x33f
 3366 0901 06060000 		.4byte	0x606
 3367 0905 4604     		.2byte	0x446
 3368 0907 11       		.uleb128 0x11
 3369 0908 98010000 		.4byte	.LASF121
 3370 090c 07       		.byte	0x7
 3371 090d 4403     		.2byte	0x344
 3372 090f 81000000 		.4byte	0x81
 3373 0913 4804     		.2byte	0x448
 3374 0915 11       		.uleb128 0x11
 3375 0916 700D0000 		.4byte	.LASF122
 3376 091a 07       		.byte	0x7
 3377 091b 4903     		.2byte	0x349
 3378 091d 81000000 		.4byte	0x81
 3379 0921 4904     		.2byte	0x449
 3380 0923 00       		.byte	0
 3381 0924 0D       		.uleb128 0xd
 3382 0925 99000000 		.4byte	0x99
 3383 0929 34090000 		.4byte	0x934
 3384 092d 0E       		.uleb128 0xe
 3385 092e F8020000 		.4byte	0x2f8
 3386 0932 01       		.byte	0x1
 3387 0933 00       		.byte	0
 3388 0934 0D       		.uleb128 0xd
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 123


 3389 0935 81000000 		.4byte	0x81
 3390 0939 44090000 		.4byte	0x944
 3391 093d 0E       		.uleb128 0xe
 3392 093e F8020000 		.4byte	0x2f8
 3393 0942 21       		.byte	0x21
 3394 0943 00       		.byte	0
 3395 0944 05       		.uleb128 0x5
 3396 0945 570A0000 		.4byte	.LASF123
 3397 0949 07       		.byte	0x7
 3398 094a 4A03     		.2byte	0x34a
 3399 094c 1B080000 		.4byte	0x81b
 3400 0950 12       		.uleb128 0x12
 3401 0951 1C       		.byte	0x1c
 3402 0952 07       		.byte	0x7
 3403 0953 5003     		.2byte	0x350
 3404 0955 CF090000 		.4byte	0x9cf
 3405 0959 0F       		.uleb128 0xf
 3406 095a C7080000 		.4byte	.LASF124
 3407 095e 07       		.byte	0x7
 3408 095f 5503     		.2byte	0x355
 3409 0961 CF090000 		.4byte	0x9cf
 3410 0965 00       		.byte	0
 3411 0966 0F       		.uleb128 0xf
 3412 0967 99070000 		.4byte	.LASF125
 3413 096b 07       		.byte	0x7
 3414 096c 5A03     		.2byte	0x35a
 3415 096e CF090000 		.4byte	0x9cf
 3416 0972 04       		.byte	0x4
 3417 0973 0F       		.uleb128 0xf
 3418 0974 3A050000 		.4byte	.LASF126
 3419 0978 07       		.byte	0x7
 3420 0979 5F03     		.2byte	0x35f
 3421 097b CF090000 		.4byte	0x9cf
 3422 097f 08       		.byte	0x8
 3423 0980 0F       		.uleb128 0xf
 3424 0981 E6020000 		.4byte	.LASF127
 3425 0985 07       		.byte	0x7
 3426 0986 6403     		.2byte	0x364
 3427 0988 CF090000 		.4byte	0x9cf
 3428 098c 0C       		.byte	0xc
 3429 098d 0F       		.uleb128 0xf
 3430 098e 060E0000 		.4byte	.LASF128
 3431 0992 07       		.byte	0x7
 3432 0993 6903     		.2byte	0x369
 3433 0995 99000000 		.4byte	0x99
 3434 0999 10       		.byte	0x10
 3435 099a 0F       		.uleb128 0xf
 3436 099b 06090000 		.4byte	.LASF129
 3437 099f 07       		.byte	0x7
 3438 09a0 6E03     		.2byte	0x36e
 3439 09a2 99000000 		.4byte	0x99
 3440 09a6 14       		.byte	0x14
 3441 09a7 0F       		.uleb128 0xf
 3442 09a8 98060000 		.4byte	.LASF130
 3443 09ac 07       		.byte	0x7
 3444 09ad 7303     		.2byte	0x373
 3445 09af 81000000 		.4byte	0x81
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 124


 3446 09b3 18       		.byte	0x18
 3447 09b4 0F       		.uleb128 0xf
 3448 09b5 6E0C0000 		.4byte	.LASF131
 3449 09b9 07       		.byte	0x7
 3450 09ba 7803     		.2byte	0x378
 3451 09bc 81000000 		.4byte	0x81
 3452 09c0 19       		.byte	0x19
 3453 09c1 0F       		.uleb128 0xf
 3454 09c2 54030000 		.4byte	.LASF132
 3455 09c6 07       		.byte	0x7
 3456 09c7 7D03     		.2byte	0x37d
 3457 09c9 81000000 		.4byte	0x81
 3458 09cd 1A       		.byte	0x1a
 3459 09ce 00       		.byte	0
 3460 09cf 07       		.uleb128 0x7
 3461 09d0 04       		.byte	0x4
 3462 09d1 CB000000 		.4byte	0xcb
 3463 09d5 05       		.uleb128 0x5
 3464 09d6 65040000 		.4byte	.LASF133
 3465 09da 07       		.byte	0x7
 3466 09db 7E03     		.2byte	0x37e
 3467 09dd 50090000 		.4byte	0x950
 3468 09e1 12       		.uleb128 0x12
 3469 09e2 20       		.byte	0x20
 3470 09e3 07       		.byte	0x7
 3471 09e4 B103     		.2byte	0x3b1
 3472 09e6 6D0A0000 		.4byte	0xa6d
 3473 09ea 0F       		.uleb128 0xf
 3474 09eb EB0E0000 		.4byte	.LASF134
 3475 09ef 07       		.byte	0x7
 3476 09f0 BA03     		.2byte	0x3ba
 3477 09f2 6D0A0000 		.4byte	0xa6d
 3478 09f6 00       		.byte	0
 3479 09f7 0F       		.uleb128 0xf
 3480 09f8 7F0D0000 		.4byte	.LASF135
 3481 09fc 07       		.byte	0x7
 3482 09fd C103     		.2byte	0x3c1
 3483 09ff 740A0000 		.4byte	0xa74
 3484 0a03 04       		.byte	0x4
 3485 0a04 0F       		.uleb128 0xf
 3486 0a05 D0090000 		.4byte	.LASF136
 3487 0a09 07       		.byte	0x7
 3488 0a0a C703     		.2byte	0x3c7
 3489 0a0c 760A0000 		.4byte	0xa76
 3490 0a10 08       		.byte	0x8
 3491 0a11 0F       		.uleb128 0xf
 3492 0a12 D7080000 		.4byte	.LASF137
 3493 0a16 07       		.byte	0x7
 3494 0a17 CD03     		.2byte	0x3cd
 3495 0a19 740A0000 		.4byte	0xa74
 3496 0a1d 0C       		.byte	0xc
 3497 0a1e 0F       		.uleb128 0xf
 3498 0a1f B10C0000 		.4byte	.LASF138
 3499 0a23 07       		.byte	0x7
 3500 0a24 D403     		.2byte	0x3d4
 3501 0a26 7C0A0000 		.4byte	0xa7c
 3502 0a2a 10       		.byte	0x10
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 125


 3503 0a2b 0F       		.uleb128 0xf
 3504 0a2c 530D0000 		.4byte	.LASF139
 3505 0a30 07       		.byte	0x7
 3506 0a31 D903     		.2byte	0x3d9
 3507 0a33 99000000 		.4byte	0x99
 3508 0a37 14       		.byte	0x14
 3509 0a38 0F       		.uleb128 0xf
 3510 0a39 BC050000 		.4byte	.LASF140
 3511 0a3d 07       		.byte	0x7
 3512 0a3e E003     		.2byte	0x3e0
 3513 0a40 8D000000 		.4byte	0x8d
 3514 0a44 18       		.byte	0x18
 3515 0a45 0F       		.uleb128 0xf
 3516 0a46 9D040000 		.4byte	.LASF141
 3517 0a4a 07       		.byte	0x7
 3518 0a4b E703     		.2byte	0x3e7
 3519 0a4d 81000000 		.4byte	0x81
 3520 0a51 1A       		.byte	0x1a
 3521 0a52 0F       		.uleb128 0xf
 3522 0a53 AD070000 		.4byte	.LASF142
 3523 0a57 07       		.byte	0x7
 3524 0a58 F103     		.2byte	0x3f1
 3525 0a5a 81000000 		.4byte	0x81
 3526 0a5e 1B       		.byte	0x1b
 3527 0a5f 0F       		.uleb128 0xf
 3528 0a60 8E040000 		.4byte	.LASF143
 3529 0a64 07       		.byte	0x7
 3530 0a65 F903     		.2byte	0x3f9
 3531 0a67 820A0000 		.4byte	0xa82
 3532 0a6b 1C       		.byte	0x1c
 3533 0a6c 00       		.byte	0
 3534 0a6d 07       		.uleb128 0x7
 3535 0a6e 04       		.byte	0x4
 3536 0a6f 730A0000 		.4byte	0xa73
 3537 0a73 14       		.uleb128 0x14
 3538 0a74 15       		.uleb128 0x15
 3539 0a75 04       		.byte	0x4
 3540 0a76 07       		.uleb128 0x7
 3541 0a77 04       		.byte	0x4
 3542 0a78 26060000 		.4byte	0x626
 3543 0a7c 07       		.uleb128 0x7
 3544 0a7d 04       		.byte	0x4
 3545 0a7e 81000000 		.4byte	0x81
 3546 0a82 07       		.uleb128 0x7
 3547 0a83 04       		.byte	0x4
 3548 0a84 02020000 		.4byte	0x202
 3549 0a88 05       		.uleb128 0x5
 3550 0a89 78050000 		.4byte	.LASF144
 3551 0a8d 07       		.byte	0x7
 3552 0a8e FA03     		.2byte	0x3fa
 3553 0a90 E1090000 		.4byte	0x9e1
 3554 0a94 10       		.uleb128 0x10
 3555 0a95 4004     		.2byte	0x440
 3556 0a97 07       		.byte	0x7
 3557 0a98 0004     		.2byte	0x400
 3558 0a9a AC0A0000 		.4byte	0xaac
 3559 0a9e 0F       		.uleb128 0xf
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 126


 3560 0a9f 5A030000 		.4byte	.LASF145
 3561 0aa3 07       		.byte	0x7
 3562 0aa4 0504     		.2byte	0x405
 3563 0aa6 AC0A0000 		.4byte	0xaac
 3564 0aaa 00       		.byte	0
 3565 0aab 00       		.byte	0
 3566 0aac 0D       		.uleb128 0xd
 3567 0aad 880A0000 		.4byte	0xa88
 3568 0ab1 BC0A0000 		.4byte	0xabc
 3569 0ab5 0E       		.uleb128 0xe
 3570 0ab6 F8020000 		.4byte	0x2f8
 3571 0aba 21       		.byte	0x21
 3572 0abb 00       		.byte	0
 3573 0abc 05       		.uleb128 0x5
 3574 0abd 0E080000 		.4byte	.LASF146
 3575 0ac1 07       		.byte	0x7
 3576 0ac2 0604     		.2byte	0x406
 3577 0ac4 940A0000 		.4byte	0xa94
 3578 0ac8 02       		.uleb128 0x2
 3579 0ac9 08       		.byte	0x8
 3580 0aca 04       		.byte	0x4
 3581 0acb 89090000 		.4byte	.LASF147
 3582 0acf 0B       		.uleb128 0xb
 3583 0ad0 01       		.byte	0x1
 3584 0ad1 2C000000 		.4byte	0x2c
 3585 0ad5 08       		.byte	0x8
 3586 0ad6 43       		.byte	0x43
 3587 0ad7 FA0A0000 		.4byte	0xafa
 3588 0adb 0C       		.uleb128 0xc
 3589 0adc FA070000 		.4byte	.LASF148
 3590 0ae0 00       		.byte	0
 3591 0ae1 0C       		.uleb128 0xc
 3592 0ae2 05070000 		.4byte	.LASF149
 3593 0ae6 01       		.byte	0x1
 3594 0ae7 0C       		.uleb128 0xc
 3595 0ae8 7C060000 		.4byte	.LASF150
 3596 0aec 02       		.byte	0x2
 3597 0aed 0C       		.uleb128 0xc
 3598 0aee 940F0000 		.4byte	.LASF151
 3599 0af2 03       		.byte	0x3
 3600 0af3 0C       		.uleb128 0xc
 3601 0af4 B7010000 		.4byte	.LASF152
 3602 0af8 04       		.byte	0x4
 3603 0af9 00       		.byte	0
 3604 0afa 03       		.uleb128 0x3
 3605 0afb 27090000 		.4byte	.LASF153
 3606 0aff 08       		.byte	0x8
 3607 0b00 49       		.byte	0x49
 3608 0b01 CF0A0000 		.4byte	0xacf
 3609 0b05 09       		.uleb128 0x9
 3610 0b06 08       		.byte	0x8
 3611 0b07 08       		.byte	0x8
 3612 0b08 CF       		.byte	0xcf
 3613 0b09 260B0000 		.4byte	0xb26
 3614 0b0d 0A       		.uleb128 0xa
 3615 0b0e 780B0000 		.4byte	.LASF154
 3616 0b12 08       		.byte	0x8
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 127


 3617 0b13 D4       		.byte	0xd4
 3618 0b14 99000000 		.4byte	0x99
 3619 0b18 00       		.byte	0
 3620 0b19 0A       		.uleb128 0xa
 3621 0b1a E7080000 		.4byte	.LASF155
 3622 0b1e 08       		.byte	0x8
 3623 0b1f D9       		.byte	0xd9
 3624 0b20 99000000 		.4byte	0x99
 3625 0b24 04       		.byte	0x4
 3626 0b25 00       		.byte	0
 3627 0b26 03       		.uleb128 0x3
 3628 0b27 D20C0000 		.4byte	.LASF156
 3629 0b2b 08       		.byte	0x8
 3630 0b2c DA       		.byte	0xda
 3631 0b2d 050B0000 		.4byte	0xb05
 3632 0b31 16       		.uleb128 0x16
 3633 0b32 A4050000 		.4byte	.LASF159
 3634 0b36 01       		.byte	0x1
 3635 0b37 3B0A     		.2byte	0xa3b
 3636 0b39 81000000 		.4byte	0x81
 3637 0b3d 00000000 		.4byte	.LFB23
 3638 0b41 84000000 		.4byte	.LFE23-.LFB23
 3639 0b45 01       		.uleb128 0x1
 3640 0b46 9C       		.byte	0x9c
 3641 0b47 7C0B0000 		.4byte	0xb7c
 3642 0b4b 17       		.uleb128 0x17
 3643 0b4c 620F0000 		.4byte	.LASF157
 3644 0b50 01       		.byte	0x1
 3645 0b51 3B0A     		.2byte	0xa3b
 3646 0b53 99000000 		.4byte	0x99
 3647 0b57 00000000 		.4byte	.LLST0
 3648 0b5b 17       		.uleb128 0x17
 3649 0b5c AA060000 		.4byte	.LASF158
 3650 0b60 01       		.byte	0x1
 3651 0b61 3B0A     		.2byte	0xa3b
 3652 0b63 99000000 		.4byte	0x99
 3653 0b67 2C000000 		.4byte	.LLST1
 3654 0b6b 18       		.uleb128 0x18
 3655 0b6c A6040000 		.4byte	.LASF161
 3656 0b70 01       		.byte	0x1
 3657 0b71 3D0A     		.2byte	0xa3d
 3658 0b73 81000000 		.4byte	0x81
 3659 0b77 58000000 		.4byte	.LLST2
 3660 0b7b 00       		.byte	0
 3661 0b7c 16       		.uleb128 0x16
 3662 0b7d 35030000 		.4byte	.LASF160
 3663 0b81 01       		.byte	0x1
 3664 0b82 870A     		.2byte	0xa87
 3665 0b84 81000000 		.4byte	0x81
 3666 0b88 00000000 		.4byte	.LFB24
 3667 0b8c 42000000 		.4byte	.LFE24-.LFB24
 3668 0b90 01       		.uleb128 0x1
 3669 0b91 9C       		.byte	0x9c
 3670 0b92 E70B0000 		.4byte	0xbe7
 3671 0b96 17       		.uleb128 0x17
 3672 0b97 620F0000 		.4byte	.LASF157
 3673 0b9b 01       		.byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 128


 3674 0b9c 870A     		.2byte	0xa87
 3675 0b9e 99000000 		.4byte	0x99
 3676 0ba2 77000000 		.4byte	.LLST3
 3677 0ba6 17       		.uleb128 0x17
 3678 0ba7 A6040000 		.4byte	.LASF161
 3679 0bab 01       		.byte	0x1
 3680 0bac 870A     		.2byte	0xa87
 3681 0bae 81000000 		.4byte	0x81
 3682 0bb2 BC000000 		.4byte	.LLST4
 3683 0bb6 18       		.uleb128 0x18
 3684 0bb7 E1010000 		.4byte	.LASF162
 3685 0bbb 01       		.byte	0x1
 3686 0bbc 890A     		.2byte	0xa89
 3687 0bbe 99000000 		.4byte	0x99
 3688 0bc2 F6000000 		.4byte	.LLST5
 3689 0bc6 18       		.uleb128 0x18
 3690 0bc7 59020000 		.4byte	.LASF163
 3691 0bcb 01       		.byte	0x1
 3692 0bcc 8A0A     		.2byte	0xa8a
 3693 0bce 99000000 		.4byte	0x99
 3694 0bd2 20010000 		.4byte	.LLST6
 3695 0bd6 18       		.uleb128 0x18
 3696 0bd7 F80E0000 		.4byte	.LASF164
 3697 0bdb 01       		.byte	0x1
 3698 0bdc 8B0A     		.2byte	0xa8b
 3699 0bde 99000000 		.4byte	0x99
 3700 0be2 49010000 		.4byte	.LLST7
 3701 0be6 00       		.byte	0
 3702 0be7 19       		.uleb128 0x19
 3703 0be8 80020000 		.4byte	.LASF267
 3704 0bec 01       		.byte	0x1
 3705 0bed EC       		.byte	0xec
 3706 0bee 99000000 		.4byte	0x99
 3707 0bf2 00000000 		.4byte	.LFB1
 3708 0bf6 10000000 		.4byte	.LFE1-.LFB1
 3709 0bfa 01       		.uleb128 0x1
 3710 0bfb 9C       		.byte	0x9c
 3711 0bfc 1A       		.uleb128 0x1a
 3712 0bfd 130B0000 		.4byte	.LASF167
 3713 0c01 01       		.byte	0x1
 3714 0c02 1A01     		.2byte	0x11a
 3715 0c04 BA000000 		.4byte	0xba
 3716 0c08 00000000 		.4byte	.LFB2
 3717 0c0c 40000000 		.4byte	.LFE2-.LFB2
 3718 0c10 01       		.uleb128 0x1
 3719 0c11 9C       		.byte	0x9c
 3720 0c12 400C0000 		.4byte	0xc40
 3721 0c16 17       		.uleb128 0x17
 3722 0c17 B00F0000 		.4byte	.LASF165
 3723 0c1b 01       		.byte	0x1
 3724 0c1c 1A01     		.2byte	0x11a
 3725 0c1e 99000000 		.4byte	0x99
 3726 0c22 5C010000 		.4byte	.LLST8
 3727 0c26 18       		.uleb128 0x18
 3728 0c27 870F0000 		.4byte	.LASF166
 3729 0c2b 01       		.byte	0x1
 3730 0c2c 1C01     		.2byte	0x11c
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 129


 3731 0c2e BA000000 		.4byte	0xba
 3732 0c32 7D010000 		.4byte	.LLST9
 3733 0c36 1B       		.uleb128 0x1b
 3734 0c37 38000000 		.4byte	.LVL27
 3735 0c3b C8170000 		.4byte	0x17c8
 3736 0c3f 00       		.byte	0
 3737 0c40 1A       		.uleb128 0x1a
 3738 0c41 24080000 		.4byte	.LASF168
 3739 0c45 01       		.byte	0x1
 3740 0c46 6D01     		.2byte	0x16d
 3741 0c48 BA000000 		.4byte	0xba
 3742 0c4c 00000000 		.4byte	.LFB3
 3743 0c50 2C000000 		.4byte	.LFE3-.LFB3
 3744 0c54 01       		.uleb128 0x1
 3745 0c55 9C       		.byte	0x9c
 3746 0c56 740C0000 		.4byte	0xc74
 3747 0c5a 18       		.uleb128 0x18
 3748 0c5b 7E000000 		.4byte	.LASF169
 3749 0c5f 01       		.byte	0x1
 3750 0c60 6F01     		.2byte	0x16f
 3751 0c62 BA000000 		.4byte	0xba
 3752 0c66 9B010000 		.4byte	.LLST10
 3753 0c6a 1B       		.uleb128 0x1b
 3754 0c6b 16000000 		.4byte	.LVL30
 3755 0c6f D4170000 		.4byte	0x17d4
 3756 0c73 00       		.byte	0
 3757 0c74 1A       		.uleb128 0x1a
 3758 0c75 EE0D0000 		.4byte	.LASF170
 3759 0c79 01       		.byte	0x1
 3760 0c7a AB01     		.2byte	0x1ab
 3761 0c7c BA000000 		.4byte	0xba
 3762 0c80 00000000 		.4byte	.LFB4
 3763 0c84 48000000 		.4byte	.LFE4-.LFB4
 3764 0c88 01       		.uleb128 0x1
 3765 0c89 9C       		.byte	0x9c
 3766 0c8a CC0C0000 		.4byte	0xccc
 3767 0c8e 18       		.uleb128 0x18
 3768 0c8f 7E000000 		.4byte	.LASF169
 3769 0c93 01       		.byte	0x1
 3770 0c94 AD01     		.2byte	0x1ad
 3771 0c96 BA000000 		.4byte	0xba
 3772 0c9a BA010000 		.4byte	.LLST11
 3773 0c9e 18       		.uleb128 0x18
 3774 0c9f 5A090000 		.4byte	.LASF171
 3775 0ca3 01       		.byte	0x1
 3776 0ca4 AF01     		.2byte	0x1af
 3777 0ca6 99000000 		.4byte	0x99
 3778 0caa 08020000 		.4byte	.LLST12
 3779 0cae 1C       		.uleb128 0x1c
 3780 0caf 18000000 		.4byte	.LVL35
 3781 0cb3 FC0B0000 		.4byte	0xbfc
 3782 0cb7 C20C0000 		.4byte	0xcc2
 3783 0cbb 1D       		.uleb128 0x1d
 3784 0cbc 01       		.uleb128 0x1
 3785 0cbd 50       		.byte	0x50
 3786 0cbe 02       		.uleb128 0x2
 3787 0cbf 74       		.byte	0x74
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 130


 3788 0cc0 00       		.sleb128 0
 3789 0cc1 00       		.byte	0
 3790 0cc2 1B       		.uleb128 0x1b
 3791 0cc3 32000000 		.4byte	.LVL36
 3792 0cc7 400C0000 		.4byte	0xc40
 3793 0ccb 00       		.byte	0
 3794 0ccc 1A       		.uleb128 0x1a
 3795 0ccd BF000000 		.4byte	.LASF172
 3796 0cd1 01       		.byte	0x1
 3797 0cd2 1702     		.2byte	0x217
 3798 0cd4 BA000000 		.4byte	0xba
 3799 0cd8 00000000 		.4byte	.LFB5
 3800 0cdc 54000000 		.4byte	.LFE5-.LFB5
 3801 0ce0 01       		.uleb128 0x1
 3802 0ce1 9C       		.byte	0x9c
 3803 0ce2 200D0000 		.4byte	0xd20
 3804 0ce6 17       		.uleb128 0x17
 3805 0ce7 B00F0000 		.4byte	.LASF165
 3806 0ceb 01       		.byte	0x1
 3807 0cec 1702     		.2byte	0x217
 3808 0cee 99000000 		.4byte	0x99
 3809 0cf2 1B020000 		.4byte	.LLST13
 3810 0cf6 17       		.uleb128 0x17
 3811 0cf7 DD020000 		.4byte	.LASF173
 3812 0cfb 01       		.byte	0x1
 3813 0cfc 1702     		.2byte	0x217
 3814 0cfe 99000000 		.4byte	0x99
 3815 0d02 3C020000 		.4byte	.LLST14
 3816 0d06 18       		.uleb128 0x18
 3817 0d07 870F0000 		.4byte	.LASF166
 3818 0d0b 01       		.byte	0x1
 3819 0d0c 1902     		.2byte	0x219
 3820 0d0e BA000000 		.4byte	0xba
 3821 0d12 5D020000 		.4byte	.LLST15
 3822 0d16 1B       		.uleb128 0x1b
 3823 0d17 48000000 		.4byte	.LVL42
 3824 0d1b E0170000 		.4byte	0x17e0
 3825 0d1f 00       		.byte	0
 3826 0d20 1A       		.uleb128 0x1a
 3827 0d21 9A080000 		.4byte	.LASF174
 3828 0d25 01       		.byte	0x1
 3829 0d26 8102     		.2byte	0x281
 3830 0d28 BA000000 		.4byte	0xba
 3831 0d2c 00000000 		.4byte	.LFB6
 3832 0d30 2C000000 		.4byte	.LFE6-.LFB6
 3833 0d34 01       		.uleb128 0x1
 3834 0d35 9C       		.byte	0x9c
 3835 0d36 540D0000 		.4byte	0xd54
 3836 0d3a 18       		.uleb128 0x18
 3837 0d3b 7E000000 		.4byte	.LASF169
 3838 0d3f 01       		.byte	0x1
 3839 0d40 8302     		.2byte	0x283
 3840 0d42 BA000000 		.4byte	0xba
 3841 0d46 7B020000 		.4byte	.LLST16
 3842 0d4a 1B       		.uleb128 0x1b
 3843 0d4b 16000000 		.4byte	.LVL45
 3844 0d4f EC170000 		.4byte	0x17ec
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 131


 3845 0d53 00       		.byte	0
 3846 0d54 1E       		.uleb128 0x1e
 3847 0d55 3E0D0000 		.4byte	.LASF181
 3848 0d59 01       		.byte	0x1
 3849 0d5a 4803     		.2byte	0x348
 3850 0d5c 00000000 		.4byte	.LFB8
 3851 0d60 9C000000 		.4byte	.LFE8-.LFB8
 3852 0d64 01       		.uleb128 0x1
 3853 0d65 9C       		.byte	0x9c
 3854 0d66 1E0E0000 		.4byte	0xe1e
 3855 0d6a 17       		.uleb128 0x17
 3856 0d6b B00F0000 		.4byte	.LASF165
 3857 0d6f 01       		.byte	0x1
 3858 0d70 4803     		.2byte	0x348
 3859 0d72 99000000 		.4byte	0x99
 3860 0d76 9A020000 		.4byte	.LLST17
 3861 0d7a 17       		.uleb128 0x17
 3862 0d7b 6A000000 		.4byte	.LASF175
 3863 0d7f 01       		.byte	0x1
 3864 0d80 4803     		.2byte	0x348
 3865 0d82 99000000 		.4byte	0x99
 3866 0d86 BB020000 		.4byte	.LLST18
 3867 0d8a 17       		.uleb128 0x17
 3868 0d8b DE0D0000 		.4byte	.LASF176
 3869 0d8f 01       		.byte	0x1
 3870 0d90 4803     		.2byte	0x348
 3871 0d92 99000000 		.4byte	0x99
 3872 0d96 DC020000 		.4byte	.LLST19
 3873 0d9a 1F       		.uleb128 0x1f
 3874 0d9b 91050000 		.4byte	.LASF177
 3875 0d9f 01       		.byte	0x1
 3876 0da0 4A03     		.2byte	0x34a
 3877 0da2 99000000 		.4byte	0x99
 3878 0da6 01       		.byte	0x1
 3879 0da7 18       		.uleb128 0x18
 3880 0da8 E40D0000 		.4byte	.LASF178
 3881 0dac 01       		.byte	0x1
 3882 0dad 4B03     		.2byte	0x34b
 3883 0daf 99000000 		.4byte	0x99
 3884 0db3 08030000 		.4byte	.LLST20
 3885 0db7 18       		.uleb128 0x18
 3886 0db8 D2010000 		.4byte	.LASF179
 3887 0dbc 01       		.byte	0x1
 3888 0dbd 4C03     		.2byte	0x34c
 3889 0dbf 81000000 		.4byte	0x81
 3890 0dc3 27030000 		.4byte	.LLST21
 3891 0dc7 18       		.uleb128 0x18
 3892 0dc8 6A0D0000 		.4byte	.LASF180
 3893 0dcc 01       		.byte	0x1
 3894 0dcd 4D03     		.2byte	0x34d
 3895 0dcf 1E0E0000 		.4byte	0xe1e
 3896 0dd3 50030000 		.4byte	.LLST22
 3897 0dd7 1B       		.uleb128 0x1b
 3898 0dd8 1A000000 		.4byte	.LVL52
 3899 0ddc F8170000 		.4byte	0x17f8
 3900 0de0 1B       		.uleb128 0x1b
 3901 0de1 3A000000 		.4byte	.LVL53
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 132


 3902 0de5 03180000 		.4byte	0x1803
 3903 0de9 1B       		.uleb128 0x1b
 3904 0dea 4C000000 		.4byte	.LVL54
 3905 0dee F8170000 		.4byte	0x17f8
 3906 0df2 1B       		.uleb128 0x1b
 3907 0df3 6C000000 		.4byte	.LVL55
 3908 0df7 03180000 		.4byte	0x1803
 3909 0dfb 1B       		.uleb128 0x1b
 3910 0dfc 72000000 		.4byte	.LVL56
 3911 0e00 F8170000 		.4byte	0x17f8
 3912 0e04 1B       		.uleb128 0x1b
 3913 0e05 84000000 		.4byte	.LVL57
 3914 0e09 03180000 		.4byte	0x1803
 3915 0e0d 20       		.uleb128 0x20
 3916 0e0e 8C000000 		.4byte	.LVL58
 3917 0e12 0E180000 		.4byte	0x180e
 3918 0e16 1D       		.uleb128 0x1d
 3919 0e17 01       		.uleb128 0x1
 3920 0e18 50       		.byte	0x50
 3921 0e19 02       		.uleb128 0x2
 3922 0e1a 74       		.byte	0x74
 3923 0e1b 00       		.sleb128 0
 3924 0e1c 00       		.byte	0
 3925 0e1d 00       		.byte	0
 3926 0e1e 07       		.uleb128 0x7
 3927 0e1f 04       		.byte	0x4
 3928 0e20 240E0000 		.4byte	0xe24
 3929 0e24 21       		.uleb128 0x21
 3930 0e25 D5090000 		.4byte	0x9d5
 3931 0e29 1E       		.uleb128 0x1e
 3932 0e2a 6B0A0000 		.4byte	.LASF182
 3933 0e2e 01       		.byte	0x1
 3934 0e2f 8E04     		.2byte	0x48e
 3935 0e31 00000000 		.4byte	.LFB11
 3936 0e35 80000000 		.4byte	.LFE11-.LFB11
 3937 0e39 01       		.uleb128 0x1
 3938 0e3a 9C       		.byte	0x9c
 3939 0e3b D20E0000 		.4byte	0xed2
 3940 0e3f 17       		.uleb128 0x17
 3941 0e40 DE0D0000 		.4byte	.LASF176
 3942 0e44 01       		.byte	0x1
 3943 0e45 8E04     		.2byte	0x48e
 3944 0e47 99000000 		.4byte	0x99
 3945 0e4b 63030000 		.4byte	.LLST23
 3946 0e4f 18       		.uleb128 0x18
 3947 0e50 D2010000 		.4byte	.LASF179
 3948 0e54 01       		.byte	0x1
 3949 0e55 9004     		.2byte	0x490
 3950 0e57 81000000 		.4byte	0x81
 3951 0e5b 84030000 		.4byte	.LLST24
 3952 0e5f 18       		.uleb128 0x18
 3953 0e60 2B030000 		.4byte	.LASF183
 3954 0e64 01       		.byte	0x1
 3955 0e65 9204     		.2byte	0x492
 3956 0e67 99000000 		.4byte	0x99
 3957 0e6b 97030000 		.4byte	.LLST25
 3958 0e6f 18       		.uleb128 0x18
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 133


 3959 0e70 4C050000 		.4byte	.LASF184
 3960 0e74 01       		.byte	0x1
 3961 0e75 9404     		.2byte	0x494
 3962 0e77 99000000 		.4byte	0x99
 3963 0e7b B6030000 		.4byte	.LLST26
 3964 0e7f 18       		.uleb128 0x18
 3965 0e80 D6040000 		.4byte	.LASF185
 3966 0e84 01       		.byte	0x1
 3967 0e85 9504     		.2byte	0x495
 3968 0e87 99000000 		.4byte	0x99
 3969 0e8b D5030000 		.4byte	.LLST27
 3970 0e8f 18       		.uleb128 0x18
 3971 0e90 6C060000 		.4byte	.LASF186
 3972 0e94 01       		.byte	0x1
 3973 0e95 9704     		.2byte	0x497
 3974 0e97 99000000 		.4byte	0x99
 3975 0e9b F4030000 		.4byte	.LLST28
 3976 0e9f 18       		.uleb128 0x18
 3977 0ea0 49080000 		.4byte	.LASF187
 3978 0ea4 01       		.byte	0x1
 3979 0ea5 9804     		.2byte	0x498
 3980 0ea7 99000000 		.4byte	0x99
 3981 0eab 1E040000 		.4byte	.LLST29
 3982 0eaf 18       		.uleb128 0x18
 3983 0eb0 28040000 		.4byte	.LASF188
 3984 0eb4 01       		.byte	0x1
 3985 0eb5 9A04     		.2byte	0x49a
 3986 0eb7 1E0E0000 		.4byte	0xe1e
 3987 0ebb 31040000 		.4byte	.LLST30
 3988 0ebf 1B       		.uleb128 0x1b
 3989 0ec0 34000000 		.4byte	.LVL69
 3990 0ec4 F8170000 		.4byte	0x17f8
 3991 0ec8 1B       		.uleb128 0x1b
 3992 0ec9 6C000000 		.4byte	.LVL80
 3993 0ecd 03180000 		.4byte	0x1803
 3994 0ed1 00       		.byte	0
 3995 0ed2 1E       		.uleb128 0x1e
 3996 0ed3 CD0E0000 		.4byte	.LASF189
 3997 0ed7 01       		.byte	0x1
 3998 0ed8 2405     		.2byte	0x524
 3999 0eda 00000000 		.4byte	.LFB12
 4000 0ede 78000000 		.4byte	.LFE12-.LFB12
 4001 0ee2 01       		.uleb128 0x1
 4002 0ee3 9C       		.byte	0x9c
 4003 0ee4 0B0F0000 		.4byte	0xf0b
 4004 0ee8 18       		.uleb128 0x18
 4005 0ee9 FB090000 		.4byte	.LASF190
 4006 0eed 01       		.byte	0x1
 4007 0eee 2C05     		.2byte	0x52c
 4008 0ef0 BA000000 		.4byte	0xba
 4009 0ef4 44040000 		.4byte	.LLST31
 4010 0ef8 1B       		.uleb128 0x1b
 4011 0ef9 14000000 		.4byte	.LVL87
 4012 0efd FC0B0000 		.4byte	0xbfc
 4013 0f01 1B       		.uleb128 0x1b
 4014 0f02 2A000000 		.4byte	.LVL89
 4015 0f06 400C0000 		.4byte	0xc40
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 134


 4016 0f0a 00       		.byte	0
 4017 0f0b 1E       		.uleb128 0x1e
 4018 0f0c 340A0000 		.4byte	.LASF191
 4019 0f10 01       		.byte	0x1
 4020 0f11 7105     		.2byte	0x571
 4021 0f13 00000000 		.4byte	.LFB13
 4022 0f17 08000000 		.4byte	.LFE13-.LFB13
 4023 0f1b 01       		.uleb128 0x1
 4024 0f1c 9C       		.byte	0x9c
 4025 0f1d 430F0000 		.4byte	0xf43
 4026 0f21 17       		.uleb128 0x17
 4027 0f22 D9070000 		.4byte	.LASF192
 4028 0f26 01       		.byte	0x1
 4029 0f27 7105     		.2byte	0x571
 4030 0f29 DC000000 		.4byte	0xdc
 4031 0f2d 8F040000 		.4byte	.LLST32
 4032 0f31 20       		.uleb128 0x20
 4033 0f32 06000000 		.4byte	.LVL96
 4034 0f36 1A180000 		.4byte	0x181a
 4035 0f3a 1D       		.uleb128 0x1d
 4036 0f3b 01       		.uleb128 0x1
 4037 0f3c 50       		.byte	0x50
 4038 0f3d 03       		.uleb128 0x3
 4039 0f3e F3       		.byte	0xf3
 4040 0f3f 01       		.uleb128 0x1
 4041 0f40 50       		.byte	0x50
 4042 0f41 00       		.byte	0
 4043 0f42 00       		.byte	0
 4044 0f43 1E       		.uleb128 0x1e
 4045 0f44 99020000 		.4byte	.LASF193
 4046 0f48 01       		.byte	0x1
 4047 0f49 8805     		.2byte	0x588
 4048 0f4b 00000000 		.4byte	.LFB14
 4049 0f4f 30000000 		.4byte	.LFE14-.LFB14
 4050 0f53 01       		.uleb128 0x1
 4051 0f54 9C       		.byte	0x9c
 4052 0f55 6A0F0000 		.4byte	0xf6a
 4053 0f59 17       		.uleb128 0x17
 4054 0f5a 45050000 		.4byte	.LASF194
 4055 0f5e 01       		.byte	0x1
 4056 0f5f 8805     		.2byte	0x588
 4057 0f61 99000000 		.4byte	0x99
 4058 0f65 B0040000 		.4byte	.LLST33
 4059 0f69 00       		.byte	0
 4060 0f6a 1E       		.uleb128 0x1e
 4061 0f6b 34070000 		.4byte	.LASF195
 4062 0f6f 01       		.byte	0x1
 4063 0f70 CC05     		.2byte	0x5cc
 4064 0f72 00000000 		.4byte	.LFB15
 4065 0f76 14000000 		.4byte	.LFE15-.LFB15
 4066 0f7a 01       		.uleb128 0x1
 4067 0f7b 9C       		.byte	0x9c
 4068 0f7c A10F0000 		.4byte	0xfa1
 4069 0f80 17       		.uleb128 0x17
 4070 0f81 100E0000 		.4byte	.LASF57
 4071 0f85 01       		.byte	0x1
 4072 0f86 CC05     		.2byte	0x5cc
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 135


 4073 0f88 99000000 		.4byte	0x99
 4074 0f8c DE040000 		.4byte	.LLST34
 4075 0f90 18       		.uleb128 0x18
 4076 0f91 030F0000 		.4byte	.LASF196
 4077 0f95 01       		.byte	0x1
 4078 0f96 CF05     		.2byte	0x5cf
 4079 0f98 99000000 		.4byte	0x99
 4080 0f9c 0C050000 		.4byte	.LLST35
 4081 0fa0 00       		.byte	0
 4082 0fa1 1E       		.uleb128 0x1e
 4083 0fa2 0B090000 		.4byte	.LASF197
 4084 0fa6 01       		.byte	0x1
 4085 0fa7 2006     		.2byte	0x620
 4086 0fa9 00000000 		.4byte	.LFB16
 4087 0fad 12000000 		.4byte	.LFE16-.LFB16
 4088 0fb1 01       		.uleb128 0x1
 4089 0fb2 9C       		.byte	0x9c
 4090 0fb3 FD0F0000 		.4byte	0xffd
 4091 0fb7 17       		.uleb128 0x17
 4092 0fb8 100E0000 		.4byte	.LASF57
 4093 0fbc 01       		.byte	0x1
 4094 0fbd 2006     		.2byte	0x620
 4095 0fbf 99000000 		.4byte	0x99
 4096 0fc3 35050000 		.4byte	.LLST36
 4097 0fc7 17       		.uleb128 0x17
 4098 0fc8 45050000 		.4byte	.LASF194
 4099 0fcc 01       		.byte	0x1
 4100 0fcd 2006     		.2byte	0x620
 4101 0fcf 99000000 		.4byte	0x99
 4102 0fd3 61050000 		.4byte	.LLST37
 4103 0fd7 1C       		.uleb128 0x1c
 4104 0fd8 0A000000 		.4byte	.LVL108
 4105 0fdc 430F0000 		.4byte	0xf43
 4106 0fe0 EC0F0000 		.4byte	0xfec
 4107 0fe4 1D       		.uleb128 0x1d
 4108 0fe5 01       		.uleb128 0x1
 4109 0fe6 50       		.byte	0x50
 4110 0fe7 03       		.uleb128 0x3
 4111 0fe8 F3       		.byte	0xf3
 4112 0fe9 01       		.uleb128 0x1
 4113 0fea 51       		.byte	0x51
 4114 0feb 00       		.byte	0
 4115 0fec 20       		.uleb128 0x20
 4116 0fed 10000000 		.4byte	.LVL109
 4117 0ff1 6A0F0000 		.4byte	0xf6a
 4118 0ff5 1D       		.uleb128 0x1d
 4119 0ff6 01       		.uleb128 0x1
 4120 0ff7 50       		.byte	0x50
 4121 0ff8 02       		.uleb128 0x2
 4122 0ff9 74       		.byte	0x74
 4123 0ffa 00       		.sleb128 0
 4124 0ffb 00       		.byte	0
 4125 0ffc 00       		.byte	0
 4126 0ffd 1A       		.uleb128 0x1a
 4127 0ffe EC060000 		.4byte	.LASF198
 4128 1002 01       		.byte	0x1
 4129 1003 5406     		.2byte	0x654
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 136


 4130 1005 BA000000 		.4byte	0xba
 4131 1009 00000000 		.4byte	.LFB17
 4132 100d 1C000000 		.4byte	.LFE17-.LFB17
 4133 1011 01       		.uleb128 0x1
 4134 1012 9C       		.byte	0x9c
 4135 1013 4F100000 		.4byte	0x104f
 4136 1017 17       		.uleb128 0x17
 4137 1018 B00F0000 		.4byte	.LASF165
 4138 101c 01       		.byte	0x1
 4139 101d 5406     		.2byte	0x654
 4140 101f 99000000 		.4byte	0x99
 4141 1023 82050000 		.4byte	.LLST38
 4142 1027 18       		.uleb128 0x18
 4143 1028 E1070000 		.4byte	.LASF199
 4144 102c 01       		.byte	0x1
 4145 102d 5606     		.2byte	0x656
 4146 102f BA000000 		.4byte	0xba
 4147 1033 C4050000 		.4byte	.LLST39
 4148 1037 20       		.uleb128 0x20
 4149 1038 1A000000 		.4byte	.LVL117
 4150 103c 25180000 		.4byte	0x1825
 4151 1040 1D       		.uleb128 0x1d
 4152 1041 01       		.uleb128 0x1
 4153 1042 50       		.byte	0x50
 4154 1043 03       		.uleb128 0x3
 4155 1044 F3       		.byte	0xf3
 4156 1045 01       		.uleb128 0x1
 4157 1046 50       		.byte	0x50
 4158 1047 1D       		.uleb128 0x1d
 4159 1048 01       		.uleb128 0x1
 4160 1049 51       		.byte	0x51
 4161 104a 02       		.uleb128 0x2
 4162 104b 08       		.byte	0x8
 4163 104c 55       		.byte	0x55
 4164 104d 00       		.byte	0
 4165 104e 00       		.byte	0
 4166 104f 1A       		.uleb128 0x1a
 4167 1050 63020000 		.4byte	.LASF200
 4168 1054 01       		.byte	0x1
 4169 1055 C906     		.2byte	0x6c9
 4170 1057 BA000000 		.4byte	0xba
 4171 105b 00000000 		.4byte	.LFB18
 4172 105f 1A000000 		.4byte	.LFE18-.LFB18
 4173 1063 01       		.uleb128 0x1
 4174 1064 9C       		.byte	0x9c
 4175 1065 9A100000 		.4byte	0x109a
 4176 1069 18       		.uleb128 0x18
 4177 106a E1070000 		.4byte	.LASF199
 4178 106e 01       		.byte	0x1
 4179 106f CB06     		.2byte	0x6cb
 4180 1071 BA000000 		.4byte	0xba
 4181 1075 EE050000 		.4byte	.LLST40
 4182 1079 18       		.uleb128 0x18
 4183 107a 5A090000 		.4byte	.LASF171
 4184 107e 01       		.byte	0x1
 4185 107f CC06     		.2byte	0x6cc
 4186 1081 99000000 		.4byte	0x99
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 137


 4187 1085 18060000 		.4byte	.LLST41
 4188 1089 20       		.uleb128 0x20
 4189 108a 0E000000 		.4byte	.LVL120
 4190 108e FD0F0000 		.4byte	0xffd
 4191 1092 1D       		.uleb128 0x1d
 4192 1093 01       		.uleb128 0x1
 4193 1094 50       		.byte	0x50
 4194 1095 02       		.uleb128 0x2
 4195 1096 74       		.byte	0x74
 4196 1097 00       		.sleb128 0
 4197 1098 00       		.byte	0
 4198 1099 00       		.byte	0
 4199 109a 1A       		.uleb128 0x1a
 4200 109b 48000000 		.4byte	.LASF201
 4201 109f 01       		.byte	0x1
 4202 10a0 E80A     		.2byte	0xae8
 4203 10a2 99000000 		.4byte	0x99
 4204 10a6 00000000 		.4byte	.LFB25
 4205 10aa 10000000 		.4byte	.LFE25-.LFB25
 4206 10ae 01       		.uleb128 0x1
 4207 10af 9C       		.byte	0x9c
 4208 10b0 E1100000 		.4byte	0x10e1
 4209 10b4 17       		.uleb128 0x17
 4210 10b5 B00F0000 		.4byte	.LASF165
 4211 10b9 01       		.byte	0x1
 4212 10ba E80A     		.2byte	0xae8
 4213 10bc 99000000 		.4byte	0x99
 4214 10c0 37060000 		.4byte	.LLST42
 4215 10c4 22       		.uleb128 0x22
 4216 10c5 880C0000 		.4byte	.LASF202
 4217 10c9 01       		.byte	0x1
 4218 10ca EA0A     		.2byte	0xaea
 4219 10cc 99000000 		.4byte	0x99
 4220 10d0 01       		.uleb128 0x1
 4221 10d1 50       		.byte	0x50
 4222 10d2 22       		.uleb128 0x22
 4223 10d3 EC020000 		.4byte	.LASF203
 4224 10d7 01       		.byte	0x1
 4225 10d8 EE0A     		.2byte	0xaee
 4226 10da E1100000 		.4byte	0x10e1
 4227 10de 01       		.uleb128 0x1
 4228 10df 53       		.byte	0x53
 4229 10e0 00       		.byte	0
 4230 10e1 07       		.uleb128 0x7
 4231 10e2 04       		.byte	0x4
 4232 10e3 FF020000 		.4byte	0x2ff
 4233 10e7 1A       		.uleb128 0x1a
 4234 10e8 16050000 		.4byte	.LASF204
 4235 10ec 01       		.byte	0x1
 4236 10ed 400B     		.2byte	0xb40
 4237 10ef 81000000 		.4byte	0x81
 4238 10f3 00000000 		.4byte	.LFB26
 4239 10f7 24000000 		.4byte	.LFE26-.LFB26
 4240 10fb 01       		.uleb128 0x1
 4241 10fc 9C       		.byte	0x9c
 4242 10fd 3D110000 		.4byte	0x113d
 4243 1101 17       		.uleb128 0x17
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 138


 4244 1102 620F0000 		.4byte	.LASF157
 4245 1106 01       		.byte	0x1
 4246 1107 400B     		.2byte	0xb40
 4247 1109 99000000 		.4byte	0x99
 4248 110d 58060000 		.4byte	.LLST43
 4249 1111 23       		.uleb128 0x23
 4250 1112 DA060000 		.4byte	.LASF48
 4251 1116 01       		.byte	0x1
 4252 1117 400B     		.2byte	0xb40
 4253 1119 99000000 		.4byte	0x99
 4254 111d 01       		.uleb128 0x1
 4255 111e 51       		.byte	0x51
 4256 111f 18       		.uleb128 0x18
 4257 1120 5D0C0000 		.4byte	.LASF205
 4258 1124 01       		.byte	0x1
 4259 1125 420B     		.2byte	0xb42
 4260 1127 99000000 		.4byte	0x99
 4261 112b 92060000 		.4byte	.LLST44
 4262 112f 1F       		.uleb128 0x1f
 4263 1130 700F0000 		.4byte	.LASF206
 4264 1134 01       		.byte	0x1
 4265 1135 430B     		.2byte	0xb43
 4266 1137 99000000 		.4byte	0x99
 4267 113b 01       		.byte	0x1
 4268 113c 00       		.byte	0
 4269 113d 24       		.uleb128 0x24
 4270 113e FD020000 		.4byte	.LASF232
 4271 1142 01       		.byte	0x1
 4272 1143 9909     		.2byte	0x999
 4273 1145 00000000 		.4byte	.LFB22
 4274 1149 3A000000 		.4byte	.LFE22-.LFB22
 4275 114d 01       		.uleb128 0x1
 4276 114e 9C       		.byte	0x9c
 4277 114f 22120000 		.4byte	0x1222
 4278 1153 17       		.uleb128 0x17
 4279 1154 5A090000 		.4byte	.LASF171
 4280 1158 01       		.byte	0x1
 4281 1159 9909     		.2byte	0x999
 4282 115b 99000000 		.4byte	0x99
 4283 115f A5060000 		.4byte	.LLST45
 4284 1163 17       		.uleb128 0x17
 4285 1164 EC020000 		.4byte	.LASF203
 4286 1168 01       		.byte	0x1
 4287 1169 9909     		.2byte	0x999
 4288 116b E1100000 		.4byte	0x10e1
 4289 116f C6060000 		.4byte	.LLST46
 4290 1173 18       		.uleb128 0x18
 4291 1174 A6040000 		.4byte	.LASF161
 4292 1178 01       		.byte	0x1
 4293 1179 9B09     		.2byte	0x99b
 4294 117b 81000000 		.4byte	0x81
 4295 117f F2060000 		.4byte	.LLST47
 4296 1183 18       		.uleb128 0x18
 4297 1184 E1010000 		.4byte	.LASF162
 4298 1188 01       		.byte	0x1
 4299 1189 9C09     		.2byte	0x99c
 4300 118b 81000000 		.4byte	0x81
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 139


 4301 118f 10070000 		.4byte	.LLST48
 4302 1193 18       		.uleb128 0x18
 4303 1194 AA060000 		.4byte	.LASF158
 4304 1198 01       		.byte	0x1
 4305 1199 A009     		.2byte	0x9a0
 4306 119b 99000000 		.4byte	0x99
 4307 119f 23070000 		.4byte	.LLST49
 4308 11a3 18       		.uleb128 0x18
 4309 11a4 620F0000 		.4byte	.LASF157
 4310 11a8 01       		.byte	0x1
 4311 11a9 A209     		.2byte	0x9a2
 4312 11ab 99000000 		.4byte	0x99
 4313 11af 41070000 		.4byte	.LLST50
 4314 11b3 1C       		.uleb128 0x1c
 4315 11b4 08000000 		.4byte	.LVL136
 4316 11b8 9A100000 		.4byte	0x109a
 4317 11bc C8110000 		.4byte	0x11c8
 4318 11c0 1D       		.uleb128 0x1d
 4319 11c1 01       		.uleb128 0x1
 4320 11c2 50       		.byte	0x50
 4321 11c3 03       		.uleb128 0x3
 4322 11c4 F3       		.byte	0xf3
 4323 11c5 01       		.uleb128 0x1
 4324 11c6 50       		.byte	0x50
 4325 11c7 00       		.byte	0
 4326 11c8 1C       		.uleb128 0x1c
 4327 11c9 12000000 		.4byte	.LVL138
 4328 11cd 31180000 		.4byte	0x1831
 4329 11d1 E1110000 		.4byte	0x11e1
 4330 11d5 1D       		.uleb128 0x1d
 4331 11d6 01       		.uleb128 0x1
 4332 11d7 50       		.byte	0x50
 4333 11d8 02       		.uleb128 0x2
 4334 11d9 75       		.byte	0x75
 4335 11da 00       		.sleb128 0
 4336 11db 1D       		.uleb128 0x1d
 4337 11dc 01       		.uleb128 0x1
 4338 11dd 52       		.byte	0x52
 4339 11de 01       		.uleb128 0x1
 4340 11df 30       		.byte	0x30
 4341 11e0 00       		.byte	0
 4342 11e1 1C       		.uleb128 0x1c
 4343 11e2 1A000000 		.4byte	.LVL141
 4344 11e6 310B0000 		.4byte	0xb31
 4345 11ea F5110000 		.4byte	0x11f5
 4346 11ee 1D       		.uleb128 0x1d
 4347 11ef 01       		.uleb128 0x1
 4348 11f0 50       		.byte	0x50
 4349 11f1 02       		.uleb128 0x2
 4350 11f2 75       		.byte	0x75
 4351 11f3 00       		.sleb128 0
 4352 11f4 00       		.byte	0
 4353 11f5 1C       		.uleb128 0x1c
 4354 11f6 26000000 		.4byte	.LVL144
 4355 11fa E7100000 		.4byte	0x10e7
 4356 11fe 0B120000 		.4byte	0x120b
 4357 1202 1D       		.uleb128 0x1d
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 140


 4358 1203 01       		.uleb128 0x1
 4359 1204 50       		.byte	0x50
 4360 1205 04       		.uleb128 0x4
 4361 1206 75       		.byte	0x75
 4362 1207 00       		.sleb128 0
 4363 1208 31       		.byte	0x31
 4364 1209 24       		.byte	0x24
 4365 120a 00       		.byte	0
 4366 120b 20       		.uleb128 0x20
 4367 120c 30000000 		.4byte	.LVL146
 4368 1210 7C0B0000 		.4byte	0xb7c
 4369 1214 1D       		.uleb128 0x1d
 4370 1215 01       		.uleb128 0x1
 4371 1216 50       		.byte	0x50
 4372 1217 02       		.uleb128 0x2
 4373 1218 75       		.byte	0x75
 4374 1219 00       		.sleb128 0
 4375 121a 1D       		.uleb128 0x1d
 4376 121b 01       		.uleb128 0x1
 4377 121c 51       		.byte	0x51
 4378 121d 02       		.uleb128 0x2
 4379 121e 74       		.byte	0x74
 4380 121f 00       		.sleb128 0
 4381 1220 00       		.byte	0
 4382 1221 00       		.byte	0
 4383 1222 25       		.uleb128 0x25
 4384 1223 F6030000 		.4byte	.LASF207
 4385 1227 01       		.byte	0x1
 4386 1228 F406     		.2byte	0x6f4
 4387 122a BA000000 		.4byte	0xba
 4388 122e 00000000 		.4byte	.LFB19
 4389 1232 60010000 		.4byte	.LFE19-.LFB19
 4390 1236 01       		.uleb128 0x1
 4391 1237 9C       		.byte	0x9c
 4392 1238 98130000 		.4byte	0x1398
 4393 123c 17       		.uleb128 0x17
 4394 123d B00F0000 		.4byte	.LASF165
 4395 1241 01       		.byte	0x1
 4396 1242 F406     		.2byte	0x6f4
 4397 1244 99000000 		.4byte	0x99
 4398 1248 5F070000 		.4byte	.LLST51
 4399 124c 18       		.uleb128 0x18
 4400 124d E5040000 		.4byte	.LASF208
 4401 1251 01       		.byte	0x1
 4402 1252 F606     		.2byte	0x6f6
 4403 1254 BA000000 		.4byte	0xba
 4404 1258 8B070000 		.4byte	.LLST52
 4405 125c 18       		.uleb128 0x18
 4406 125d 64090000 		.4byte	.LASF209
 4407 1261 01       		.byte	0x1
 4408 1262 F806     		.2byte	0x6f8
 4409 1264 99000000 		.4byte	0x99
 4410 1268 B5070000 		.4byte	.LLST53
 4411 126c 18       		.uleb128 0x18
 4412 126d 84010000 		.4byte	.LASF210
 4413 1271 01       		.byte	0x1
 4414 1272 F906     		.2byte	0x6f9
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 141


 4415 1274 99000000 		.4byte	0x99
 4416 1278 D4070000 		.4byte	.LLST54
 4417 127c 18       		.uleb128 0x18
 4418 127d A30D0000 		.4byte	.LASF211
 4419 1281 01       		.byte	0x1
 4420 1282 FA06     		.2byte	0x6fa
 4421 1284 99000000 		.4byte	0x99
 4422 1288 F2070000 		.4byte	.LLST55
 4423 128c 18       		.uleb128 0x18
 4424 128d 800B0000 		.4byte	.LASF212
 4425 1291 01       		.byte	0x1
 4426 1292 FB06     		.2byte	0x6fb
 4427 1294 99000000 		.4byte	0x99
 4428 1298 42080000 		.4byte	.LLST56
 4429 129c 22       		.uleb128 0x22
 4430 129d ED050000 		.4byte	.LASF213
 4431 12a1 01       		.byte	0x1
 4432 12a2 FD06     		.2byte	0x6fd
 4433 12a4 9A010000 		.4byte	0x19a
 4434 12a8 02       		.uleb128 0x2
 4435 12a9 91       		.byte	0x91
 4436 12aa 4C       		.sleb128 -52
 4437 12ab 18       		.uleb128 0x18
 4438 12ac 0F0F0000 		.4byte	.LASF214
 4439 12b0 01       		.byte	0x1
 4440 12b1 FF06     		.2byte	0x6ff
 4441 12b3 99000000 		.4byte	0x99
 4442 12b7 71080000 		.4byte	.LLST57
 4443 12bb 18       		.uleb128 0x18
 4444 12bc 78000000 		.4byte	.LASF215
 4445 12c0 01       		.byte	0x1
 4446 12c1 0007     		.2byte	0x700
 4447 12c3 99000000 		.4byte	0x99
 4448 12c7 A6080000 		.4byte	.LLST58
 4449 12cb 18       		.uleb128 0x18
 4450 12cc 270D0000 		.4byte	.LASF216
 4451 12d0 01       		.byte	0x1
 4452 12d1 0107     		.2byte	0x701
 4453 12d3 99000000 		.4byte	0x99
 4454 12d7 D1080000 		.4byte	.LLST59
 4455 12db 18       		.uleb128 0x18
 4456 12dc F1010000 		.4byte	.LASF217
 4457 12e0 01       		.byte	0x1
 4458 12e1 0807     		.2byte	0x708
 4459 12e3 98130000 		.4byte	0x1398
 4460 12e7 06090000 		.4byte	.LLST60
 4461 12eb 18       		.uleb128 0x18
 4462 12ec A3010000 		.4byte	.LASF218
 4463 12f0 01       		.byte	0x1
 4464 12f1 0907     		.2byte	0x709
 4465 12f3 E1100000 		.4byte	0x10e1
 4466 12f7 19090000 		.4byte	.LLST61
 4467 12fb 18       		.uleb128 0x18
 4468 12fc B9060000 		.4byte	.LASF219
 4469 1300 01       		.byte	0x1
 4470 1301 0A07     		.2byte	0x70a
 4471 1303 760A0000 		.4byte	0xa76
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 142


 4472 1307 2C090000 		.4byte	.LLST62
 4473 130b 1C       		.uleb128 0x1c
 4474 130c 84000000 		.4byte	.LVL169
 4475 1310 25180000 		.4byte	0x1825
 4476 1314 25130000 		.4byte	0x1325
 4477 1318 1D       		.uleb128 0x1d
 4478 1319 01       		.uleb128 0x1
 4479 131a 50       		.byte	0x50
 4480 131b 02       		.uleb128 0x2
 4481 131c 75       		.byte	0x75
 4482 131d 00       		.sleb128 0
 4483 131e 1D       		.uleb128 0x1d
 4484 131f 01       		.uleb128 0x1
 4485 1320 51       		.byte	0x51
 4486 1321 02       		.uleb128 0x2
 4487 1322 08       		.byte	0x8
 4488 1323 55       		.byte	0x55
 4489 1324 00       		.byte	0
 4490 1325 1C       		.uleb128 0x1c
 4491 1326 DE000000 		.4byte	.LVL181
 4492 132a 3D180000 		.4byte	0x183d
 4493 132e 39130000 		.4byte	0x1339
 4494 1332 1D       		.uleb128 0x1d
 4495 1333 01       		.uleb128 0x1
 4496 1334 50       		.byte	0x50
 4497 1335 02       		.uleb128 0x2
 4498 1336 77       		.byte	0x77
 4499 1337 00       		.sleb128 0
 4500 1338 00       		.byte	0
 4501 1339 1C       		.uleb128 0x1c
 4502 133a 00010000 		.4byte	.LVL186
 4503 133e 25180000 		.4byte	0x1825
 4504 1342 53130000 		.4byte	0x1353
 4505 1346 1D       		.uleb128 0x1d
 4506 1347 01       		.uleb128 0x1
 4507 1348 50       		.byte	0x50
 4508 1349 02       		.uleb128 0x2
 4509 134a 75       		.byte	0x75
 4510 134b 00       		.sleb128 0
 4511 134c 1D       		.uleb128 0x1d
 4512 134d 01       		.uleb128 0x1
 4513 134e 51       		.byte	0x51
 4514 134f 02       		.uleb128 0x2
 4515 1350 08       		.byte	0x8
 4516 1351 55       		.byte	0x55
 4517 1352 00       		.byte	0
 4518 1353 1C       		.uleb128 0x1c
 4519 1354 1A010000 		.4byte	.LVL187
 4520 1358 48180000 		.4byte	0x1848
 4521 135c 67130000 		.4byte	0x1367
 4522 1360 1D       		.uleb128 0x1d
 4523 1361 01       		.uleb128 0x1
 4524 1362 50       		.byte	0x50
 4525 1363 02       		.uleb128 0x2
 4526 1364 77       		.byte	0x77
 4527 1365 00       		.sleb128 0
 4528 1366 00       		.byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 143


 4529 1367 1C       		.uleb128 0x1c
 4530 1368 24010000 		.4byte	.LVL188
 4531 136c 3D110000 		.4byte	0x113d
 4532 1370 81130000 		.4byte	0x1381
 4533 1374 1D       		.uleb128 0x1d
 4534 1375 01       		.uleb128 0x1
 4535 1376 50       		.byte	0x50
 4536 1377 02       		.uleb128 0x2
 4537 1378 75       		.byte	0x75
 4538 1379 00       		.sleb128 0
 4539 137a 1D       		.uleb128 0x1d
 4540 137b 01       		.uleb128 0x1
 4541 137c 51       		.byte	0x51
 4542 137d 02       		.uleb128 0x2
 4543 137e 74       		.byte	0x74
 4544 137f 00       		.sleb128 0
 4545 1380 00       		.byte	0
 4546 1381 20       		.uleb128 0x20
 4547 1382 2C010000 		.4byte	.LVL189
 4548 1386 25180000 		.4byte	0x1825
 4549 138a 1D       		.uleb128 0x1d
 4550 138b 01       		.uleb128 0x1
 4551 138c 50       		.byte	0x50
 4552 138d 02       		.uleb128 0x2
 4553 138e 75       		.byte	0x75
 4554 138f 00       		.sleb128 0
 4555 1390 1D       		.uleb128 0x1d
 4556 1391 01       		.uleb128 0x1
 4557 1392 51       		.byte	0x51
 4558 1393 02       		.uleb128 0x2
 4559 1394 08       		.byte	0x8
 4560 1395 55       		.byte	0x55
 4561 1396 00       		.byte	0
 4562 1397 00       		.byte	0
 4563 1398 07       		.uleb128 0x7
 4564 1399 04       		.byte	0x4
 4565 139a 9E130000 		.4byte	0x139e
 4566 139e 21       		.uleb128 0x21
 4567 139f 880A0000 		.4byte	0xa88
 4568 13a3 1A       		.uleb128 0x1a
 4569 13a4 C6060000 		.4byte	.LASF220
 4570 13a8 01       		.byte	0x1
 4571 13a9 FF07     		.2byte	0x7ff
 4572 13ab BA000000 		.4byte	0xba
 4573 13af 00000000 		.4byte	.LFB20
 4574 13b3 1A000000 		.4byte	.LFE20-.LFB20
 4575 13b7 01       		.uleb128 0x1
 4576 13b8 9C       		.byte	0x9c
 4577 13b9 EE130000 		.4byte	0x13ee
 4578 13bd 18       		.uleb128 0x18
 4579 13be E5040000 		.4byte	.LASF208
 4580 13c2 01       		.byte	0x1
 4581 13c3 0108     		.2byte	0x801
 4582 13c5 BA000000 		.4byte	0xba
 4583 13c9 3F090000 		.4byte	.LLST63
 4584 13cd 18       		.uleb128 0x18
 4585 13ce 5A090000 		.4byte	.LASF171
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 144


 4586 13d2 01       		.byte	0x1
 4587 13d3 0208     		.2byte	0x802
 4588 13d5 99000000 		.4byte	0x99
 4589 13d9 69090000 		.4byte	.LLST64
 4590 13dd 20       		.uleb128 0x20
 4591 13de 0E000000 		.4byte	.LVL195
 4592 13e2 22120000 		.4byte	0x1222
 4593 13e6 1D       		.uleb128 0x1d
 4594 13e7 01       		.uleb128 0x1
 4595 13e8 50       		.byte	0x50
 4596 13e9 02       		.uleb128 0x2
 4597 13ea 74       		.byte	0x74
 4598 13eb 00       		.sleb128 0
 4599 13ec 00       		.byte	0
 4600 13ed 00       		.byte	0
 4601 13ee 1E       		.uleb128 0x1e
 4602 13ef D70F0000 		.4byte	.LASF221
 4603 13f3 01       		.byte	0x1
 4604 13f4 6409     		.2byte	0x964
 4605 13f6 00000000 		.4byte	.LFB21
 4606 13fa 20000000 		.4byte	.LFE21-.LFB21
 4607 13fe 01       		.uleb128 0x1
 4608 13ff 9C       		.byte	0x9c
 4609 1400 35140000 		.4byte	0x1435
 4610 1404 18       		.uleb128 0x18
 4611 1405 5A090000 		.4byte	.LASF171
 4612 1409 01       		.byte	0x1
 4613 140a 6609     		.2byte	0x966
 4614 140c 99000000 		.4byte	0x99
 4615 1410 88090000 		.4byte	.LLST65
 4616 1414 18       		.uleb128 0x18
 4617 1415 EC020000 		.4byte	.LASF203
 4618 1419 01       		.byte	0x1
 4619 141a 6709     		.2byte	0x967
 4620 141c E1100000 		.4byte	0x10e1
 4621 1420 A7090000 		.4byte	.LLST66
 4622 1424 20       		.uleb128 0x20
 4623 1425 14000000 		.4byte	.LVL203
 4624 1429 3D110000 		.4byte	0x113d
 4625 142d 1D       		.uleb128 0x1d
 4626 142e 01       		.uleb128 0x1
 4627 142f 50       		.byte	0x50
 4628 1430 02       		.uleb128 0x2
 4629 1431 74       		.byte	0x74
 4630 1432 00       		.sleb128 0
 4631 1433 00       		.byte	0
 4632 1434 00       		.byte	0
 4633 1435 1E       		.uleb128 0x1e
 4634 1436 27060000 		.4byte	.LASF222
 4635 143a 01       		.byte	0x1
 4636 143b 7A0B     		.2byte	0xb7a
 4637 143d 00000000 		.4byte	.LFB27
 4638 1441 D4000000 		.4byte	.LFE27-.LFB27
 4639 1445 01       		.uleb128 0x1
 4640 1446 9C       		.byte	0x9c
 4641 1447 2E150000 		.4byte	0x152e
 4642 144b 17       		.uleb128 0x17
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 145


 4643 144c 6A050000 		.4byte	.LASF223
 4644 1450 01       		.byte	0x1
 4645 1451 7A0B     		.2byte	0xb7a
 4646 1453 99000000 		.4byte	0x99
 4647 1457 BA090000 		.4byte	.LLST67
 4648 145b 18       		.uleb128 0x18
 4649 145c 90020000 		.4byte	.LASF224
 4650 1460 01       		.byte	0x1
 4651 1461 7C0B     		.2byte	0xb7c
 4652 1463 99000000 		.4byte	0x99
 4653 1467 E7090000 		.4byte	.LLST68
 4654 146b 18       		.uleb128 0x18
 4655 146c EB010000 		.4byte	.LASF225
 4656 1470 01       		.byte	0x1
 4657 1471 7D0B     		.2byte	0xb7d
 4658 1473 99000000 		.4byte	0x99
 4659 1477 060A0000 		.4byte	.LLST69
 4660 147b 18       		.uleb128 0x18
 4661 147c CA040000 		.4byte	.LASF226
 4662 1480 01       		.byte	0x1
 4663 1481 7E0B     		.2byte	0xb7e
 4664 1483 99000000 		.4byte	0x99
 4665 1487 240A0000 		.4byte	.LLST70
 4666 148b 18       		.uleb128 0x18
 4667 148c 030F0000 		.4byte	.LASF196
 4668 1490 01       		.byte	0x1
 4669 1491 7F0B     		.2byte	0xb7f
 4670 1493 99000000 		.4byte	0x99
 4671 1497 420A0000 		.4byte	.LLST71
 4672 149b 18       		.uleb128 0x18
 4673 149c D2010000 		.4byte	.LASF179
 4674 14a0 01       		.byte	0x1
 4675 14a1 800B     		.2byte	0xb80
 4676 14a3 81000000 		.4byte	0x81
 4677 14a7 AD0A0000 		.4byte	.LLST72
 4678 14ab 1B       		.uleb128 0x1b
 4679 14ac 38000000 		.4byte	.LVL211
 4680 14b0 F8170000 		.4byte	0x17f8
 4681 14b4 1B       		.uleb128 0x1b
 4682 14b5 46000000 		.4byte	.LVL215
 4683 14b9 03180000 		.4byte	0x1803
 4684 14bd 1B       		.uleb128 0x1b
 4685 14be 4A000000 		.4byte	.LVL216
 4686 14c2 F8170000 		.4byte	0x17f8
 4687 14c6 1B       		.uleb128 0x1b
 4688 14c7 56000000 		.4byte	.LVL219
 4689 14cb 03180000 		.4byte	0x1803
 4690 14cf 1B       		.uleb128 0x1b
 4691 14d0 5A000000 		.4byte	.LVL220
 4692 14d4 F8170000 		.4byte	0x17f8
 4693 14d8 1B       		.uleb128 0x1b
 4694 14d9 6C000000 		.4byte	.LVL225
 4695 14dd 03180000 		.4byte	0x1803
 4696 14e1 1C       		.uleb128 0x1c
 4697 14e2 74000000 		.4byte	.LVL226
 4698 14e6 53180000 		.4byte	0x1853
 4699 14ea F7140000 		.4byte	0x14f7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 146


 4700 14ee 1D       		.uleb128 0x1d
 4701 14ef 01       		.uleb128 0x1
 4702 14f0 50       		.byte	0x50
 4703 14f1 04       		.uleb128 0x4
 4704 14f2 7D       		.byte	0x7d
 4705 14f3 04       		.sleb128 4
 4706 14f4 94       		.byte	0x94
 4707 14f5 02       		.byte	0x2
 4708 14f6 00       		.byte	0
 4709 14f7 1B       		.uleb128 0x1b
 4710 14f8 78000000 		.4byte	.LVL227
 4711 14fc F8170000 		.4byte	0x17f8
 4712 1500 1B       		.uleb128 0x1b
 4713 1501 86000000 		.4byte	.LVL231
 4714 1505 03180000 		.4byte	0x1803
 4715 1509 1B       		.uleb128 0x1b
 4716 150a 8A000000 		.4byte	.LVL232
 4717 150e F8170000 		.4byte	0x17f8
 4718 1512 1B       		.uleb128 0x1b
 4719 1513 9A000000 		.4byte	.LVL236
 4720 1517 03180000 		.4byte	0x1803
 4721 151b 1B       		.uleb128 0x1b
 4722 151c 9E000000 		.4byte	.LVL237
 4723 1520 F8170000 		.4byte	0x17f8
 4724 1524 1B       		.uleb128 0x1b
 4725 1525 B0000000 		.4byte	.LVL241
 4726 1529 03180000 		.4byte	0x1803
 4727 152d 00       		.byte	0
 4728 152e 1A       		.uleb128 0x1a
 4729 152f 6D070000 		.4byte	.LASF227
 4730 1533 01       		.byte	0x1
 4731 1534 840C     		.2byte	0xc84
 4732 1536 76000000 		.4byte	0x76
 4733 153a 00000000 		.4byte	.LFB28
 4734 153e 20000000 		.4byte	.LFE28-.LFB28
 4735 1542 01       		.uleb128 0x1
 4736 1543 9C       		.byte	0x9c
 4737 1544 88150000 		.4byte	0x1588
 4738 1548 17       		.uleb128 0x17
 4739 1549 40050000 		.4byte	.LASF228
 4740 154d 01       		.byte	0x1
 4741 154e 840C     		.2byte	0xc84
 4742 1550 FA0A0000 		.4byte	0xafa
 4743 1554 F70A0000 		.4byte	.LLST73
 4744 1558 17       		.uleb128 0x17
 4745 1559 DE0D0000 		.4byte	.LASF176
 4746 155d 01       		.byte	0x1
 4747 155e 840C     		.2byte	0xc84
 4748 1560 76000000 		.4byte	0x76
 4749 1564 180B0000 		.4byte	.LLST74
 4750 1568 18       		.uleb128 0x18
 4751 1569 880C0000 		.4byte	.LASF202
 4752 156d 01       		.byte	0x1
 4753 156e 860C     		.2byte	0xc86
 4754 1570 76000000 		.4byte	0x76
 4755 1574 390B0000 		.4byte	.LLST75
 4756 1578 20       		.uleb128 0x20
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 147


 4757 1579 16000000 		.4byte	.LVL248
 4758 157d 5E180000 		.4byte	0x185e
 4759 1581 1D       		.uleb128 0x1d
 4760 1582 01       		.uleb128 0x1
 4761 1583 50       		.byte	0x50
 4762 1584 01       		.uleb128 0x1
 4763 1585 30       		.byte	0x30
 4764 1586 00       		.byte	0
 4765 1587 00       		.byte	0
 4766 1588 1E       		.uleb128 0x1e
 4767 1589 32080000 		.4byte	.LASF229
 4768 158d 01       		.byte	0x1
 4769 158e D90C     		.2byte	0xcd9
 4770 1590 00000000 		.4byte	.LFB29
 4771 1594 1C000000 		.4byte	.LFE29-.LFB29
 4772 1598 01       		.uleb128 0x1
 4773 1599 9C       		.byte	0x9c
 4774 159a F1150000 		.4byte	0x15f1
 4775 159e 17       		.uleb128 0x17
 4776 159f BA020000 		.4byte	.LASF230
 4777 15a3 01       		.byte	0x1
 4778 15a4 D90C     		.2byte	0xcd9
 4779 15a6 CF090000 		.4byte	0x9cf
 4780 15aa 640B0000 		.4byte	.LLST76
 4781 15ae 17       		.uleb128 0x17
 4782 15af 06090000 		.4byte	.LASF129
 4783 15b3 01       		.byte	0x1
 4784 15b4 D90C     		.2byte	0xcd9
 4785 15b6 99000000 		.4byte	0x99
 4786 15ba 900B0000 		.4byte	.LLST77
 4787 15be 17       		.uleb128 0x17
 4788 15bf D0040000 		.4byte	.LASF231
 4789 15c3 01       		.byte	0x1
 4790 15c4 D90C     		.2byte	0xcd9
 4791 15c6 99000000 		.4byte	0x99
 4792 15ca BC0B0000 		.4byte	.LLST78
 4793 15ce 18       		.uleb128 0x18
 4794 15cf D2010000 		.4byte	.LASF179
 4795 15d3 01       		.byte	0x1
 4796 15d4 DB0C     		.2byte	0xcdb
 4797 15d6 81000000 		.4byte	0x81
 4798 15da E80B0000 		.4byte	.LLST79
 4799 15de 1B       		.uleb128 0x1b
 4800 15df 0C000000 		.4byte	.LVL251
 4801 15e3 F8170000 		.4byte	0x17f8
 4802 15e7 1B       		.uleb128 0x1b
 4803 15e8 1A000000 		.4byte	.LVL253
 4804 15ec 03180000 		.4byte	0x1803
 4805 15f0 00       		.byte	0
 4806 15f1 24       		.uleb128 0x24
 4807 15f2 89000000 		.4byte	.LASF233
 4808 15f6 01       		.byte	0x1
 4809 15f7 B903     		.2byte	0x3b9
 4810 15f9 00000000 		.4byte	.LFB9
 4811 15fd 28000000 		.4byte	.LFE9-.LFB9
 4812 1601 01       		.uleb128 0x1
 4813 1602 9C       		.byte	0x9c
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 148


 4814 1603 44160000 		.4byte	0x1644
 4815 1607 18       		.uleb128 0x18
 4816 1608 030F0000 		.4byte	.LASF196
 4817 160c 01       		.byte	0x1
 4818 160d BE03     		.2byte	0x3be
 4819 160f 99000000 		.4byte	0x99
 4820 1613 FB0B0000 		.4byte	.LLST80
 4821 1617 1C       		.uleb128 0x1c
 4822 1618 18000000 		.4byte	.LVL258
 4823 161c 88150000 		.4byte	0x1588
 4824 1620 3A160000 		.4byte	0x163a
 4825 1624 1D       		.uleb128 0x1d
 4826 1625 01       		.uleb128 0x1
 4827 1626 50       		.byte	0x50
 4828 1627 05       		.uleb128 0x5
 4829 1628 0C       		.byte	0xc
 4830 1629 00040240 		.4byte	0x40020400
 4831 162d 1D       		.uleb128 0x1d
 4832 162e 01       		.uleb128 0x1
 4833 162f 51       		.byte	0x51
 4834 1630 03       		.uleb128 0x3
 4835 1631 0A       		.byte	0xa
 4836 1632 000F     		.2byte	0xf00
 4837 1634 1D       		.uleb128 0x1d
 4838 1635 01       		.uleb128 0x1
 4839 1636 52       		.byte	0x52
 4840 1637 01       		.uleb128 0x1
 4841 1638 30       		.byte	0x30
 4842 1639 00       		.byte	0
 4843 163a 1B       		.uleb128 0x1b
 4844 163b 1C000000 		.4byte	.LVL259
 4845 163f 69180000 		.4byte	0x1869
 4846 1643 00       		.byte	0
 4847 1644 1E       		.uleb128 0x1e
 4848 1645 170E0000 		.4byte	.LASF234
 4849 1649 01       		.byte	0x1
 4850 164a 2B04     		.2byte	0x42b
 4851 164c 00000000 		.4byte	.LFB10
 4852 1650 3C000000 		.4byte	.LFE10-.LFB10
 4853 1654 01       		.uleb128 0x1
 4854 1655 9C       		.byte	0x9c
 4855 1656 7D160000 		.4byte	0x167d
 4856 165a 17       		.uleb128 0x17
 4857 165b 40050000 		.4byte	.LASF228
 4858 165f 01       		.byte	0x1
 4859 1660 2B04     		.2byte	0x42b
 4860 1662 38020000 		.4byte	0x238
 4861 1666 0E0C0000 		.4byte	.LLST81
 4862 166a 1B       		.uleb128 0x1b
 4863 166b 14000000 		.4byte	.LVL261
 4864 166f F1150000 		.4byte	0x15f1
 4865 1673 1B       		.uleb128 0x1b
 4866 1674 1C000000 		.4byte	.LVL262
 4867 1678 75180000 		.4byte	0x1875
 4868 167c 00       		.byte	0
 4869 167d 1A       		.uleb128 0x1a
 4870 167e DB090000 		.4byte	.LASF235
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 149


 4871 1682 01       		.byte	0x1
 4872 1683 C302     		.2byte	0x2c3
 4873 1685 BA000000 		.4byte	0xba
 4874 1689 00000000 		.4byte	.LFB7
 4875 168d 2C000000 		.4byte	.LFE7-.LFB7
 4876 1691 01       		.uleb128 0x1
 4877 1692 9C       		.byte	0x9c
 4878 1693 E3160000 		.4byte	0x16e3
 4879 1697 1F       		.uleb128 0x1f
 4880 1698 B20E0000 		.4byte	.LASF236
 4881 169c 01       		.byte	0x1
 4882 169d C502     		.2byte	0x2c5
 4883 169f BA000000 		.4byte	0xba
 4884 16a3 00       		.byte	0
 4885 16a4 1B       		.uleb128 0x1b
 4886 16a5 06000000 		.4byte	.LVL264
 4887 16a9 EE130000 		.4byte	0x13ee
 4888 16ad 1C       		.uleb128 0x1c
 4889 16ae 0C000000 		.4byte	.LVL265
 4890 16b2 290E0000 		.4byte	0xe29
 4891 16b6 C0160000 		.4byte	0x16c0
 4892 16ba 1D       		.uleb128 0x1d
 4893 16bb 01       		.uleb128 0x1
 4894 16bc 50       		.byte	0x50
 4895 16bd 01       		.uleb128 0x1
 4896 16be 30       		.byte	0x30
 4897 16bf 00       		.byte	0
 4898 16c0 1C       		.uleb128 0x1c
 4899 16c1 1A000000 		.4byte	.LVL266
 4900 16c5 44160000 		.4byte	0x1644
 4901 16c9 D3160000 		.4byte	0x16d3
 4902 16cd 1D       		.uleb128 0x1d
 4903 16ce 01       		.uleb128 0x1
 4904 16cf 50       		.byte	0x50
 4905 16d0 01       		.uleb128 0x1
 4906 16d1 30       		.byte	0x30
 4907 16d2 00       		.byte	0
 4908 16d3 20       		.uleb128 0x20
 4909 16d4 20000000 		.4byte	.LVL267
 4910 16d8 44160000 		.4byte	0x1644
 4911 16dc 1D       		.uleb128 0x1d
 4912 16dd 01       		.uleb128 0x1
 4913 16de 50       		.byte	0x50
 4914 16df 01       		.uleb128 0x1
 4915 16e0 31       		.byte	0x31
 4916 16e1 00       		.byte	0
 4917 16e2 00       		.byte	0
 4918 16e3 26       		.uleb128 0x26
 4919 16e4 5A080000 		.4byte	.LASF237
 4920 16e8 07       		.byte	0x7
 4921 16e9 A305     		.2byte	0x5a3
 4922 16eb 44090000 		.4byte	0x944
 4923 16ef 26       		.uleb128 0x26
 4924 16f0 900B0000 		.4byte	.LASF238
 4925 16f4 07       		.byte	0x7
 4926 16f5 A405     		.2byte	0x5a4
 4927 16f7 FB160000 		.4byte	0x16fb
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 150


 4928 16fb 21       		.uleb128 0x21
 4929 16fc BC0A0000 		.4byte	0xabc
 4930 1700 0D       		.uleb128 0xd
 4931 1701 240E0000 		.4byte	0xe24
 4932 1705 10170000 		.4byte	0x1710
 4933 1709 0E       		.uleb128 0xe
 4934 170a F8020000 		.4byte	0x2f8
 4935 170e 21       		.byte	0x21
 4936 170f 00       		.byte	0
 4937 1710 26       		.uleb128 0x26
 4938 1711 BD0E0000 		.4byte	.LASF239
 4939 1715 07       		.byte	0x7
 4940 1716 A505     		.2byte	0x5a5
 4941 1718 1C170000 		.4byte	0x171c
 4942 171c 21       		.uleb128 0x21
 4943 171d 00170000 		.4byte	0x1700
 4944 1721 27       		.uleb128 0x27
 4945 1722 D7000000 		.4byte	.LASF240
 4946 1726 01       		.byte	0x1
 4947 1727 BC       		.byte	0xbc
 4948 1728 C6000000 		.4byte	0xc6
 4949 172c 05       		.uleb128 0x5
 4950 172d 03       		.byte	0x3
 4951 172e 00000000 		.4byte	CapSense_widgetIndex
 4952 1732 27       		.uleb128 0x27
 4953 1733 50040000 		.4byte	.LASF241
 4954 1737 01       		.byte	0x1
 4955 1738 BD       		.byte	0xbd
 4956 1739 C6000000 		.4byte	0xc6
 4957 173d 05       		.uleb128 0x5
 4958 173e 03       		.byte	0x3
 4959 173f 00000000 		.4byte	CapSense_sensorIndex
 4960 1743 27       		.uleb128 0x27
 4961 1744 B90F0000 		.4byte	.LASF242
 4962 1748 01       		.byte	0x1
 4963 1749 BE       		.byte	0xbe
 4964 174a 81000000 		.4byte	0x81
 4965 174e 05       		.uleb128 0x5
 4966 174f 03       		.byte	0x3
 4967 1750 00000000 		.4byte	CapSense_requestScanAllWidget
 4968 1754 27       		.uleb128 0x27
 4969 1755 4B0E0000 		.4byte	.LASF243
 4970 1759 01       		.byte	0x1
 4971 175a C1       		.byte	0xc1
 4972 175b 760A0000 		.4byte	0xa76
 4973 175f 05       		.uleb128 0x5
 4974 1760 03       		.byte	0x3
 4975 1761 00000000 		.4byte	CapSense_curRamSnsPtr
 4976 1765 27       		.uleb128 0x27
 4977 1766 410C0000 		.4byte	.LASF244
 4978 176a 01       		.byte	0x1
 4979 176b AF       		.byte	0xaf
 4980 176c 38020000 		.4byte	0x238
 4981 1770 05       		.uleb128 0x5
 4982 1771 03       		.byte	0x3
 4983 1772 00000000 		.4byte	CapSense_currentSenseMethod
 4984 1776 27       		.uleb128 0x27
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 151


 4985 1777 6D0E0000 		.4byte	.LASF245
 4986 177b 01       		.byte	0x1
 4987 177c B8       		.byte	0xb8
 4988 177d 87170000 		.4byte	0x1787
 4989 1781 05       		.uleb128 0x5
 4990 1782 03       		.byte	0x3
 4991 1783 00000000 		.4byte	CapSense_scanFreqIndex
 4992 1787 21       		.uleb128 0x21
 4993 1788 81000000 		.4byte	0x81
 4994 178c 27       		.uleb128 0x27
 4995 178d F1080000 		.4byte	.LASF246
 4996 1791 01       		.byte	0x1
 4997 1792 D0       		.byte	0xd0
 4998 1793 1E0E0000 		.4byte	0xe1e
 4999 1797 05       		.uleb128 0x5
 5000 1798 03       		.byte	0x3
 5001 1799 00000000 		.4byte	CapSense_curSnsIOPtr
 5002 179d 0D       		.uleb128 0xd
 5003 179e AD170000 		.4byte	0x17ad
 5004 17a2 AD170000 		.4byte	0x17ad
 5005 17a6 0E       		.uleb128 0xe
 5006 17a7 F8020000 		.4byte	0x2f8
 5007 17ab 05       		.byte	0x5
 5008 17ac 00       		.byte	0
 5009 17ad 21       		.uleb128 0x21
 5010 17ae 260B0000 		.4byte	0xb26
 5011 17b2 27       		.uleb128 0x27
 5012 17b3 FB0F0000 		.4byte	.LASF247
 5013 17b7 01       		.byte	0x1
 5014 17b8 D2       		.byte	0xd2
 5015 17b9 C3170000 		.4byte	0x17c3
 5016 17bd 05       		.uleb128 0x5
 5017 17be 03       		.byte	0x3
 5018 17bf 00000000 		.4byte	CapSense_idacGainTable
 5019 17c3 21       		.uleb128 0x21
 5020 17c4 9D170000 		.4byte	0x179d
 5021 17c8 28       		.uleb128 0x28
 5022 17c9 10040000 		.4byte	.LASF248
 5023 17cd 10040000 		.4byte	.LASF248
 5024 17d1 09       		.byte	0x9
 5025 17d2 8801     		.2byte	0x188
 5026 17d4 28       		.uleb128 0x28
 5027 17d5 B00D0000 		.4byte	.LASF249
 5028 17d9 B00D0000 		.4byte	.LASF249
 5029 17dd 09       		.byte	0x9
 5030 17de 8A01     		.2byte	0x18a
 5031 17e0 28       		.uleb128 0x28
 5032 17e1 AF040000 		.4byte	.LASF250
 5033 17e5 AF040000 		.4byte	.LASF250
 5034 17e9 09       		.byte	0x9
 5035 17ea 8901     		.2byte	0x189
 5036 17ec 28       		.uleb128 0x28
 5037 17ed AB0B0000 		.4byte	.LASF251
 5038 17f1 AB0B0000 		.4byte	.LASF251
 5039 17f5 09       		.byte	0x9
 5040 17f6 8B01     		.2byte	0x18b
 5041 17f8 29       		.uleb128 0x29
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 152


 5042 17f9 340E0000 		.4byte	.LASF252
 5043 17fd 340E0000 		.4byte	.LASF252
 5044 1801 0A       		.byte	0xa
 5045 1802 F8       		.byte	0xf8
 5046 1803 29       		.uleb128 0x29
 5047 1804 09060000 		.4byte	.LASF253
 5048 1808 09060000 		.4byte	.LASF253
 5049 180c 0A       		.byte	0xa
 5050 180d F9       		.byte	0xf9
 5051 180e 28       		.uleb128 0x28
 5052 180f 0E0C0000 		.4byte	.LASF254
 5053 1813 0E0C0000 		.4byte	.LASF254
 5054 1817 09       		.byte	0x9
 5055 1818 9101     		.2byte	0x191
 5056 181a 29       		.uleb128 0x29
 5057 181b 9C0C0000 		.4byte	.LASF255
 5058 181f 9C0C0000 		.4byte	.LASF255
 5059 1823 0B       		.byte	0xb
 5060 1824 18       		.byte	0x18
 5061 1825 28       		.uleb128 0x28
 5062 1826 A3000000 		.4byte	.LASF256
 5063 182a A3000000 		.4byte	.LASF256
 5064 182e 09       		.byte	0x9
 5065 182f 8E01     		.2byte	0x18e
 5066 1831 28       		.uleb128 0x28
 5067 1832 47060000 		.4byte	.LASF257
 5068 1836 47060000 		.4byte	.LASF257
 5069 183a 09       		.byte	0x9
 5070 183b AE01     		.2byte	0x1ae
 5071 183d 29       		.uleb128 0x29
 5072 183e CA0B0000 		.4byte	.LASF258
 5073 1842 CA0B0000 		.4byte	.LASF258
 5074 1846 06       		.byte	0x6
 5075 1847 B7       		.byte	0xb7
 5076 1848 29       		.uleb128 0x29
 5077 1849 09020000 		.4byte	.LASF259
 5078 184d 09020000 		.4byte	.LASF259
 5079 1851 06       		.byte	0x6
 5080 1852 B8       		.byte	0xb8
 5081 1853 29       		.uleb128 0x29
 5082 1854 44090000 		.4byte	.LASF260
 5083 1858 44090000 		.4byte	.LASF260
 5084 185c 0A       		.byte	0xa
 5085 185d ED       		.byte	0xed
 5086 185e 29       		.uleb128 0x29
 5087 185f B0010000 		.4byte	.LASF261
 5088 1863 B0010000 		.4byte	.LASF261
 5089 1867 0A       		.byte	0xa
 5090 1868 FA       		.byte	0xfa
 5091 1869 28       		.uleb128 0x28
 5092 186a 170A0000 		.4byte	.LASF262
 5093 186e 170A0000 		.4byte	.LASF262
 5094 1872 09       		.byte	0x9
 5095 1873 A501     		.2byte	0x1a5
 5096 1875 28       		.uleb128 0x28
 5097 1876 B5070000 		.4byte	.LASF263
 5098 187a B5070000 		.4byte	.LASF263
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 153


 5099 187e 09       		.byte	0x9
 5100 187f A101     		.2byte	0x1a1
 5101 1881 00       		.byte	0
 5102              		.section	.debug_abbrev,"",%progbits
 5103              	.Ldebug_abbrev0:
 5104 0000 01       		.uleb128 0x1
 5105 0001 11       		.uleb128 0x11
 5106 0002 01       		.byte	0x1
 5107 0003 25       		.uleb128 0x25
 5108 0004 0E       		.uleb128 0xe
 5109 0005 13       		.uleb128 0x13
 5110 0006 0B       		.uleb128 0xb
 5111 0007 03       		.uleb128 0x3
 5112 0008 0E       		.uleb128 0xe
 5113 0009 1B       		.uleb128 0x1b
 5114 000a 0E       		.uleb128 0xe
 5115 000b 55       		.uleb128 0x55
 5116 000c 17       		.uleb128 0x17
 5117 000d 11       		.uleb128 0x11
 5118 000e 01       		.uleb128 0x1
 5119 000f 10       		.uleb128 0x10
 5120 0010 17       		.uleb128 0x17
 5121 0011 00       		.byte	0
 5122 0012 00       		.byte	0
 5123 0013 02       		.uleb128 0x2
 5124 0014 24       		.uleb128 0x24
 5125 0015 00       		.byte	0
 5126 0016 0B       		.uleb128 0xb
 5127 0017 0B       		.uleb128 0xb
 5128 0018 3E       		.uleb128 0x3e
 5129 0019 0B       		.uleb128 0xb
 5130 001a 03       		.uleb128 0x3
 5131 001b 0E       		.uleb128 0xe
 5132 001c 00       		.byte	0
 5133 001d 00       		.byte	0
 5134 001e 03       		.uleb128 0x3
 5135 001f 16       		.uleb128 0x16
 5136 0020 00       		.byte	0
 5137 0021 03       		.uleb128 0x3
 5138 0022 0E       		.uleb128 0xe
 5139 0023 3A       		.uleb128 0x3a
 5140 0024 0B       		.uleb128 0xb
 5141 0025 3B       		.uleb128 0x3b
 5142 0026 0B       		.uleb128 0xb
 5143 0027 49       		.uleb128 0x49
 5144 0028 13       		.uleb128 0x13
 5145 0029 00       		.byte	0
 5146 002a 00       		.byte	0
 5147 002b 04       		.uleb128 0x4
 5148 002c 24       		.uleb128 0x24
 5149 002d 00       		.byte	0
 5150 002e 0B       		.uleb128 0xb
 5151 002f 0B       		.uleb128 0xb
 5152 0030 3E       		.uleb128 0x3e
 5153 0031 0B       		.uleb128 0xb
 5154 0032 03       		.uleb128 0x3
 5155 0033 08       		.uleb128 0x8
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 154


 5156 0034 00       		.byte	0
 5157 0035 00       		.byte	0
 5158 0036 05       		.uleb128 0x5
 5159 0037 16       		.uleb128 0x16
 5160 0038 00       		.byte	0
 5161 0039 03       		.uleb128 0x3
 5162 003a 0E       		.uleb128 0xe
 5163 003b 3A       		.uleb128 0x3a
 5164 003c 0B       		.uleb128 0xb
 5165 003d 3B       		.uleb128 0x3b
 5166 003e 05       		.uleb128 0x5
 5167 003f 49       		.uleb128 0x49
 5168 0040 13       		.uleb128 0x13
 5169 0041 00       		.byte	0
 5170 0042 00       		.byte	0
 5171 0043 06       		.uleb128 0x6
 5172 0044 35       		.uleb128 0x35
 5173 0045 00       		.byte	0
 5174 0046 49       		.uleb128 0x49
 5175 0047 13       		.uleb128 0x13
 5176 0048 00       		.byte	0
 5177 0049 00       		.byte	0
 5178 004a 07       		.uleb128 0x7
 5179 004b 0F       		.uleb128 0xf
 5180 004c 00       		.byte	0
 5181 004d 0B       		.uleb128 0xb
 5182 004e 0B       		.uleb128 0xb
 5183 004f 49       		.uleb128 0x49
 5184 0050 13       		.uleb128 0x13
 5185 0051 00       		.byte	0
 5186 0052 00       		.byte	0
 5187 0053 08       		.uleb128 0x8
 5188 0054 15       		.uleb128 0x15
 5189 0055 00       		.byte	0
 5190 0056 27       		.uleb128 0x27
 5191 0057 19       		.uleb128 0x19
 5192 0058 00       		.byte	0
 5193 0059 00       		.byte	0
 5194 005a 09       		.uleb128 0x9
 5195 005b 13       		.uleb128 0x13
 5196 005c 01       		.byte	0x1
 5197 005d 0B       		.uleb128 0xb
 5198 005e 0B       		.uleb128 0xb
 5199 005f 3A       		.uleb128 0x3a
 5200 0060 0B       		.uleb128 0xb
 5201 0061 3B       		.uleb128 0x3b
 5202 0062 0B       		.uleb128 0xb
 5203 0063 01       		.uleb128 0x1
 5204 0064 13       		.uleb128 0x13
 5205 0065 00       		.byte	0
 5206 0066 00       		.byte	0
 5207 0067 0A       		.uleb128 0xa
 5208 0068 0D       		.uleb128 0xd
 5209 0069 00       		.byte	0
 5210 006a 03       		.uleb128 0x3
 5211 006b 0E       		.uleb128 0xe
 5212 006c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 155


 5213 006d 0B       		.uleb128 0xb
 5214 006e 3B       		.uleb128 0x3b
 5215 006f 0B       		.uleb128 0xb
 5216 0070 49       		.uleb128 0x49
 5217 0071 13       		.uleb128 0x13
 5218 0072 38       		.uleb128 0x38
 5219 0073 0B       		.uleb128 0xb
 5220 0074 00       		.byte	0
 5221 0075 00       		.byte	0
 5222 0076 0B       		.uleb128 0xb
 5223 0077 04       		.uleb128 0x4
 5224 0078 01       		.byte	0x1
 5225 0079 0B       		.uleb128 0xb
 5226 007a 0B       		.uleb128 0xb
 5227 007b 49       		.uleb128 0x49
 5228 007c 13       		.uleb128 0x13
 5229 007d 3A       		.uleb128 0x3a
 5230 007e 0B       		.uleb128 0xb
 5231 007f 3B       		.uleb128 0x3b
 5232 0080 0B       		.uleb128 0xb
 5233 0081 01       		.uleb128 0x1
 5234 0082 13       		.uleb128 0x13
 5235 0083 00       		.byte	0
 5236 0084 00       		.byte	0
 5237 0085 0C       		.uleb128 0xc
 5238 0086 28       		.uleb128 0x28
 5239 0087 00       		.byte	0
 5240 0088 03       		.uleb128 0x3
 5241 0089 0E       		.uleb128 0xe
 5242 008a 1C       		.uleb128 0x1c
 5243 008b 0B       		.uleb128 0xb
 5244 008c 00       		.byte	0
 5245 008d 00       		.byte	0
 5246 008e 0D       		.uleb128 0xd
 5247 008f 01       		.uleb128 0x1
 5248 0090 01       		.byte	0x1
 5249 0091 49       		.uleb128 0x49
 5250 0092 13       		.uleb128 0x13
 5251 0093 01       		.uleb128 0x1
 5252 0094 13       		.uleb128 0x13
 5253 0095 00       		.byte	0
 5254 0096 00       		.byte	0
 5255 0097 0E       		.uleb128 0xe
 5256 0098 21       		.uleb128 0x21
 5257 0099 00       		.byte	0
 5258 009a 49       		.uleb128 0x49
 5259 009b 13       		.uleb128 0x13
 5260 009c 2F       		.uleb128 0x2f
 5261 009d 0B       		.uleb128 0xb
 5262 009e 00       		.byte	0
 5263 009f 00       		.byte	0
 5264 00a0 0F       		.uleb128 0xf
 5265 00a1 0D       		.uleb128 0xd
 5266 00a2 00       		.byte	0
 5267 00a3 03       		.uleb128 0x3
 5268 00a4 0E       		.uleb128 0xe
 5269 00a5 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 156


 5270 00a6 0B       		.uleb128 0xb
 5271 00a7 3B       		.uleb128 0x3b
 5272 00a8 05       		.uleb128 0x5
 5273 00a9 49       		.uleb128 0x49
 5274 00aa 13       		.uleb128 0x13
 5275 00ab 38       		.uleb128 0x38
 5276 00ac 0B       		.uleb128 0xb
 5277 00ad 00       		.byte	0
 5278 00ae 00       		.byte	0
 5279 00af 10       		.uleb128 0x10
 5280 00b0 13       		.uleb128 0x13
 5281 00b1 01       		.byte	0x1
 5282 00b2 0B       		.uleb128 0xb
 5283 00b3 05       		.uleb128 0x5
 5284 00b4 3A       		.uleb128 0x3a
 5285 00b5 0B       		.uleb128 0xb
 5286 00b6 3B       		.uleb128 0x3b
 5287 00b7 05       		.uleb128 0x5
 5288 00b8 01       		.uleb128 0x1
 5289 00b9 13       		.uleb128 0x13
 5290 00ba 00       		.byte	0
 5291 00bb 00       		.byte	0
 5292 00bc 11       		.uleb128 0x11
 5293 00bd 0D       		.uleb128 0xd
 5294 00be 00       		.byte	0
 5295 00bf 03       		.uleb128 0x3
 5296 00c0 0E       		.uleb128 0xe
 5297 00c1 3A       		.uleb128 0x3a
 5298 00c2 0B       		.uleb128 0xb
 5299 00c3 3B       		.uleb128 0x3b
 5300 00c4 05       		.uleb128 0x5
 5301 00c5 49       		.uleb128 0x49
 5302 00c6 13       		.uleb128 0x13
 5303 00c7 38       		.uleb128 0x38
 5304 00c8 05       		.uleb128 0x5
 5305 00c9 00       		.byte	0
 5306 00ca 00       		.byte	0
 5307 00cb 12       		.uleb128 0x12
 5308 00cc 13       		.uleb128 0x13
 5309 00cd 01       		.byte	0x1
 5310 00ce 0B       		.uleb128 0xb
 5311 00cf 0B       		.uleb128 0xb
 5312 00d0 3A       		.uleb128 0x3a
 5313 00d1 0B       		.uleb128 0xb
 5314 00d2 3B       		.uleb128 0x3b
 5315 00d3 05       		.uleb128 0x5
 5316 00d4 01       		.uleb128 0x1
 5317 00d5 13       		.uleb128 0x13
 5318 00d6 00       		.byte	0
 5319 00d7 00       		.byte	0
 5320 00d8 13       		.uleb128 0x13
 5321 00d9 0D       		.uleb128 0xd
 5322 00da 00       		.byte	0
 5323 00db 03       		.uleb128 0x3
 5324 00dc 08       		.uleb128 0x8
 5325 00dd 3A       		.uleb128 0x3a
 5326 00de 0B       		.uleb128 0xb
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 157


 5327 00df 3B       		.uleb128 0x3b
 5328 00e0 05       		.uleb128 0x5
 5329 00e1 49       		.uleb128 0x49
 5330 00e2 13       		.uleb128 0x13
 5331 00e3 38       		.uleb128 0x38
 5332 00e4 0B       		.uleb128 0xb
 5333 00e5 00       		.byte	0
 5334 00e6 00       		.byte	0
 5335 00e7 14       		.uleb128 0x14
 5336 00e8 26       		.uleb128 0x26
 5337 00e9 00       		.byte	0
 5338 00ea 00       		.byte	0
 5339 00eb 00       		.byte	0
 5340 00ec 15       		.uleb128 0x15
 5341 00ed 0F       		.uleb128 0xf
 5342 00ee 00       		.byte	0
 5343 00ef 0B       		.uleb128 0xb
 5344 00f0 0B       		.uleb128 0xb
 5345 00f1 00       		.byte	0
 5346 00f2 00       		.byte	0
 5347 00f3 16       		.uleb128 0x16
 5348 00f4 2E       		.uleb128 0x2e
 5349 00f5 01       		.byte	0x1
 5350 00f6 03       		.uleb128 0x3
 5351 00f7 0E       		.uleb128 0xe
 5352 00f8 3A       		.uleb128 0x3a
 5353 00f9 0B       		.uleb128 0xb
 5354 00fa 3B       		.uleb128 0x3b
 5355 00fb 05       		.uleb128 0x5
 5356 00fc 27       		.uleb128 0x27
 5357 00fd 19       		.uleb128 0x19
 5358 00fe 49       		.uleb128 0x49
 5359 00ff 13       		.uleb128 0x13
 5360 0100 11       		.uleb128 0x11
 5361 0101 01       		.uleb128 0x1
 5362 0102 12       		.uleb128 0x12
 5363 0103 06       		.uleb128 0x6
 5364 0104 40       		.uleb128 0x40
 5365 0105 18       		.uleb128 0x18
 5366 0106 9642     		.uleb128 0x2116
 5367 0108 19       		.uleb128 0x19
 5368 0109 01       		.uleb128 0x1
 5369 010a 13       		.uleb128 0x13
 5370 010b 00       		.byte	0
 5371 010c 00       		.byte	0
 5372 010d 17       		.uleb128 0x17
 5373 010e 05       		.uleb128 0x5
 5374 010f 00       		.byte	0
 5375 0110 03       		.uleb128 0x3
 5376 0111 0E       		.uleb128 0xe
 5377 0112 3A       		.uleb128 0x3a
 5378 0113 0B       		.uleb128 0xb
 5379 0114 3B       		.uleb128 0x3b
 5380 0115 05       		.uleb128 0x5
 5381 0116 49       		.uleb128 0x49
 5382 0117 13       		.uleb128 0x13
 5383 0118 02       		.uleb128 0x2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 158


 5384 0119 17       		.uleb128 0x17
 5385 011a 00       		.byte	0
 5386 011b 00       		.byte	0
 5387 011c 18       		.uleb128 0x18
 5388 011d 34       		.uleb128 0x34
 5389 011e 00       		.byte	0
 5390 011f 03       		.uleb128 0x3
 5391 0120 0E       		.uleb128 0xe
 5392 0121 3A       		.uleb128 0x3a
 5393 0122 0B       		.uleb128 0xb
 5394 0123 3B       		.uleb128 0x3b
 5395 0124 05       		.uleb128 0x5
 5396 0125 49       		.uleb128 0x49
 5397 0126 13       		.uleb128 0x13
 5398 0127 02       		.uleb128 0x2
 5399 0128 17       		.uleb128 0x17
 5400 0129 00       		.byte	0
 5401 012a 00       		.byte	0
 5402 012b 19       		.uleb128 0x19
 5403 012c 2E       		.uleb128 0x2e
 5404 012d 00       		.byte	0
 5405 012e 3F       		.uleb128 0x3f
 5406 012f 19       		.uleb128 0x19
 5407 0130 03       		.uleb128 0x3
 5408 0131 0E       		.uleb128 0xe
 5409 0132 3A       		.uleb128 0x3a
 5410 0133 0B       		.uleb128 0xb
 5411 0134 3B       		.uleb128 0x3b
 5412 0135 0B       		.uleb128 0xb
 5413 0136 27       		.uleb128 0x27
 5414 0137 19       		.uleb128 0x19
 5415 0138 49       		.uleb128 0x49
 5416 0139 13       		.uleb128 0x13
 5417 013a 11       		.uleb128 0x11
 5418 013b 01       		.uleb128 0x1
 5419 013c 12       		.uleb128 0x12
 5420 013d 06       		.uleb128 0x6
 5421 013e 40       		.uleb128 0x40
 5422 013f 18       		.uleb128 0x18
 5423 0140 9742     		.uleb128 0x2117
 5424 0142 19       		.uleb128 0x19
 5425 0143 00       		.byte	0
 5426 0144 00       		.byte	0
 5427 0145 1A       		.uleb128 0x1a
 5428 0146 2E       		.uleb128 0x2e
 5429 0147 01       		.byte	0x1
 5430 0148 3F       		.uleb128 0x3f
 5431 0149 19       		.uleb128 0x19
 5432 014a 03       		.uleb128 0x3
 5433 014b 0E       		.uleb128 0xe
 5434 014c 3A       		.uleb128 0x3a
 5435 014d 0B       		.uleb128 0xb
 5436 014e 3B       		.uleb128 0x3b
 5437 014f 05       		.uleb128 0x5
 5438 0150 27       		.uleb128 0x27
 5439 0151 19       		.uleb128 0x19
 5440 0152 49       		.uleb128 0x49
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 159


 5441 0153 13       		.uleb128 0x13
 5442 0154 11       		.uleb128 0x11
 5443 0155 01       		.uleb128 0x1
 5444 0156 12       		.uleb128 0x12
 5445 0157 06       		.uleb128 0x6
 5446 0158 40       		.uleb128 0x40
 5447 0159 18       		.uleb128 0x18
 5448 015a 9742     		.uleb128 0x2117
 5449 015c 19       		.uleb128 0x19
 5450 015d 01       		.uleb128 0x1
 5451 015e 13       		.uleb128 0x13
 5452 015f 00       		.byte	0
 5453 0160 00       		.byte	0
 5454 0161 1B       		.uleb128 0x1b
 5455 0162 898201   		.uleb128 0x4109
 5456 0165 00       		.byte	0
 5457 0166 11       		.uleb128 0x11
 5458 0167 01       		.uleb128 0x1
 5459 0168 31       		.uleb128 0x31
 5460 0169 13       		.uleb128 0x13
 5461 016a 00       		.byte	0
 5462 016b 00       		.byte	0
 5463 016c 1C       		.uleb128 0x1c
 5464 016d 898201   		.uleb128 0x4109
 5465 0170 01       		.byte	0x1
 5466 0171 11       		.uleb128 0x11
 5467 0172 01       		.uleb128 0x1
 5468 0173 31       		.uleb128 0x31
 5469 0174 13       		.uleb128 0x13
 5470 0175 01       		.uleb128 0x1
 5471 0176 13       		.uleb128 0x13
 5472 0177 00       		.byte	0
 5473 0178 00       		.byte	0
 5474 0179 1D       		.uleb128 0x1d
 5475 017a 8A8201   		.uleb128 0x410a
 5476 017d 00       		.byte	0
 5477 017e 02       		.uleb128 0x2
 5478 017f 18       		.uleb128 0x18
 5479 0180 9142     		.uleb128 0x2111
 5480 0182 18       		.uleb128 0x18
 5481 0183 00       		.byte	0
 5482 0184 00       		.byte	0
 5483 0185 1E       		.uleb128 0x1e
 5484 0186 2E       		.uleb128 0x2e
 5485 0187 01       		.byte	0x1
 5486 0188 3F       		.uleb128 0x3f
 5487 0189 19       		.uleb128 0x19
 5488 018a 03       		.uleb128 0x3
 5489 018b 0E       		.uleb128 0xe
 5490 018c 3A       		.uleb128 0x3a
 5491 018d 0B       		.uleb128 0xb
 5492 018e 3B       		.uleb128 0x3b
 5493 018f 05       		.uleb128 0x5
 5494 0190 27       		.uleb128 0x27
 5495 0191 19       		.uleb128 0x19
 5496 0192 11       		.uleb128 0x11
 5497 0193 01       		.uleb128 0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 160


 5498 0194 12       		.uleb128 0x12
 5499 0195 06       		.uleb128 0x6
 5500 0196 40       		.uleb128 0x40
 5501 0197 18       		.uleb128 0x18
 5502 0198 9742     		.uleb128 0x2117
 5503 019a 19       		.uleb128 0x19
 5504 019b 01       		.uleb128 0x1
 5505 019c 13       		.uleb128 0x13
 5506 019d 00       		.byte	0
 5507 019e 00       		.byte	0
 5508 019f 1F       		.uleb128 0x1f
 5509 01a0 34       		.uleb128 0x34
 5510 01a1 00       		.byte	0
 5511 01a2 03       		.uleb128 0x3
 5512 01a3 0E       		.uleb128 0xe
 5513 01a4 3A       		.uleb128 0x3a
 5514 01a5 0B       		.uleb128 0xb
 5515 01a6 3B       		.uleb128 0x3b
 5516 01a7 05       		.uleb128 0x5
 5517 01a8 49       		.uleb128 0x49
 5518 01a9 13       		.uleb128 0x13
 5519 01aa 1C       		.uleb128 0x1c
 5520 01ab 0B       		.uleb128 0xb
 5521 01ac 00       		.byte	0
 5522 01ad 00       		.byte	0
 5523 01ae 20       		.uleb128 0x20
 5524 01af 898201   		.uleb128 0x4109
 5525 01b2 01       		.byte	0x1
 5526 01b3 11       		.uleb128 0x11
 5527 01b4 01       		.uleb128 0x1
 5528 01b5 31       		.uleb128 0x31
 5529 01b6 13       		.uleb128 0x13
 5530 01b7 00       		.byte	0
 5531 01b8 00       		.byte	0
 5532 01b9 21       		.uleb128 0x21
 5533 01ba 26       		.uleb128 0x26
 5534 01bb 00       		.byte	0
 5535 01bc 49       		.uleb128 0x49
 5536 01bd 13       		.uleb128 0x13
 5537 01be 00       		.byte	0
 5538 01bf 00       		.byte	0
 5539 01c0 22       		.uleb128 0x22
 5540 01c1 34       		.uleb128 0x34
 5541 01c2 00       		.byte	0
 5542 01c3 03       		.uleb128 0x3
 5543 01c4 0E       		.uleb128 0xe
 5544 01c5 3A       		.uleb128 0x3a
 5545 01c6 0B       		.uleb128 0xb
 5546 01c7 3B       		.uleb128 0x3b
 5547 01c8 05       		.uleb128 0x5
 5548 01c9 49       		.uleb128 0x49
 5549 01ca 13       		.uleb128 0x13
 5550 01cb 02       		.uleb128 0x2
 5551 01cc 18       		.uleb128 0x18
 5552 01cd 00       		.byte	0
 5553 01ce 00       		.byte	0
 5554 01cf 23       		.uleb128 0x23
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 161


 5555 01d0 05       		.uleb128 0x5
 5556 01d1 00       		.byte	0
 5557 01d2 03       		.uleb128 0x3
 5558 01d3 0E       		.uleb128 0xe
 5559 01d4 3A       		.uleb128 0x3a
 5560 01d5 0B       		.uleb128 0xb
 5561 01d6 3B       		.uleb128 0x3b
 5562 01d7 05       		.uleb128 0x5
 5563 01d8 49       		.uleb128 0x49
 5564 01d9 13       		.uleb128 0x13
 5565 01da 02       		.uleb128 0x2
 5566 01db 18       		.uleb128 0x18
 5567 01dc 00       		.byte	0
 5568 01dd 00       		.byte	0
 5569 01de 24       		.uleb128 0x24
 5570 01df 2E       		.uleb128 0x2e
 5571 01e0 01       		.byte	0x1
 5572 01e1 03       		.uleb128 0x3
 5573 01e2 0E       		.uleb128 0xe
 5574 01e3 3A       		.uleb128 0x3a
 5575 01e4 0B       		.uleb128 0xb
 5576 01e5 3B       		.uleb128 0x3b
 5577 01e6 05       		.uleb128 0x5
 5578 01e7 27       		.uleb128 0x27
 5579 01e8 19       		.uleb128 0x19
 5580 01e9 11       		.uleb128 0x11
 5581 01ea 01       		.uleb128 0x1
 5582 01eb 12       		.uleb128 0x12
 5583 01ec 06       		.uleb128 0x6
 5584 01ed 40       		.uleb128 0x40
 5585 01ee 18       		.uleb128 0x18
 5586 01ef 9742     		.uleb128 0x2117
 5587 01f1 19       		.uleb128 0x19
 5588 01f2 01       		.uleb128 0x1
 5589 01f3 13       		.uleb128 0x13
 5590 01f4 00       		.byte	0
 5591 01f5 00       		.byte	0
 5592 01f6 25       		.uleb128 0x25
 5593 01f7 2E       		.uleb128 0x2e
 5594 01f8 01       		.byte	0x1
 5595 01f9 3F       		.uleb128 0x3f
 5596 01fa 19       		.uleb128 0x19
 5597 01fb 03       		.uleb128 0x3
 5598 01fc 0E       		.uleb128 0xe
 5599 01fd 3A       		.uleb128 0x3a
 5600 01fe 0B       		.uleb128 0xb
 5601 01ff 3B       		.uleb128 0x3b
 5602 0200 05       		.uleb128 0x5
 5603 0201 27       		.uleb128 0x27
 5604 0202 19       		.uleb128 0x19
 5605 0203 49       		.uleb128 0x49
 5606 0204 13       		.uleb128 0x13
 5607 0205 11       		.uleb128 0x11
 5608 0206 01       		.uleb128 0x1
 5609 0207 12       		.uleb128 0x12
 5610 0208 06       		.uleb128 0x6
 5611 0209 40       		.uleb128 0x40
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 162


 5612 020a 18       		.uleb128 0x18
 5613 020b 9642     		.uleb128 0x2116
 5614 020d 19       		.uleb128 0x19
 5615 020e 01       		.uleb128 0x1
 5616 020f 13       		.uleb128 0x13
 5617 0210 00       		.byte	0
 5618 0211 00       		.byte	0
 5619 0212 26       		.uleb128 0x26
 5620 0213 34       		.uleb128 0x34
 5621 0214 00       		.byte	0
 5622 0215 03       		.uleb128 0x3
 5623 0216 0E       		.uleb128 0xe
 5624 0217 3A       		.uleb128 0x3a
 5625 0218 0B       		.uleb128 0xb
 5626 0219 3B       		.uleb128 0x3b
 5627 021a 05       		.uleb128 0x5
 5628 021b 49       		.uleb128 0x49
 5629 021c 13       		.uleb128 0x13
 5630 021d 3F       		.uleb128 0x3f
 5631 021e 19       		.uleb128 0x19
 5632 021f 3C       		.uleb128 0x3c
 5633 0220 19       		.uleb128 0x19
 5634 0221 00       		.byte	0
 5635 0222 00       		.byte	0
 5636 0223 27       		.uleb128 0x27
 5637 0224 34       		.uleb128 0x34
 5638 0225 00       		.byte	0
 5639 0226 03       		.uleb128 0x3
 5640 0227 0E       		.uleb128 0xe
 5641 0228 3A       		.uleb128 0x3a
 5642 0229 0B       		.uleb128 0xb
 5643 022a 3B       		.uleb128 0x3b
 5644 022b 0B       		.uleb128 0xb
 5645 022c 49       		.uleb128 0x49
 5646 022d 13       		.uleb128 0x13
 5647 022e 3F       		.uleb128 0x3f
 5648 022f 19       		.uleb128 0x19
 5649 0230 02       		.uleb128 0x2
 5650 0231 18       		.uleb128 0x18
 5651 0232 00       		.byte	0
 5652 0233 00       		.byte	0
 5653 0234 28       		.uleb128 0x28
 5654 0235 2E       		.uleb128 0x2e
 5655 0236 00       		.byte	0
 5656 0237 3F       		.uleb128 0x3f
 5657 0238 19       		.uleb128 0x19
 5658 0239 3C       		.uleb128 0x3c
 5659 023a 19       		.uleb128 0x19
 5660 023b 6E       		.uleb128 0x6e
 5661 023c 0E       		.uleb128 0xe
 5662 023d 03       		.uleb128 0x3
 5663 023e 0E       		.uleb128 0xe
 5664 023f 3A       		.uleb128 0x3a
 5665 0240 0B       		.uleb128 0xb
 5666 0241 3B       		.uleb128 0x3b
 5667 0242 05       		.uleb128 0x5
 5668 0243 00       		.byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 163


 5669 0244 00       		.byte	0
 5670 0245 29       		.uleb128 0x29
 5671 0246 2E       		.uleb128 0x2e
 5672 0247 00       		.byte	0
 5673 0248 3F       		.uleb128 0x3f
 5674 0249 19       		.uleb128 0x19
 5675 024a 3C       		.uleb128 0x3c
 5676 024b 19       		.uleb128 0x19
 5677 024c 6E       		.uleb128 0x6e
 5678 024d 0E       		.uleb128 0xe
 5679 024e 03       		.uleb128 0x3
 5680 024f 0E       		.uleb128 0xe
 5681 0250 3A       		.uleb128 0x3a
 5682 0251 0B       		.uleb128 0xb
 5683 0252 3B       		.uleb128 0x3b
 5684 0253 0B       		.uleb128 0xb
 5685 0254 00       		.byte	0
 5686 0255 00       		.byte	0
 5687 0256 00       		.byte	0
 5688              		.section	.debug_loc,"",%progbits
 5689              	.Ldebug_loc0:
 5690              	.LLST0:
 5691 0000 00000000 		.4byte	.LVL0
 5692 0004 14000000 		.4byte	.LVL3
 5693 0008 0100     		.2byte	0x1
 5694 000a 50       		.byte	0x50
 5695 000b 14000000 		.4byte	.LVL3
 5696 000f 76000000 		.4byte	.LVL9
 5697 0013 0100     		.2byte	0x1
 5698 0015 54       		.byte	0x54
 5699 0016 76000000 		.4byte	.LVL9
 5700 001a 84000000 		.4byte	.LFE23
 5701 001e 0400     		.2byte	0x4
 5702 0020 F3       		.byte	0xf3
 5703 0021 01       		.uleb128 0x1
 5704 0022 50       		.byte	0x50
 5705 0023 9F       		.byte	0x9f
 5706 0024 00000000 		.4byte	0
 5707 0028 00000000 		.4byte	0
 5708              	.LLST1:
 5709 002c 00000000 		.4byte	.LVL0
 5710 0030 12000000 		.4byte	.LVL2
 5711 0034 0100     		.2byte	0x1
 5712 0036 51       		.byte	0x51
 5713 0037 12000000 		.4byte	.LVL2
 5714 003b 76000000 		.4byte	.LVL10
 5715 003f 0100     		.2byte	0x1
 5716 0041 55       		.byte	0x55
 5717 0042 76000000 		.4byte	.LVL10
 5718 0046 84000000 		.4byte	.LFE23
 5719 004a 0400     		.2byte	0x4
 5720 004c F3       		.byte	0xf3
 5721 004d 01       		.uleb128 0x1
 5722 004e 51       		.byte	0x51
 5723 004f 9F       		.byte	0x9f
 5724 0050 00000000 		.4byte	0
 5725 0054 00000000 		.4byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 164


 5726              	.LLST2:
 5727 0058 06000000 		.4byte	.LVL1
 5728 005c 76000000 		.4byte	.LVL8
 5729 0060 0200     		.2byte	0x2
 5730 0062 30       		.byte	0x30
 5731 0063 9F       		.byte	0x9f
 5732 0064 76000000 		.4byte	.LVL8
 5733 0068 84000000 		.4byte	.LFE23
 5734 006c 0100     		.2byte	0x1
 5735 006e 50       		.byte	0x50
 5736 006f 00000000 		.4byte	0
 5737 0073 00000000 		.4byte	0
 5738              	.LLST3:
 5739 0077 00000000 		.4byte	.LVL11
 5740 007b 20000000 		.4byte	.LVL15
 5741 007f 0100     		.2byte	0x1
 5742 0081 50       		.byte	0x50
 5743 0082 20000000 		.4byte	.LVL15
 5744 0086 23000000 		.4byte	.LVL16-1
 5745 008a 0100     		.2byte	0x1
 5746 008c 51       		.byte	0x51
 5747 008d 23000000 		.4byte	.LVL16-1
 5748 0091 38000000 		.4byte	.LVL21
 5749 0095 0400     		.2byte	0x4
 5750 0097 F3       		.byte	0xf3
 5751 0098 01       		.uleb128 0x1
 5752 0099 50       		.byte	0x50
 5753 009a 9F       		.byte	0x9f
 5754 009b 38000000 		.4byte	.LVL21
 5755 009f 3E000000 		.4byte	.LVL24
 5756 00a3 0100     		.2byte	0x1
 5757 00a5 50       		.byte	0x50
 5758 00a6 3E000000 		.4byte	.LVL24
 5759 00aa 42000000 		.4byte	.LFE24
 5760 00ae 0400     		.2byte	0x4
 5761 00b0 F3       		.byte	0xf3
 5762 00b1 01       		.uleb128 0x1
 5763 00b2 50       		.byte	0x50
 5764 00b3 9F       		.byte	0x9f
 5765 00b4 00000000 		.4byte	0
 5766 00b8 00000000 		.4byte	0
 5767              	.LLST4:
 5768 00bc 00000000 		.4byte	.LVL11
 5769 00c0 1E000000 		.4byte	.LVL14
 5770 00c4 0100     		.2byte	0x1
 5771 00c6 51       		.byte	0x51
 5772 00c7 1E000000 		.4byte	.LVL14
 5773 00cb 38000000 		.4byte	.LVL21
 5774 00cf 0400     		.2byte	0x4
 5775 00d1 F3       		.byte	0xf3
 5776 00d2 01       		.uleb128 0x1
 5777 00d3 51       		.byte	0x51
 5778 00d4 9F       		.byte	0x9f
 5779 00d5 38000000 		.4byte	.LVL21
 5780 00d9 3E000000 		.4byte	.LVL24
 5781 00dd 0100     		.2byte	0x1
 5782 00df 51       		.byte	0x51
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 165


 5783 00e0 3E000000 		.4byte	.LVL24
 5784 00e4 42000000 		.4byte	.LFE24
 5785 00e8 0400     		.2byte	0x4
 5786 00ea F3       		.byte	0xf3
 5787 00eb 01       		.uleb128 0x1
 5788 00ec 51       		.byte	0x51
 5789 00ed 9F       		.byte	0x9f
 5790 00ee 00000000 		.4byte	0
 5791 00f2 00000000 		.4byte	0
 5792              	.LLST5:
 5793 00f6 24000000 		.4byte	.LVL16
 5794 00fa 28000000 		.4byte	.LVL17
 5795 00fe 0200     		.2byte	0x2
 5796 0100 30       		.byte	0x30
 5797 0101 9F       		.byte	0x9f
 5798 0102 28000000 		.4byte	.LVL17
 5799 0106 38000000 		.4byte	.LVL21
 5800 010a 0100     		.2byte	0x1
 5801 010c 53       		.byte	0x53
 5802 010d 3E000000 		.4byte	.LVL24
 5803 0111 42000000 		.4byte	.LFE24
 5804 0115 0100     		.2byte	0x1
 5805 0117 53       		.byte	0x53
 5806 0118 00000000 		.4byte	0
 5807 011c 00000000 		.4byte	0
 5808              	.LLST6:
 5809 0120 10000000 		.4byte	.LVL12
 5810 0124 1C000000 		.4byte	.LVL13
 5811 0128 0100     		.2byte	0x1
 5812 012a 53       		.byte	0x53
 5813 012b 38000000 		.4byte	.LVL21
 5814 012f 3A000000 		.4byte	.LVL22
 5815 0133 0100     		.2byte	0x1
 5816 0135 53       		.byte	0x53
 5817 0136 3C000000 		.4byte	.LVL23
 5818 013a 3E000000 		.4byte	.LVL24
 5819 013e 0100     		.2byte	0x1
 5820 0140 53       		.byte	0x53
 5821 0141 00000000 		.4byte	0
 5822 0145 00000000 		.4byte	0
 5823              	.LLST7:
 5824 0149 24000000 		.4byte	.LVL16
 5825 014d 38000000 		.4byte	.LVL21
 5826 0151 0100     		.2byte	0x1
 5827 0153 50       		.byte	0x50
 5828 0154 00000000 		.4byte	0
 5829 0158 00000000 		.4byte	0
 5830              	.LLST8:
 5831 015c 00000000 		.4byte	.LVL25
 5832 0160 37000000 		.4byte	.LVL27-1
 5833 0164 0100     		.2byte	0x1
 5834 0166 50       		.byte	0x50
 5835 0167 37000000 		.4byte	.LVL27-1
 5836 016b 40000000 		.4byte	.LFE2
 5837 016f 0400     		.2byte	0x4
 5838 0171 F3       		.byte	0xf3
 5839 0172 01       		.uleb128 0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 166


 5840 0173 50       		.byte	0x50
 5841 0174 9F       		.byte	0x9f
 5842 0175 00000000 		.4byte	0
 5843 0179 00000000 		.4byte	0
 5844              	.LLST9:
 5845 017d 30000000 		.4byte	.LVL26
 5846 0181 3A000000 		.4byte	.LVL28
 5847 0185 0100     		.2byte	0x1
 5848 0187 54       		.byte	0x54
 5849 0188 3A000000 		.4byte	.LVL28
 5850 018c 40000000 		.4byte	.LFE2
 5851 0190 0100     		.2byte	0x1
 5852 0192 50       		.byte	0x50
 5853 0193 00000000 		.4byte	0
 5854 0197 00000000 		.4byte	0
 5855              	.LLST10:
 5856 019b 02000000 		.4byte	.LVL29
 5857 019f 22000000 		.4byte	.LVL31
 5858 01a3 0200     		.2byte	0x2
 5859 01a5 30       		.byte	0x30
 5860 01a6 9F       		.byte	0x9f
 5861 01a7 22000000 		.4byte	.LVL31
 5862 01ab 2C000000 		.4byte	.LFE3
 5863 01af 0100     		.2byte	0x1
 5864 01b1 50       		.byte	0x50
 5865 01b2 00000000 		.4byte	0
 5866 01b6 00000000 		.4byte	0
 5867              	.LLST11:
 5868 01ba 02000000 		.4byte	.LVL32
 5869 01be 12000000 		.4byte	.LVL33
 5870 01c2 0300     		.2byte	0x3
 5871 01c4 09       		.byte	0x9
 5872 01c5 FF       		.byte	0xff
 5873 01c6 9F       		.byte	0x9f
 5874 01c7 12000000 		.4byte	.LVL33
 5875 01cb 14000000 		.4byte	.LVL34
 5876 01cf 0100     		.2byte	0x1
 5877 01d1 50       		.byte	0x50
 5878 01d2 18000000 		.4byte	.LVL35
 5879 01d6 31000000 		.4byte	.LVL36-1
 5880 01da 0100     		.2byte	0x1
 5881 01dc 50       		.byte	0x50
 5882 01dd 32000000 		.4byte	.LVL36
 5883 01e1 3C000000 		.4byte	.LVL38
 5884 01e5 0100     		.2byte	0x1
 5885 01e7 50       		.byte	0x50
 5886 01e8 3C000000 		.4byte	.LVL38
 5887 01ec 3E000000 		.4byte	.LVL39
 5888 01f0 0300     		.2byte	0x3
 5889 01f2 09       		.byte	0x9
 5890 01f3 FF       		.byte	0xff
 5891 01f4 9F       		.byte	0x9f
 5892 01f5 3E000000 		.4byte	.LVL39
 5893 01f9 48000000 		.4byte	.LFE4
 5894 01fd 0100     		.2byte	0x1
 5895 01ff 50       		.byte	0x50
 5896 0200 00000000 		.4byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 167


 5897 0204 00000000 		.4byte	0
 5898              	.LLST12:
 5899 0208 12000000 		.4byte	.LVL33
 5900 020c 3C000000 		.4byte	.LVL38
 5901 0210 0100     		.2byte	0x1
 5902 0212 54       		.byte	0x54
 5903 0213 00000000 		.4byte	0
 5904 0217 00000000 		.4byte	0
 5905              	.LLST13:
 5906 021b 00000000 		.4byte	.LVL40
 5907 021f 47000000 		.4byte	.LVL42-1
 5908 0223 0100     		.2byte	0x1
 5909 0225 50       		.byte	0x50
 5910 0226 47000000 		.4byte	.LVL42-1
 5911 022a 54000000 		.4byte	.LFE5
 5912 022e 0400     		.2byte	0x4
 5913 0230 F3       		.byte	0xf3
 5914 0231 01       		.uleb128 0x1
 5915 0232 50       		.byte	0x50
 5916 0233 9F       		.byte	0x9f
 5917 0234 00000000 		.4byte	0
 5918 0238 00000000 		.4byte	0
 5919              	.LLST14:
 5920 023c 00000000 		.4byte	.LVL40
 5921 0240 47000000 		.4byte	.LVL42-1
 5922 0244 0100     		.2byte	0x1
 5923 0246 51       		.byte	0x51
 5924 0247 47000000 		.4byte	.LVL42-1
 5925 024b 54000000 		.4byte	.LFE5
 5926 024f 0400     		.2byte	0x4
 5927 0251 F3       		.byte	0xf3
 5928 0252 01       		.uleb128 0x1
 5929 0253 51       		.byte	0x51
 5930 0254 9F       		.byte	0x9f
 5931 0255 00000000 		.4byte	0
 5932 0259 00000000 		.4byte	0
 5933              	.LLST15:
 5934 025d 40000000 		.4byte	.LVL41
 5935 0261 4A000000 		.4byte	.LVL43
 5936 0265 0100     		.2byte	0x1
 5937 0267 54       		.byte	0x54
 5938 0268 4A000000 		.4byte	.LVL43
 5939 026c 54000000 		.4byte	.LFE5
 5940 0270 0100     		.2byte	0x1
 5941 0272 50       		.byte	0x50
 5942 0273 00000000 		.4byte	0
 5943 0277 00000000 		.4byte	0
 5944              	.LLST16:
 5945 027b 02000000 		.4byte	.LVL44
 5946 027f 22000000 		.4byte	.LVL46
 5947 0283 0200     		.2byte	0x2
 5948 0285 30       		.byte	0x30
 5949 0286 9F       		.byte	0x9f
 5950 0287 22000000 		.4byte	.LVL46
 5951 028b 2C000000 		.4byte	.LFE6
 5952 028f 0100     		.2byte	0x1
 5953 0291 50       		.byte	0x50
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 168


 5954 0292 00000000 		.4byte	0
 5955 0296 00000000 		.4byte	0
 5956              	.LLST17:
 5957 029a 00000000 		.4byte	.LVL47
 5958 029e 06000000 		.4byte	.LVL48
 5959 02a2 0100     		.2byte	0x1
 5960 02a4 50       		.byte	0x50
 5961 02a5 06000000 		.4byte	.LVL48
 5962 02a9 9C000000 		.4byte	.LFE8
 5963 02ad 0400     		.2byte	0x4
 5964 02af F3       		.byte	0xf3
 5965 02b0 01       		.uleb128 0x1
 5966 02b1 50       		.byte	0x50
 5967 02b2 9F       		.byte	0x9f
 5968 02b3 00000000 		.4byte	0
 5969 02b7 00000000 		.4byte	0
 5970              	.LLST18:
 5971 02bb 00000000 		.4byte	.LVL47
 5972 02bf 0E000000 		.4byte	.LVL49
 5973 02c3 0100     		.2byte	0x1
 5974 02c5 51       		.byte	0x51
 5975 02c6 0E000000 		.4byte	.LVL49
 5976 02ca 9C000000 		.4byte	.LFE8
 5977 02ce 0400     		.2byte	0x4
 5978 02d0 F3       		.byte	0xf3
 5979 02d1 01       		.uleb128 0x1
 5980 02d2 51       		.byte	0x51
 5981 02d3 9F       		.byte	0x9f
 5982 02d4 00000000 		.4byte	0
 5983 02d8 00000000 		.4byte	0
 5984              	.LLST19:
 5985 02dc 00000000 		.4byte	.LVL47
 5986 02e0 16000000 		.4byte	.LVL51
 5987 02e4 0100     		.2byte	0x1
 5988 02e6 52       		.byte	0x52
 5989 02e7 16000000 		.4byte	.LVL51
 5990 02eb 94000000 		.4byte	.LVL63
 5991 02ef 0100     		.2byte	0x1
 5992 02f1 56       		.byte	0x56
 5993 02f2 94000000 		.4byte	.LVL63
 5994 02f6 9C000000 		.4byte	.LFE8
 5995 02fa 0400     		.2byte	0x4
 5996 02fc F3       		.byte	0xf3
 5997 02fd 01       		.uleb128 0x1
 5998 02fe 52       		.byte	0x52
 5999 02ff 9F       		.byte	0x9f
 6000 0300 00000000 		.4byte	0
 6001 0304 00000000 		.4byte	0
 6002              	.LLST20:
 6003 0308 12000000 		.4byte	.LVL50
 6004 030c 16000000 		.4byte	.LVL51
 6005 0310 0200     		.2byte	0x2
 6006 0312 30       		.byte	0x30
 6007 0313 9F       		.byte	0x9f
 6008 0314 16000000 		.4byte	.LVL51
 6009 0318 94000000 		.4byte	.LVL62
 6010 031c 0100     		.2byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 169


 6011 031e 55       		.byte	0x55
 6012 031f 00000000 		.4byte	0
 6013 0323 00000000 		.4byte	0
 6014              	.LLST21:
 6015 0327 1A000000 		.4byte	.LVL52
 6016 032b 39000000 		.4byte	.LVL53-1
 6017 032f 0100     		.2byte	0x1
 6018 0331 50       		.byte	0x50
 6019 0332 4C000000 		.4byte	.LVL54
 6020 0336 6B000000 		.4byte	.LVL55-1
 6021 033a 0100     		.2byte	0x1
 6022 033c 50       		.byte	0x50
 6023 033d 72000000 		.4byte	.LVL56
 6024 0341 83000000 		.4byte	.LVL57-1
 6025 0345 0100     		.2byte	0x1
 6026 0347 50       		.byte	0x50
 6027 0348 00000000 		.4byte	0
 6028 034c 00000000 		.4byte	0
 6029              	.LLST22:
 6030 0350 12000000 		.4byte	.LVL50
 6031 0354 94000000 		.4byte	.LVL61
 6032 0358 0100     		.2byte	0x1
 6033 035a 54       		.byte	0x54
 6034 035b 00000000 		.4byte	0
 6035 035f 00000000 		.4byte	0
 6036              	.LLST23:
 6037 0363 00000000 		.4byte	.LVL64
 6038 0367 30000000 		.4byte	.LVL68
 6039 036b 0100     		.2byte	0x1
 6040 036d 50       		.byte	0x50
 6041 036e 30000000 		.4byte	.LVL68
 6042 0372 80000000 		.4byte	.LFE11
 6043 0376 0400     		.2byte	0x4
 6044 0378 F3       		.byte	0xf3
 6045 0379 01       		.uleb128 0x1
 6046 037a 50       		.byte	0x50
 6047 037b 9F       		.byte	0x9f
 6048 037c 00000000 		.4byte	0
 6049 0380 00000000 		.4byte	0
 6050              	.LLST24:
 6051 0384 34000000 		.4byte	.LVL69
 6052 0388 6B000000 		.4byte	.LVL80-1
 6053 038c 0100     		.2byte	0x1
 6054 038e 50       		.byte	0x50
 6055 038f 00000000 		.4byte	0
 6056 0393 00000000 		.4byte	0
 6057              	.LLST25:
 6058 0397 2A000000 		.4byte	.LVL67
 6059 039b 30000000 		.4byte	.LVL68
 6060 039f 0200     		.2byte	0x2
 6061 03a1 30       		.byte	0x30
 6062 03a2 9F       		.byte	0x9f
 6063 03a3 30000000 		.4byte	.LVL68
 6064 03a7 74000000 		.4byte	.LVL84
 6065 03ab 0100     		.2byte	0x1
 6066 03ad 55       		.byte	0x55
 6067 03ae 00000000 		.4byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 170


 6068 03b2 00000000 		.4byte	0
 6069              	.LLST26:
 6070 03b6 1A000000 		.4byte	.LVL65
 6071 03ba 24000000 		.4byte	.LVL66
 6072 03be 0200     		.2byte	0x2
 6073 03c0 30       		.byte	0x30
 6074 03c1 9F       		.byte	0x9f
 6075 03c2 2A000000 		.4byte	.LVL67
 6076 03c6 74000000 		.4byte	.LVL85
 6077 03ca 0100     		.2byte	0x1
 6078 03cc 58       		.byte	0x58
 6079 03cd 00000000 		.4byte	0
 6080 03d1 00000000 		.4byte	0
 6081              	.LLST27:
 6082 03d5 1A000000 		.4byte	.LVL65
 6083 03d9 24000000 		.4byte	.LVL66
 6084 03dd 0200     		.2byte	0x2
 6085 03df 35       		.byte	0x35
 6086 03e0 9F       		.byte	0x9f
 6087 03e1 2A000000 		.4byte	.LVL67
 6088 03e5 74000000 		.4byte	.LVL86
 6089 03e9 0100     		.2byte	0x1
 6090 03eb 59       		.byte	0x59
 6091 03ec 00000000 		.4byte	0
 6092 03f0 00000000 		.4byte	0
 6093              	.LLST28:
 6094 03f4 42000000 		.4byte	.LVL72
 6095 03f8 54000000 		.4byte	.LVL75
 6096 03fc 0100     		.2byte	0x1
 6097 03fe 52       		.byte	0x52
 6098 03ff 54000000 		.4byte	.LVL75
 6099 0403 5E000000 		.4byte	.LVL77
 6100 0407 0200     		.2byte	0x2
 6101 0409 76       		.byte	0x76
 6102 040a 00       		.sleb128 0
 6103 040b 62000000 		.4byte	.LVL78
 6104 040f 6B000000 		.4byte	.LVL80-1
 6105 0413 0100     		.2byte	0x1
 6106 0415 53       		.byte	0x53
 6107 0416 00000000 		.4byte	0
 6108 041a 00000000 		.4byte	0
 6109              	.LLST29:
 6110 041e 38000000 		.4byte	.LVL70
 6111 0422 62000000 		.4byte	.LVL78
 6112 0426 0100     		.2byte	0x1
 6113 0428 53       		.byte	0x53
 6114 0429 00000000 		.4byte	0
 6115 042d 00000000 		.4byte	0
 6116              	.LLST30:
 6117 0431 30000000 		.4byte	.LVL68
 6118 0435 74000000 		.4byte	.LVL83
 6119 0439 0100     		.2byte	0x1
 6120 043b 54       		.byte	0x54
 6121 043c 00000000 		.4byte	0
 6122 0440 00000000 		.4byte	0
 6123              	.LLST31:
 6124 0444 16000000 		.4byte	.LVL88
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 171


 6125 0448 29000000 		.4byte	.LVL89-1
 6126 044c 0100     		.2byte	0x1
 6127 044e 50       		.byte	0x50
 6128 044f 29000000 		.4byte	.LVL89-1
 6129 0453 2C000000 		.4byte	.LVL90
 6130 0457 0100     		.2byte	0x1
 6131 0459 54       		.byte	0x54
 6132 045a 2C000000 		.4byte	.LVL90
 6133 045e 54000000 		.4byte	.LVL91
 6134 0462 0100     		.2byte	0x1
 6135 0464 50       		.byte	0x50
 6136 0465 54000000 		.4byte	.LVL91
 6137 0469 58000000 		.4byte	.LVL92
 6138 046d 0200     		.2byte	0x2
 6139 046f 30       		.byte	0x30
 6140 0470 9F       		.byte	0x9f
 6141 0471 58000000 		.4byte	.LVL92
 6142 0475 6A000000 		.4byte	.LVL93
 6143 0479 0100     		.2byte	0x1
 6144 047b 50       		.byte	0x50
 6145 047c 6A000000 		.4byte	.LVL93
 6146 0480 6E000000 		.4byte	.LVL94
 6147 0484 0100     		.2byte	0x1
 6148 0486 54       		.byte	0x54
 6149 0487 00000000 		.4byte	0
 6150 048b 00000000 		.4byte	0
 6151              	.LLST32:
 6152 048f 00000000 		.4byte	.LVL95
 6153 0493 05000000 		.4byte	.LVL96-1
 6154 0497 0100     		.2byte	0x1
 6155 0499 50       		.byte	0x50
 6156 049a 05000000 		.4byte	.LVL96-1
 6157 049e 08000000 		.4byte	.LFE13
 6158 04a2 0400     		.2byte	0x4
 6159 04a4 F3       		.byte	0xf3
 6160 04a5 01       		.uleb128 0x1
 6161 04a6 50       		.byte	0x50
 6162 04a7 9F       		.byte	0x9f
 6163 04a8 00000000 		.4byte	0
 6164 04ac 00000000 		.4byte	0
 6165              	.LLST33:
 6166 04b0 00000000 		.4byte	.LVL97
 6167 04b4 08000000 		.4byte	.LVL98
 6168 04b8 0100     		.2byte	0x1
 6169 04ba 50       		.byte	0x50
 6170 04bb 08000000 		.4byte	.LVL98
 6171 04bf 0A000000 		.4byte	.LVL99
 6172 04c3 0300     		.2byte	0x3
 6173 04c5 70       		.byte	0x70
 6174 04c6 01       		.sleb128 1
 6175 04c7 9F       		.byte	0x9f
 6176 04c8 0A000000 		.4byte	.LVL99
 6177 04cc 30000000 		.4byte	.LFE14
 6178 04d0 0400     		.2byte	0x4
 6179 04d2 F3       		.byte	0xf3
 6180 04d3 01       		.uleb128 0x1
 6181 04d4 50       		.byte	0x50
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 172


 6182 04d5 9F       		.byte	0x9f
 6183 04d6 00000000 		.4byte	0
 6184 04da 00000000 		.4byte	0
 6185              	.LLST34:
 6186 04de 00000000 		.4byte	.LVL100
 6187 04e2 0A000000 		.4byte	.LVL104
 6188 04e6 0100     		.2byte	0x1
 6189 04e8 50       		.byte	0x50
 6190 04e9 0A000000 		.4byte	.LVL104
 6191 04ed 0C000000 		.4byte	.LVL105
 6192 04f1 0300     		.2byte	0x3
 6193 04f3 70       		.byte	0x70
 6194 04f4 01       		.sleb128 1
 6195 04f5 9F       		.byte	0x9f
 6196 04f6 0C000000 		.4byte	.LVL105
 6197 04fa 14000000 		.4byte	.LFE15
 6198 04fe 0400     		.2byte	0x4
 6199 0500 F3       		.byte	0xf3
 6200 0501 01       		.uleb128 0x1
 6201 0502 50       		.byte	0x50
 6202 0503 9F       		.byte	0x9f
 6203 0504 00000000 		.4byte	0
 6204 0508 00000000 		.4byte	0
 6205              	.LLST35:
 6206 050c 04000000 		.4byte	.LVL101
 6207 0510 06000000 		.4byte	.LVL102
 6208 0514 0100     		.2byte	0x1
 6209 0516 53       		.byte	0x53
 6210 0517 08000000 		.4byte	.LVL103
 6211 051b 0C000000 		.4byte	.LVL105
 6212 051f 0100     		.2byte	0x1
 6213 0521 53       		.byte	0x53
 6214 0522 0C000000 		.4byte	.LVL105
 6215 0526 14000000 		.4byte	.LFE15
 6216 052a 0100     		.2byte	0x1
 6217 052c 50       		.byte	0x50
 6218 052d 00000000 		.4byte	0
 6219 0531 00000000 		.4byte	0
 6220              	.LLST36:
 6221 0535 00000000 		.4byte	.LVL106
 6222 0539 06000000 		.4byte	.LVL107
 6223 053d 0100     		.2byte	0x1
 6224 053f 50       		.byte	0x50
 6225 0540 06000000 		.4byte	.LVL107
 6226 0544 10000000 		.4byte	.LVL110
 6227 0548 0100     		.2byte	0x1
 6228 054a 54       		.byte	0x54
 6229 054b 10000000 		.4byte	.LVL110
 6230 054f 12000000 		.4byte	.LFE16
 6231 0553 0400     		.2byte	0x4
 6232 0555 F3       		.byte	0xf3
 6233 0556 01       		.uleb128 0x1
 6234 0557 50       		.byte	0x50
 6235 0558 9F       		.byte	0x9f
 6236 0559 00000000 		.4byte	0
 6237 055d 00000000 		.4byte	0
 6238              	.LLST37:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 173


 6239 0561 00000000 		.4byte	.LVL106
 6240 0565 09000000 		.4byte	.LVL108-1
 6241 0569 0100     		.2byte	0x1
 6242 056b 51       		.byte	0x51
 6243 056c 09000000 		.4byte	.LVL108-1
 6244 0570 12000000 		.4byte	.LFE16
 6245 0574 0400     		.2byte	0x4
 6246 0576 F3       		.byte	0xf3
 6247 0577 01       		.uleb128 0x1
 6248 0578 51       		.byte	0x51
 6249 0579 9F       		.byte	0x9f
 6250 057a 00000000 		.4byte	0
 6251 057e 00000000 		.4byte	0
 6252              	.LLST38:
 6253 0582 00000000 		.4byte	.LVL111
 6254 0586 0A000000 		.4byte	.LVL113
 6255 058a 0100     		.2byte	0x1
 6256 058c 50       		.byte	0x50
 6257 058d 0A000000 		.4byte	.LVL113
 6258 0591 0C000000 		.4byte	.LVL114
 6259 0595 0100     		.2byte	0x1
 6260 0597 53       		.byte	0x53
 6261 0598 0C000000 		.4byte	.LVL114
 6262 059c 0E000000 		.4byte	.LVL115
 6263 05a0 0100     		.2byte	0x1
 6264 05a2 50       		.byte	0x50
 6265 05a3 0E000000 		.4byte	.LVL115
 6266 05a7 19000000 		.4byte	.LVL117-1
 6267 05ab 0100     		.2byte	0x1
 6268 05ad 53       		.byte	0x53
 6269 05ae 19000000 		.4byte	.LVL117-1
 6270 05b2 1C000000 		.4byte	.LFE17
 6271 05b6 0400     		.2byte	0x4
 6272 05b8 F3       		.byte	0xf3
 6273 05b9 01       		.uleb128 0x1
 6274 05ba 50       		.byte	0x50
 6275 05bb 9F       		.byte	0x9f
 6276 05bc 00000000 		.4byte	0
 6277 05c0 00000000 		.4byte	0
 6278              	.LLST39:
 6279 05c4 04000000 		.4byte	.LVL112
 6280 05c8 0E000000 		.4byte	.LVL115
 6281 05cc 0200     		.2byte	0x2
 6282 05ce 30       		.byte	0x30
 6283 05cf 9F       		.byte	0x9f
 6284 05d0 0E000000 		.4byte	.LVL115
 6285 05d4 16000000 		.4byte	.LVL116
 6286 05d8 0100     		.2byte	0x1
 6287 05da 50       		.byte	0x50
 6288 05db 1A000000 		.4byte	.LVL117
 6289 05df 1C000000 		.4byte	.LFE17
 6290 05e3 0100     		.2byte	0x1
 6291 05e5 50       		.byte	0x50
 6292 05e6 00000000 		.4byte	0
 6293 05ea 00000000 		.4byte	0
 6294              	.LLST40:
 6295 05ee 02000000 		.4byte	.LVL118
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 174


 6296 05f2 08000000 		.4byte	.LVL119
 6297 05f6 0200     		.2byte	0x2
 6298 05f8 30       		.byte	0x30
 6299 05f9 9F       		.byte	0x9f
 6300 05fa 08000000 		.4byte	.LVL119
 6301 05fe 18000000 		.4byte	.LVL124
 6302 0602 0100     		.2byte	0x1
 6303 0604 55       		.byte	0x55
 6304 0605 18000000 		.4byte	.LVL124
 6305 0609 1A000000 		.4byte	.LFE18
 6306 060d 0100     		.2byte	0x1
 6307 060f 50       		.byte	0x50
 6308 0610 00000000 		.4byte	0
 6309 0614 00000000 		.4byte	0
 6310              	.LLST41:
 6311 0618 02000000 		.4byte	.LVL118
 6312 061c 08000000 		.4byte	.LVL119
 6313 0620 0200     		.2byte	0x2
 6314 0622 30       		.byte	0x30
 6315 0623 9F       		.byte	0x9f
 6316 0624 08000000 		.4byte	.LVL119
 6317 0628 18000000 		.4byte	.LVL123
 6318 062c 0100     		.2byte	0x1
 6319 062e 54       		.byte	0x54
 6320 062f 00000000 		.4byte	0
 6321 0633 00000000 		.4byte	0
 6322              	.LLST42:
 6323 0637 00000000 		.4byte	.LVL125
 6324 063b 02000000 		.4byte	.LVL126
 6325 063f 0100     		.2byte	0x1
 6326 0641 50       		.byte	0x50
 6327 0642 02000000 		.4byte	.LVL126
 6328 0646 10000000 		.4byte	.LFE25
 6329 064a 0400     		.2byte	0x4
 6330 064c F3       		.byte	0xf3
 6331 064d 01       		.uleb128 0x1
 6332 064e 50       		.byte	0x50
 6333 064f 9F       		.byte	0x9f
 6334 0650 00000000 		.4byte	0
 6335 0654 00000000 		.4byte	0
 6336              	.LLST43:
 6337 0658 00000000 		.4byte	.LVL129
 6338 065c 12000000 		.4byte	.LVL130
 6339 0660 0100     		.2byte	0x1
 6340 0662 50       		.byte	0x50
 6341 0663 12000000 		.4byte	.LVL130
 6342 0667 1A000000 		.4byte	.LVL131
 6343 066b 0400     		.2byte	0x4
 6344 066d F3       		.byte	0xf3
 6345 066e 01       		.uleb128 0x1
 6346 066f 50       		.byte	0x50
 6347 0670 9F       		.byte	0x9f
 6348 0671 1A000000 		.4byte	.LVL131
 6349 0675 1C000000 		.4byte	.LVL132
 6350 0679 0100     		.2byte	0x1
 6351 067b 50       		.byte	0x50
 6352 067c 1C000000 		.4byte	.LVL132
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 175


 6353 0680 24000000 		.4byte	.LFE26
 6354 0684 0400     		.2byte	0x4
 6355 0686 F3       		.byte	0xf3
 6356 0687 01       		.uleb128 0x1
 6357 0688 50       		.byte	0x50
 6358 0689 9F       		.byte	0x9f
 6359 068a 00000000 		.4byte	0
 6360 068e 00000000 		.4byte	0
 6361              	.LLST44:
 6362 0692 20000000 		.4byte	.LVL133
 6363 0696 22000000 		.4byte	.LVL134
 6364 069a 0100     		.2byte	0x1
 6365 069c 50       		.byte	0x50
 6366 069d 00000000 		.4byte	0
 6367 06a1 00000000 		.4byte	0
 6368              	.LLST45:
 6369 06a5 00000000 		.4byte	.LVL135
 6370 06a9 07000000 		.4byte	.LVL136-1
 6371 06ad 0100     		.2byte	0x1
 6372 06af 50       		.byte	0x50
 6373 06b0 07000000 		.4byte	.LVL136-1
 6374 06b4 3A000000 		.4byte	.LFE22
 6375 06b8 0400     		.2byte	0x4
 6376 06ba F3       		.byte	0xf3
 6377 06bb 01       		.uleb128 0x1
 6378 06bc 50       		.byte	0x50
 6379 06bd 9F       		.byte	0x9f
 6380 06be 00000000 		.4byte	0
 6381 06c2 00000000 		.4byte	0
 6382              	.LLST46:
 6383 06c6 00000000 		.4byte	.LVL135
 6384 06ca 07000000 		.4byte	.LVL136-1
 6385 06ce 0100     		.2byte	0x1
 6386 06d0 51       		.byte	0x51
 6387 06d1 07000000 		.4byte	.LVL136-1
 6388 06d5 38000000 		.4byte	.LVL150
 6389 06d9 0100     		.2byte	0x1
 6390 06db 56       		.byte	0x56
 6391 06dc 38000000 		.4byte	.LVL150
 6392 06e0 3A000000 		.4byte	.LFE22
 6393 06e4 0400     		.2byte	0x4
 6394 06e6 F3       		.byte	0xf3
 6395 06e7 01       		.uleb128 0x1
 6396 06e8 51       		.byte	0x51
 6397 06e9 9F       		.byte	0x9f
 6398 06ea 00000000 		.4byte	0
 6399 06ee 00000000 		.4byte	0
 6400              	.LLST47:
 6401 06f2 1C000000 		.4byte	.LVL142
 6402 06f6 20000000 		.4byte	.LVL143
 6403 06fa 0100     		.2byte	0x1
 6404 06fc 50       		.byte	0x50
 6405 06fd 20000000 		.4byte	.LVL143
 6406 0701 38000000 		.4byte	.LVL148
 6407 0705 0100     		.2byte	0x1
 6408 0707 54       		.byte	0x54
 6409 0708 00000000 		.4byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 176


 6410 070c 00000000 		.4byte	0
 6411              	.LLST48:
 6412 0710 30000000 		.4byte	.LVL146
 6413 0714 32000000 		.4byte	.LVL147
 6414 0718 0100     		.2byte	0x1
 6415 071a 50       		.byte	0x50
 6416 071b 00000000 		.4byte	0
 6417 071f 00000000 		.4byte	0
 6418              	.LLST49:
 6419 0723 14000000 		.4byte	.LVL139
 6420 0727 16000000 		.4byte	.LVL140
 6421 072b 0100     		.2byte	0x1
 6422 072d 50       		.byte	0x50
 6423 072e 16000000 		.4byte	.LVL140
 6424 0732 19000000 		.4byte	.LVL141-1
 6425 0736 0100     		.2byte	0x1
 6426 0738 51       		.byte	0x51
 6427 0739 00000000 		.4byte	0
 6428 073d 00000000 		.4byte	0
 6429              	.LLST50:
 6430 0741 0A000000 		.4byte	.LVL137
 6431 0745 11000000 		.4byte	.LVL138-1
 6432 0749 0100     		.2byte	0x1
 6433 074b 50       		.byte	0x50
 6434 074c 11000000 		.4byte	.LVL138-1
 6435 0750 38000000 		.4byte	.LVL149
 6436 0754 0100     		.2byte	0x1
 6437 0756 55       		.byte	0x55
 6438 0757 00000000 		.4byte	0
 6439 075b 00000000 		.4byte	0
 6440              	.LLST51:
 6441 075f 00000000 		.4byte	.LVL151
 6442 0763 1C000000 		.4byte	.LVL157
 6443 0767 0100     		.2byte	0x1
 6444 0769 50       		.byte	0x50
 6445 076a 1C000000 		.4byte	.LVL157
 6446 076e 30010000 		.4byte	.LVL192
 6447 0772 0100     		.2byte	0x1
 6448 0774 55       		.byte	0x55
 6449 0775 30010000 		.4byte	.LVL192
 6450 0779 60010000 		.4byte	.LFE19
 6451 077d 0400     		.2byte	0x4
 6452 077f F3       		.byte	0xf3
 6453 0780 01       		.uleb128 0x1
 6454 0781 50       		.byte	0x50
 6455 0782 9F       		.byte	0x9f
 6456 0783 00000000 		.4byte	0
 6457 0787 00000000 		.4byte	0
 6458              	.LLST52:
 6459 078b 0A000000 		.4byte	.LVL152
 6460 078f F8000000 		.4byte	.LVL184
 6461 0793 0200     		.2byte	0x2
 6462 0795 30       		.byte	0x30
 6463 0796 9F       		.byte	0x9f
 6464 0797 F8000000 		.4byte	.LVL184
 6465 079b 2E010000 		.4byte	.LVL190
 6466 079f 0100     		.2byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 177


 6467 07a1 56       		.byte	0x56
 6468 07a2 2E010000 		.4byte	.LVL190
 6469 07a6 60010000 		.4byte	.LFE19
 6470 07aa 0100     		.2byte	0x1
 6471 07ac 50       		.byte	0x50
 6472 07ad 00000000 		.4byte	0
 6473 07b1 00000000 		.4byte	0
 6474              	.LLST53:
 6475 07b5 84000000 		.4byte	.LVL169
 6476 07b9 8E000000 		.4byte	.LVL170
 6477 07bd 0200     		.2byte	0x2
 6478 07bf 30       		.byte	0x30
 6479 07c0 9F       		.byte	0x9f
 6480 07c1 8E000000 		.4byte	.LVL170
 6481 07c5 B8000000 		.4byte	.LVL177
 6482 07c9 0100     		.2byte	0x1
 6483 07cb 52       		.byte	0x52
 6484 07cc 00000000 		.4byte	0
 6485 07d0 00000000 		.4byte	0
 6486              	.LLST54:
 6487 07d4 22000000 		.4byte	.LVL159
 6488 07d8 24000000 		.4byte	.LVL160
 6489 07dc 0100     		.2byte	0x1
 6490 07de 50       		.byte	0x50
 6491 07df 24000000 		.4byte	.LVL160
 6492 07e3 C2000000 		.4byte	.LVL178
 6493 07e7 0100     		.2byte	0x1
 6494 07e9 58       		.byte	0x58
 6495 07ea 00000000 		.4byte	0
 6496 07ee 00000000 		.4byte	0
 6497              	.LLST55:
 6498 07f2 22000000 		.4byte	.LVL159
 6499 07f6 3A000000 		.4byte	.LVL163
 6500 07fa 0400     		.2byte	0x4
 6501 07fc 0A       		.byte	0xa
 6502 07fd A00F     		.2byte	0xfa0
 6503 07ff 9F       		.byte	0x9f
 6504 0800 3A000000 		.4byte	.LVL163
 6505 0804 40000000 		.4byte	.LVL164
 6506 0808 0100     		.2byte	0x1
 6507 080a 50       		.byte	0x50
 6508 080b 40000000 		.4byte	.LVL164
 6509 080f 47000000 		.4byte	.LVL165-1
 6510 0813 0400     		.2byte	0x4
 6511 0815 70       		.byte	0x70
 6512 0816 9978     		.sleb128 -999
 6513 0818 9F       		.byte	0x9f
 6514 0819 4A000000 		.4byte	.LVL166
 6515 081d 50000000 		.4byte	.LVL167
 6516 0821 0100     		.2byte	0x1
 6517 0823 50       		.byte	0x50
 6518 0824 50000000 		.4byte	.LVL167
 6519 0828 F4000000 		.4byte	.LVL182
 6520 082c 0100     		.2byte	0x1
 6521 082e 56       		.byte	0x56
 6522 082f F6000000 		.4byte	.LVL183
 6523 0833 F8000000 		.4byte	.LVL184
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 178


 6524 0837 0100     		.2byte	0x1
 6525 0839 56       		.byte	0x56
 6526 083a 00000000 		.4byte	0
 6527 083e 00000000 		.4byte	0
 6528              	.LLST56:
 6529 0842 2A000000 		.4byte	.LVL161
 6530 0846 2F000000 		.4byte	.LVL162-1
 6531 084a 0100     		.2byte	0x1
 6532 084c 50       		.byte	0x50
 6533 084d 2F000000 		.4byte	.LVL162-1
 6534 0851 30000000 		.4byte	.LVL162
 6535 0855 0700     		.2byte	0x7
 6536 0857 78       		.byte	0x78
 6537 0858 00       		.sleb128 0
 6538 0859 0A       		.byte	0xa
 6539 085a E803     		.2byte	0x3e8
 6540 085c 1E       		.byte	0x1e
 6541 085d 9F       		.byte	0x9f
 6542 085e 30000000 		.4byte	.LVL162
 6543 0862 3A000000 		.4byte	.LVL163
 6544 0866 0100     		.2byte	0x1
 6545 0868 50       		.byte	0x50
 6546 0869 00000000 		.4byte	0
 6547 086d 00000000 		.4byte	0
 6548              	.LLST57:
 6549 0871 0A000000 		.4byte	.LVL152
 6550 0875 8E000000 		.4byte	.LVL170
 6551 0879 0200     		.2byte	0x2
 6552 087b 30       		.byte	0x30
 6553 087c 9F       		.byte	0x9f
 6554 087d 8E000000 		.4byte	.LVL170
 6555 0881 98000000 		.4byte	.LVL172
 6556 0885 0100     		.2byte	0x1
 6557 0887 5C       		.byte	0x5c
 6558 0888 98000000 		.4byte	.LVL172
 6559 088c 9A000000 		.4byte	.LVL173
 6560 0890 0100     		.2byte	0x1
 6561 0892 51       		.byte	0x51
 6562 0893 9A000000 		.4byte	.LVL173
 6563 0897 D5000000 		.4byte	.LVL180-1
 6564 089b 0100     		.2byte	0x1
 6565 089d 5C       		.byte	0x5c
 6566 089e 00000000 		.4byte	0
 6567 08a2 00000000 		.4byte	0
 6568              	.LLST58:
 6569 08a6 0A000000 		.4byte	.LVL152
 6570 08aa DE000000 		.4byte	.LVL181
 6571 08ae 0200     		.2byte	0x2
 6572 08b0 30       		.byte	0x30
 6573 08b1 9F       		.byte	0x9f
 6574 08b2 DE000000 		.4byte	.LVL181
 6575 08b6 FC000000 		.4byte	.LVL185
 6576 08ba 0100     		.2byte	0x1
 6577 08bc 50       		.byte	0x50
 6578 08bd FC000000 		.4byte	.LVL185
 6579 08c1 FF000000 		.4byte	.LVL186-1
 6580 08c5 0200     		.2byte	0x2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 179


 6581 08c7 77       		.byte	0x77
 6582 08c8 00       		.sleb128 0
 6583 08c9 00000000 		.4byte	0
 6584 08cd 00000000 		.4byte	0
 6585              	.LLST59:
 6586 08d1 0A000000 		.4byte	.LVL152
 6587 08d5 8E000000 		.4byte	.LVL170
 6588 08d9 0200     		.2byte	0x2
 6589 08db 30       		.byte	0x30
 6590 08dc 9F       		.byte	0x9f
 6591 08dd 8E000000 		.4byte	.LVL170
 6592 08e1 94000000 		.4byte	.LVL171
 6593 08e5 0100     		.2byte	0x1
 6594 08e7 51       		.byte	0x51
 6595 08e8 94000000 		.4byte	.LVL171
 6596 08ec 9A000000 		.4byte	.LVL173
 6597 08f0 0100     		.2byte	0x1
 6598 08f2 53       		.byte	0x53
 6599 08f3 9A000000 		.4byte	.LVL173
 6600 08f7 D2000000 		.4byte	.LVL179
 6601 08fb 0100     		.2byte	0x1
 6602 08fd 51       		.byte	0x51
 6603 08fe 00000000 		.4byte	0
 6604 0902 00000000 		.4byte	0
 6605              	.LLST60:
 6606 0906 10000000 		.4byte	.LVL153
 6607 090a 16000000 		.4byte	.LVL156
 6608 090e 0100     		.2byte	0x1
 6609 0910 53       		.byte	0x53
 6610 0911 00000000 		.4byte	0
 6611 0915 00000000 		.4byte	0
 6612              	.LLST61:
 6613 0919 12000000 		.4byte	.LVL154
 6614 091d 30010000 		.4byte	.LVL191
 6615 0921 0100     		.2byte	0x1
 6616 0923 54       		.byte	0x54
 6617 0924 00000000 		.4byte	0
 6618 0928 00000000 		.4byte	0
 6619              	.LLST62:
 6620 092c 14000000 		.4byte	.LVL155
 6621 0930 AE000000 		.4byte	.LVL176
 6622 0934 0100     		.2byte	0x1
 6623 0936 57       		.byte	0x57
 6624 0937 00000000 		.4byte	0
 6625 093b 00000000 		.4byte	0
 6626              	.LLST63:
 6627 093f 02000000 		.4byte	.LVL193
 6628 0943 08000000 		.4byte	.LVL194
 6629 0947 0200     		.2byte	0x2
 6630 0949 30       		.byte	0x30
 6631 094a 9F       		.byte	0x9f
 6632 094b 08000000 		.4byte	.LVL194
 6633 094f 18000000 		.4byte	.LVL199
 6634 0953 0100     		.2byte	0x1
 6635 0955 55       		.byte	0x55
 6636 0956 18000000 		.4byte	.LVL199
 6637 095a 1A000000 		.4byte	.LFE20
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 180


 6638 095e 0100     		.2byte	0x1
 6639 0960 50       		.byte	0x50
 6640 0961 00000000 		.4byte	0
 6641 0965 00000000 		.4byte	0
 6642              	.LLST64:
 6643 0969 02000000 		.4byte	.LVL193
 6644 096d 08000000 		.4byte	.LVL194
 6645 0971 0200     		.2byte	0x2
 6646 0973 30       		.byte	0x30
 6647 0974 9F       		.byte	0x9f
 6648 0975 08000000 		.4byte	.LVL194
 6649 0979 18000000 		.4byte	.LVL198
 6650 097d 0100     		.2byte	0x1
 6651 097f 54       		.byte	0x54
 6652 0980 00000000 		.4byte	0
 6653 0984 00000000 		.4byte	0
 6654              	.LLST65:
 6655 0988 02000000 		.4byte	.LVL200
 6656 098c 06000000 		.4byte	.LVL201
 6657 0990 0200     		.2byte	0x2
 6658 0992 30       		.byte	0x30
 6659 0993 9F       		.byte	0x9f
 6660 0994 06000000 		.4byte	.LVL201
 6661 0998 1A000000 		.4byte	.LVL205
 6662 099c 0100     		.2byte	0x1
 6663 099e 54       		.byte	0x54
 6664 099f 00000000 		.4byte	0
 6665 09a3 00000000 		.4byte	0
 6666              	.LLST66:
 6667 09a7 0E000000 		.4byte	.LVL202
 6668 09ab 13000000 		.4byte	.LVL203-1
 6669 09af 0100     		.2byte	0x1
 6670 09b1 51       		.byte	0x51
 6671 09b2 00000000 		.4byte	0
 6672 09b6 00000000 		.4byte	0
 6673              	.LLST67:
 6674 09ba 00000000 		.4byte	.LVL206
 6675 09be 37000000 		.4byte	.LVL211-1
 6676 09c2 0100     		.2byte	0x1
 6677 09c4 50       		.byte	0x50
 6678 09c5 37000000 		.4byte	.LVL211-1
 6679 09c9 42000000 		.4byte	.LVL214
 6680 09cd 0200     		.2byte	0x2
 6681 09cf 91       		.byte	0x91
 6682 09d0 54       		.sleb128 -44
 6683 09d1 42000000 		.4byte	.LVL214
 6684 09d5 D4000000 		.4byte	.LFE27
 6685 09d9 0400     		.2byte	0x4
 6686 09db F3       		.byte	0xf3
 6687 09dc 01       		.uleb128 0x1
 6688 09dd 50       		.byte	0x50
 6689 09de 9F       		.byte	0x9f
 6690 09df 00000000 		.4byte	0
 6691 09e3 00000000 		.4byte	0
 6692              	.LLST68:
 6693 09e7 1C000000 		.4byte	.LVL207
 6694 09eb 2A000000 		.4byte	.LVL209
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 181


 6695 09ef 0100     		.2byte	0x1
 6696 09f1 54       		.byte	0x54
 6697 09f2 2A000000 		.4byte	.LVL209
 6698 09f6 42000000 		.4byte	.LVL214
 6699 09fa 0200     		.2byte	0x2
 6700 09fc 7D       		.byte	0x7d
 6701 09fd 00       		.sleb128 0
 6702 09fe 00000000 		.4byte	0
 6703 0a02 00000000 		.4byte	0
 6704              	.LLST69:
 6705 0a06 28000000 		.4byte	.LVL208
 6706 0a0a 37000000 		.4byte	.LVL211-1
 6707 0a0e 0100     		.2byte	0x1
 6708 0a10 52       		.byte	0x52
 6709 0a11 37000000 		.4byte	.LVL211-1
 6710 0a15 B2000000 		.4byte	.LVL243
 6711 0a19 0100     		.2byte	0x1
 6712 0a1b 59       		.byte	0x59
 6713 0a1c 00000000 		.4byte	0
 6714 0a20 00000000 		.4byte	0
 6715              	.LLST70:
 6716 0a24 34000000 		.4byte	.LVL210
 6717 0a28 5E000000 		.4byte	.LVL222
 6718 0a2c 0100     		.2byte	0x1
 6719 0a2e 55       		.byte	0x55
 6720 0a2f 5E000000 		.4byte	.LVL222
 6721 0a33 B2000000 		.4byte	.LVL244
 6722 0a37 0100     		.2byte	0x1
 6723 0a39 5B       		.byte	0x5b
 6724 0a3a 00000000 		.4byte	0
 6725 0a3e 00000000 		.4byte	0
 6726              	.LLST71:
 6727 0a42 3A000000 		.4byte	.LVL212
 6728 0a46 45000000 		.4byte	.LVL215-1
 6729 0a4a 0100     		.2byte	0x1
 6730 0a4c 53       		.byte	0x53
 6731 0a4d 4C000000 		.4byte	.LVL217
 6732 0a51 55000000 		.4byte	.LVL219-1
 6733 0a55 0100     		.2byte	0x1
 6734 0a57 53       		.byte	0x53
 6735 0a58 5C000000 		.4byte	.LVL221
 6736 0a5c 6B000000 		.4byte	.LVL225-1
 6737 0a60 0100     		.2byte	0x1
 6738 0a62 53       		.byte	0x53
 6739 0a63 7A000000 		.4byte	.LVL228
 6740 0a67 7C000000 		.4byte	.LVL229
 6741 0a6b 0100     		.2byte	0x1
 6742 0a6d 53       		.byte	0x53
 6743 0a6e 7C000000 		.4byte	.LVL229
 6744 0a72 8C000000 		.4byte	.LVL233
 6745 0a76 0100     		.2byte	0x1
 6746 0a78 55       		.byte	0x55
 6747 0a79 8C000000 		.4byte	.LVL233
 6748 0a7d 99000000 		.4byte	.LVL236-1
 6749 0a81 0100     		.2byte	0x1
 6750 0a83 53       		.byte	0x53
 6751 0a84 A0000000 		.4byte	.LVL238
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 182


 6752 0a88 A6000000 		.4byte	.LVL239
 6753 0a8c 0100     		.2byte	0x1
 6754 0a8e 53       		.byte	0x53
 6755 0a8f A6000000 		.4byte	.LVL239
 6756 0a93 AA000000 		.4byte	.LVL240
 6757 0a97 0100     		.2byte	0x1
 6758 0a99 52       		.byte	0x52
 6759 0a9a AA000000 		.4byte	.LVL240
 6760 0a9e B2000000 		.4byte	.LVL242
 6761 0aa2 0100     		.2byte	0x1
 6762 0aa4 54       		.byte	0x54
 6763 0aa5 00000000 		.4byte	0
 6764 0aa9 00000000 		.4byte	0
 6765              	.LLST72:
 6766 0aad 38000000 		.4byte	.LVL211
 6767 0ab1 45000000 		.4byte	.LVL215-1
 6768 0ab5 0100     		.2byte	0x1
 6769 0ab7 50       		.byte	0x50
 6770 0ab8 4A000000 		.4byte	.LVL216
 6771 0abc 55000000 		.4byte	.LVL219-1
 6772 0ac0 0100     		.2byte	0x1
 6773 0ac2 50       		.byte	0x50
 6774 0ac3 5A000000 		.4byte	.LVL220
 6775 0ac7 6B000000 		.4byte	.LVL225-1
 6776 0acb 0100     		.2byte	0x1
 6777 0acd 50       		.byte	0x50
 6778 0ace 78000000 		.4byte	.LVL227
 6779 0ad2 85000000 		.4byte	.LVL231-1
 6780 0ad6 0100     		.2byte	0x1
 6781 0ad8 50       		.byte	0x50
 6782 0ad9 8A000000 		.4byte	.LVL232
 6783 0add 99000000 		.4byte	.LVL236-1
 6784 0ae1 0100     		.2byte	0x1
 6785 0ae3 50       		.byte	0x50
 6786 0ae4 9E000000 		.4byte	.LVL237
 6787 0ae8 AF000000 		.4byte	.LVL241-1
 6788 0aec 0100     		.2byte	0x1
 6789 0aee 50       		.byte	0x50
 6790 0aef 00000000 		.4byte	0
 6791 0af3 00000000 		.4byte	0
 6792              	.LLST73:
 6793 0af7 00000000 		.4byte	.LVL245
 6794 0afb 12000000 		.4byte	.LVL247
 6795 0aff 0100     		.2byte	0x1
 6796 0b01 50       		.byte	0x50
 6797 0b02 12000000 		.4byte	.LVL247
 6798 0b06 20000000 		.4byte	.LFE28
 6799 0b0a 0400     		.2byte	0x4
 6800 0b0c F3       		.byte	0xf3
 6801 0b0d 01       		.uleb128 0x1
 6802 0b0e 50       		.byte	0x50
 6803 0b0f 9F       		.byte	0x9f
 6804 0b10 00000000 		.4byte	0
 6805 0b14 00000000 		.4byte	0
 6806              	.LLST74:
 6807 0b18 00000000 		.4byte	.LVL245
 6808 0b1c 15000000 		.4byte	.LVL248-1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 183


 6809 0b20 0100     		.2byte	0x1
 6810 0b22 51       		.byte	0x51
 6811 0b23 15000000 		.4byte	.LVL248-1
 6812 0b27 20000000 		.4byte	.LFE28
 6813 0b2b 0400     		.2byte	0x4
 6814 0b2d F3       		.byte	0xf3
 6815 0b2e 01       		.uleb128 0x1
 6816 0b2f 51       		.byte	0x51
 6817 0b30 9F       		.byte	0x9f
 6818 0b31 00000000 		.4byte	0
 6819 0b35 00000000 		.4byte	0
 6820              	.LLST75:
 6821 0b39 02000000 		.4byte	.LVL246
 6822 0b3d 16000000 		.4byte	.LVL248
 6823 0b41 0200     		.2byte	0x2
 6824 0b43 30       		.byte	0x30
 6825 0b44 9F       		.byte	0x9f
 6826 0b45 16000000 		.4byte	.LVL248
 6827 0b49 18000000 		.4byte	.LVL249
 6828 0b4d 0200     		.2byte	0x2
 6829 0b4f 31       		.byte	0x31
 6830 0b50 9F       		.byte	0x9f
 6831 0b51 18000000 		.4byte	.LVL249
 6832 0b55 20000000 		.4byte	.LFE28
 6833 0b59 0100     		.2byte	0x1
 6834 0b5b 50       		.byte	0x50
 6835 0b5c 00000000 		.4byte	0
 6836 0b60 00000000 		.4byte	0
 6837              	.LLST76:
 6838 0b64 00000000 		.4byte	.LVL250
 6839 0b68 0B000000 		.4byte	.LVL251-1
 6840 0b6c 0100     		.2byte	0x1
 6841 0b6e 50       		.byte	0x50
 6842 0b6f 0B000000 		.4byte	.LVL251-1
 6843 0b73 1A000000 		.4byte	.LVL254
 6844 0b77 0100     		.2byte	0x1
 6845 0b79 55       		.byte	0x55
 6846 0b7a 1A000000 		.4byte	.LVL254
 6847 0b7e 1C000000 		.4byte	.LFE29
 6848 0b82 0400     		.2byte	0x4
 6849 0b84 F3       		.byte	0xf3
 6850 0b85 01       		.uleb128 0x1
 6851 0b86 50       		.byte	0x50
 6852 0b87 9F       		.byte	0x9f
 6853 0b88 00000000 		.4byte	0
 6854 0b8c 00000000 		.4byte	0
 6855              	.LLST77:
 6856 0b90 00000000 		.4byte	.LVL250
 6857 0b94 0B000000 		.4byte	.LVL251-1
 6858 0b98 0100     		.2byte	0x1
 6859 0b9a 51       		.byte	0x51
 6860 0b9b 0B000000 		.4byte	.LVL251-1
 6861 0b9f 1A000000 		.4byte	.LVL255
 6862 0ba3 0100     		.2byte	0x1
 6863 0ba5 56       		.byte	0x56
 6864 0ba6 1A000000 		.4byte	.LVL255
 6865 0baa 1C000000 		.4byte	.LFE29
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 184


 6866 0bae 0400     		.2byte	0x4
 6867 0bb0 F3       		.byte	0xf3
 6868 0bb1 01       		.uleb128 0x1
 6869 0bb2 51       		.byte	0x51
 6870 0bb3 9F       		.byte	0x9f
 6871 0bb4 00000000 		.4byte	0
 6872 0bb8 00000000 		.4byte	0
 6873              	.LLST78:
 6874 0bbc 00000000 		.4byte	.LVL250
 6875 0bc0 0B000000 		.4byte	.LVL251-1
 6876 0bc4 0100     		.2byte	0x1
 6877 0bc6 52       		.byte	0x52
 6878 0bc7 0B000000 		.4byte	.LVL251-1
 6879 0bcb 10000000 		.4byte	.LVL252
 6880 0bcf 0100     		.2byte	0x1
 6881 0bd1 54       		.byte	0x54
 6882 0bd2 10000000 		.4byte	.LVL252
 6883 0bd6 1C000000 		.4byte	.LFE29
 6884 0bda 0400     		.2byte	0x4
 6885 0bdc F3       		.byte	0xf3
 6886 0bdd 01       		.uleb128 0x1
 6887 0bde 52       		.byte	0x52
 6888 0bdf 9F       		.byte	0x9f
 6889 0be0 00000000 		.4byte	0
 6890 0be4 00000000 		.4byte	0
 6891              	.LLST79:
 6892 0be8 0C000000 		.4byte	.LVL251
 6893 0bec 19000000 		.4byte	.LVL253-1
 6894 0bf0 0100     		.2byte	0x1
 6895 0bf2 50       		.byte	0x50
 6896 0bf3 00000000 		.4byte	0
 6897 0bf7 00000000 		.4byte	0
 6898              	.LLST80:
 6899 0bfb 06000000 		.4byte	.LVL256
 6900 0bff 17000000 		.4byte	.LVL258-1
 6901 0c03 0100     		.2byte	0x1
 6902 0c05 53       		.byte	0x53
 6903 0c06 00000000 		.4byte	0
 6904 0c0a 00000000 		.4byte	0
 6905              	.LLST81:
 6906 0c0e 00000000 		.4byte	.LVL260
 6907 0c12 13000000 		.4byte	.LVL261-1
 6908 0c16 0100     		.2byte	0x1
 6909 0c18 50       		.byte	0x50
 6910 0c19 13000000 		.4byte	.LVL261-1
 6911 0c1d 3C000000 		.4byte	.LFE10
 6912 0c21 0400     		.2byte	0x4
 6913 0c23 F3       		.byte	0xf3
 6914 0c24 01       		.uleb128 0x1
 6915 0c25 50       		.byte	0x50
 6916 0c26 9F       		.byte	0x9f
 6917 0c27 00000000 		.4byte	0
 6918 0c2b 00000000 		.4byte	0
 6919              		.section	.debug_aranges,"",%progbits
 6920 0000 FC000000 		.4byte	0xfc
 6921 0004 0200     		.2byte	0x2
 6922 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 185


 6923 000a 04       		.byte	0x4
 6924 000b 00       		.byte	0
 6925 000c 0000     		.2byte	0
 6926 000e 0000     		.2byte	0
 6927 0010 00000000 		.4byte	.LFB23
 6928 0014 84000000 		.4byte	.LFE23-.LFB23
 6929 0018 00000000 		.4byte	.LFB24
 6930 001c 42000000 		.4byte	.LFE24-.LFB24
 6931 0020 00000000 		.4byte	.LFB1
 6932 0024 10000000 		.4byte	.LFE1-.LFB1
 6933 0028 00000000 		.4byte	.LFB2
 6934 002c 40000000 		.4byte	.LFE2-.LFB2
 6935 0030 00000000 		.4byte	.LFB3
 6936 0034 2C000000 		.4byte	.LFE3-.LFB3
 6937 0038 00000000 		.4byte	.LFB4
 6938 003c 48000000 		.4byte	.LFE4-.LFB4
 6939 0040 00000000 		.4byte	.LFB5
 6940 0044 54000000 		.4byte	.LFE5-.LFB5
 6941 0048 00000000 		.4byte	.LFB6
 6942 004c 2C000000 		.4byte	.LFE6-.LFB6
 6943 0050 00000000 		.4byte	.LFB8
 6944 0054 9C000000 		.4byte	.LFE8-.LFB8
 6945 0058 00000000 		.4byte	.LFB11
 6946 005c 80000000 		.4byte	.LFE11-.LFB11
 6947 0060 00000000 		.4byte	.LFB12
 6948 0064 78000000 		.4byte	.LFE12-.LFB12
 6949 0068 00000000 		.4byte	.LFB13
 6950 006c 08000000 		.4byte	.LFE13-.LFB13
 6951 0070 00000000 		.4byte	.LFB14
 6952 0074 30000000 		.4byte	.LFE14-.LFB14
 6953 0078 00000000 		.4byte	.LFB15
 6954 007c 14000000 		.4byte	.LFE15-.LFB15
 6955 0080 00000000 		.4byte	.LFB16
 6956 0084 12000000 		.4byte	.LFE16-.LFB16
 6957 0088 00000000 		.4byte	.LFB17
 6958 008c 1C000000 		.4byte	.LFE17-.LFB17
 6959 0090 00000000 		.4byte	.LFB18
 6960 0094 1A000000 		.4byte	.LFE18-.LFB18
 6961 0098 00000000 		.4byte	.LFB25
 6962 009c 10000000 		.4byte	.LFE25-.LFB25
 6963 00a0 00000000 		.4byte	.LFB26
 6964 00a4 24000000 		.4byte	.LFE26-.LFB26
 6965 00a8 00000000 		.4byte	.LFB22
 6966 00ac 3A000000 		.4byte	.LFE22-.LFB22
 6967 00b0 00000000 		.4byte	.LFB19
 6968 00b4 60010000 		.4byte	.LFE19-.LFB19
 6969 00b8 00000000 		.4byte	.LFB20
 6970 00bc 1A000000 		.4byte	.LFE20-.LFB20
 6971 00c0 00000000 		.4byte	.LFB21
 6972 00c4 20000000 		.4byte	.LFE21-.LFB21
 6973 00c8 00000000 		.4byte	.LFB27
 6974 00cc D4000000 		.4byte	.LFE27-.LFB27
 6975 00d0 00000000 		.4byte	.LFB28
 6976 00d4 20000000 		.4byte	.LFE28-.LFB28
 6977 00d8 00000000 		.4byte	.LFB29
 6978 00dc 1C000000 		.4byte	.LFE29-.LFB29
 6979 00e0 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 186


 6980 00e4 28000000 		.4byte	.LFE9-.LFB9
 6981 00e8 00000000 		.4byte	.LFB10
 6982 00ec 3C000000 		.4byte	.LFE10-.LFB10
 6983 00f0 00000000 		.4byte	.LFB7
 6984 00f4 2C000000 		.4byte	.LFE7-.LFB7
 6985 00f8 00000000 		.4byte	0
 6986 00fc 00000000 		.4byte	0
 6987              		.section	.debug_ranges,"",%progbits
 6988              	.Ldebug_ranges0:
 6989 0000 00000000 		.4byte	.LFB23
 6990 0004 84000000 		.4byte	.LFE23
 6991 0008 00000000 		.4byte	.LFB24
 6992 000c 42000000 		.4byte	.LFE24
 6993 0010 00000000 		.4byte	.LFB1
 6994 0014 10000000 		.4byte	.LFE1
 6995 0018 00000000 		.4byte	.LFB2
 6996 001c 40000000 		.4byte	.LFE2
 6997 0020 00000000 		.4byte	.LFB3
 6998 0024 2C000000 		.4byte	.LFE3
 6999 0028 00000000 		.4byte	.LFB4
 7000 002c 48000000 		.4byte	.LFE4
 7001 0030 00000000 		.4byte	.LFB5
 7002 0034 54000000 		.4byte	.LFE5
 7003 0038 00000000 		.4byte	.LFB6
 7004 003c 2C000000 		.4byte	.LFE6
 7005 0040 00000000 		.4byte	.LFB8
 7006 0044 9C000000 		.4byte	.LFE8
 7007 0048 00000000 		.4byte	.LFB11
 7008 004c 80000000 		.4byte	.LFE11
 7009 0050 00000000 		.4byte	.LFB12
 7010 0054 78000000 		.4byte	.LFE12
 7011 0058 00000000 		.4byte	.LFB13
 7012 005c 08000000 		.4byte	.LFE13
 7013 0060 00000000 		.4byte	.LFB14
 7014 0064 30000000 		.4byte	.LFE14
 7015 0068 00000000 		.4byte	.LFB15
 7016 006c 14000000 		.4byte	.LFE15
 7017 0070 00000000 		.4byte	.LFB16
 7018 0074 12000000 		.4byte	.LFE16
 7019 0078 00000000 		.4byte	.LFB17
 7020 007c 1C000000 		.4byte	.LFE17
 7021 0080 00000000 		.4byte	.LFB18
 7022 0084 1A000000 		.4byte	.LFE18
 7023 0088 00000000 		.4byte	.LFB25
 7024 008c 10000000 		.4byte	.LFE25
 7025 0090 00000000 		.4byte	.LFB26
 7026 0094 24000000 		.4byte	.LFE26
 7027 0098 00000000 		.4byte	.LFB22
 7028 009c 3A000000 		.4byte	.LFE22
 7029 00a0 00000000 		.4byte	.LFB19
 7030 00a4 60010000 		.4byte	.LFE19
 7031 00a8 00000000 		.4byte	.LFB20
 7032 00ac 1A000000 		.4byte	.LFE20
 7033 00b0 00000000 		.4byte	.LFB21
 7034 00b4 20000000 		.4byte	.LFE21
 7035 00b8 00000000 		.4byte	.LFB27
 7036 00bc D4000000 		.4byte	.LFE27
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 187


 7037 00c0 00000000 		.4byte	.LFB28
 7038 00c4 20000000 		.4byte	.LFE28
 7039 00c8 00000000 		.4byte	.LFB29
 7040 00cc 1C000000 		.4byte	.LFE29
 7041 00d0 00000000 		.4byte	.LFB9
 7042 00d4 28000000 		.4byte	.LFE9
 7043 00d8 00000000 		.4byte	.LFB10
 7044 00dc 3C000000 		.4byte	.LFE10
 7045 00e0 00000000 		.4byte	.LFB7
 7046 00e4 2C000000 		.4byte	.LFE7
 7047 00e8 00000000 		.4byte	0
 7048 00ec 00000000 		.4byte	0
 7049              		.section	.debug_line,"",%progbits
 7050              	.Ldebug_line0:
 7051 0000 6C060000 		.section	.debug_str,"MS",%progbits,1
 7051      0200E901 
 7051      00000201 
 7051      FB0E0D00 
 7051      01010101 
 7052              	.LASF74:
 7053 0000 62757474 		.ascii	"button12\000"
 7053      6F6E3132 
 7053      00
 7054              	.LASF75:
 7055 0009 62757474 		.ascii	"button13\000"
 7055      6F6E3133 
 7055      00
 7056              	.LASF76:
 7057 0012 62757474 		.ascii	"button14\000"
 7057      6F6E3134 
 7057      00
 7058              	.LASF77:
 7059 001b 62757474 		.ascii	"button15\000"
 7059      6F6E3135 
 7059      00
 7060              	.LASF78:
 7061 0024 62757474 		.ascii	"button16\000"
 7061      6F6E3136 
 7061      00
 7062              	.LASF79:
 7063 002d 62757474 		.ascii	"button17\000"
 7063      6F6E3137 
 7063      00
 7064              	.LASF80:
 7065 0036 62757474 		.ascii	"button18\000"
 7065      6F6E3138 
 7065      00
 7066              	.LASF81:
 7067 003f 62757474 		.ascii	"button19\000"
 7067      6F6E3139 
 7067      00
 7068              	.LASF201:
 7069 0048 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 7069      656E7365 
 7069      5F537343 
 7069      53444765 
 7069      74436F6C 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 188


 7070              	.LASF175:
 7071 006a 73656E73 		.ascii	"sensorElement\000"
 7071      6F72456C 
 7071      656D656E 
 7071      7400
 7072              	.LASF215:
 7073 0078 6D617843 		.ascii	"maxCp\000"
 7073      7000
 7074              	.LASF169:
 7075 007e 7363616E 		.ascii	"scanStatus\000"
 7075      53746174 
 7075      757300
 7076              	.LASF233:
 7077 0089 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 7077      656E7365 
 7077      5F537343 
 7077      53444469 
 7077      7361626C 
 7078              	.LASF256:
 7079 00a3 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 7079      656E7365 
 7079      5F435344 
 7079      43616C69 
 7079      62726174 
 7080              	.LASF172:
 7081 00bf 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 7081      656E7365 
 7081      5F536574 
 7081      75705769 
 7081      64676574 
 7082              	.LASF240:
 7083 00d7 43617053 		.ascii	"CapSense_widgetIndex\000"
 7083      656E7365 
 7083      5F776964 
 7083      67657449 
 7083      6E646578 
 7084              	.LASF117:
 7085 00ec 736E7254 		.ascii	"snrTestWidgetId\000"
 7085      65737457 
 7085      69646765 
 7085      74496400 
 7086              	.LASF42:
 7087 00fc 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 7087      656E7365 
 7087      5F554E44 
 7087      4546494E 
 7087      45445F45 
 7088              	.LASF82:
 7089 0111 62757474 		.ascii	"button20\000"
 7089      6F6E3230 
 7089      00
 7090              	.LASF83:
 7091 011a 62757474 		.ascii	"button21\000"
 7091      6F6E3231 
 7091      00
 7092              	.LASF84:
 7093 0123 62757474 		.ascii	"button22\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 189


 7093      6F6E3232 
 7093      00
 7094              	.LASF85:
 7095 012c 62757474 		.ascii	"button23\000"
 7095      6F6E3233 
 7095      00
 7096              	.LASF86:
 7097 0135 62757474 		.ascii	"button24\000"
 7097      6F6E3234 
 7097      00
 7098              	.LASF87:
 7099 013e 62757474 		.ascii	"button25\000"
 7099      6F6E3235 
 7099      00
 7100              	.LASF88:
 7101 0147 62757474 		.ascii	"button26\000"
 7101      6F6E3236 
 7101      00
 7102              	.LASF89:
 7103 0150 62757474 		.ascii	"button27\000"
 7103      6F6E3237 
 7103      00
 7104              	.LASF90:
 7105 0159 62757474 		.ascii	"button28\000"
 7105      6F6E3238 
 7105      00
 7106              	.LASF91:
 7107 0162 62757474 		.ascii	"button29\000"
 7107      6F6E3239 
 7107      00
 7108              	.LASF8:
 7109 016b 756E7369 		.ascii	"unsigned int\000"
 7109      676E6564 
 7109      20696E74 
 7109      00
 7110              	.LASF108:
 7111 0178 7363616E 		.ascii	"scanCounter\000"
 7111      436F756E 
 7111      74657200 
 7112              	.LASF210:
 7113 0184 696E7075 		.ascii	"inputSnsClk\000"
 7113      74536E73 
 7113      436C6B00 
 7114              	.LASF106:
 7115 0190 6877436C 		.ascii	"hwClock\000"
 7115      6F636B00 
 7116              	.LASF121:
 7117 0198 7363616E 		.ascii	"scanCsdISC\000"
 7117      43736449 
 7117      534300
 7118              	.LASF218:
 7119 01a3 70747252 		.ascii	"ptrRamWidget\000"
 7119      616D5769 
 7119      64676574 
 7119      00
 7120              	.LASF261:
 7121 01b0 43794861 		.ascii	"CyHalt\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 190


 7121      6C7400
 7122              	.LASF152:
 7123 01b7 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 7123      656E7365 
 7123      5F424953 
 7123      545F4353 
 7123      445F5348 
 7124              	.LASF179:
 7125 01d2 696E7465 		.ascii	"interruptState\000"
 7125      72727570 
 7125      74537461 
 7125      746500
 7126              	.LASF162:
 7127 01e1 6C667372 		.ascii	"lfsrScale\000"
 7127      5363616C 
 7127      6500
 7128              	.LASF225:
 7129 01eb 64725265 		.ascii	"drReg\000"
 7129      6700
 7130              	.LASF217:
 7131 01f1 70747246 		.ascii	"ptrFlashWidget\000"
 7131      6C617368 
 7131      57696467 
 7131      657400
 7132              	.LASF23:
 7133 0200 69446163 		.ascii	"iDacGain\000"
 7133      4761696E 
 7133      00
 7134              	.LASF259:
 7135 0209 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 7135      7453656E 
 7135      73655F54 
 7135      756E6553 
 7135      656E7369 
 7136              	.LASF92:
 7137 0224 62757474 		.ascii	"button30\000"
 7137      6F6E3330 
 7137      00
 7138              	.LASF93:
 7139 022d 62757474 		.ascii	"button31\000"
 7139      6F6E3331 
 7139      00
 7140              	.LASF94:
 7141 0236 62757474 		.ascii	"button32\000"
 7141      6F6E3332 
 7141      00
 7142              	.LASF95:
 7143 023f 62757474 		.ascii	"button33\000"
 7143      6F6E3333 
 7143      00
 7144              	.LASF29:
 7145 0248 736E7343 		.ascii	"snsClkInputClock\000"
 7145      6C6B496E 
 7145      70757443 
 7145      6C6F636B 
 7145      00
 7146              	.LASF163:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 191


 7147 0259 6C667372 		.ascii	"lfsrRange\000"
 7147      52616E67 
 7147      6500
 7148              	.LASF200:
 7149 0263 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 7149      656E7365 
 7149      5F43616C 
 7149      69627261 
 7149      7465416C 
 7150              	.LASF267:
 7151 0280 43617053 		.ascii	"CapSense_IsBusy\000"
 7151      656E7365 
 7151      5F497342 
 7151      75737900 
 7152              	.LASF224:
 7153 0290 6873696F 		.ascii	"hsiomReg\000"
 7153      6D526567 
 7153      00
 7154              	.LASF193:
 7155 0299 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 7155      656E7365 
 7155      5F537353 
 7155      65744D6F 
 7155      64436C6B 
 7156              	.LASF230:
 7157 02ba 72656750 		.ascii	"regPtr\000"
 7157      747200
 7158              	.LASF96:
 7159 02c1 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 7159      656E7365 
 7159      5F52414D 
 7159      5F57445F 
 7159      4C495354 
 7160              	.LASF173:
 7161 02dd 73656E73 		.ascii	"sensorId\000"
 7161      6F724964 
 7161      00
 7162              	.LASF127:
 7163 02e6 70735074 		.ascii	"psPtr\000"
 7163      7200
 7164              	.LASF203:
 7165 02ec 70747257 		.ascii	"ptrWdgt\000"
 7165      64677400 
 7166              	.LASF10:
 7167 02f4 75696E74 		.ascii	"uint32_t\000"
 7167      33325F74 
 7167      00
 7168              	.LASF232:
 7169 02fd 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 7169      656E7365 
 7169      5F537353 
 7169      65745769 
 7169      64676574 
 7170              	.LASF56:
 7171 031d 69646163 		.ascii	"idacGainIndex\000"
 7171      4761696E 
 7171      496E6465 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 192


 7171      7800
 7172              	.LASF183:
 7173 032b 6C6F6F70 		.ascii	"loopIndex\000"
 7173      496E6465 
 7173      7800
 7174              	.LASF160:
 7175 0335 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 7175      656E7365 
 7175      5F537343 
 7175      616C634C 
 7175      66737253 
 7176              	.LASF14:
 7177 034e 666C6F61 		.ascii	"float\000"
 7177      7400
 7178              	.LASF132:
 7179 0354 73686966 		.ascii	"shift\000"
 7179      7400
 7180              	.LASF145:
 7181 035a 77646774 		.ascii	"wdgtArray\000"
 7181      41727261 
 7181      7900
 7182              	.LASF264:
 7183 0364 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7183      43313120 
 7183      352E342E 
 7183      31203230 
 7183      31363036 
 7184 0397 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 7184      20726576 
 7184      6973696F 
 7184      6E203233 
 7184      37373135 
 7185 03ca 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 7185      67202D66 
 7185      66756E63 
 7185      74696F6E 
 7185      2D736563 
 7186              	.LASF207:
 7187 03f6 43617053 		.ascii	"CapSense_SsAutoTuneWidget\000"
 7187      656E7365 
 7187      5F537341 
 7187      75746F54 
 7187      756E6557 
 7188              	.LASF248:
 7189 0410 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 7189      656E7365 
 7189      5F435344 
 7189      53657475 
 7189      70576964 
 7190              	.LASF188:
 7191 0428 736E7349 		.ascii	"snsIoPtr\000"
 7191      6F507472 
 7191      00
 7192              	.LASF116:
 7193 0431 736E734C 		.ascii	"snsList\000"
 7193      69737400 
 7194              	.LASF7:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 193


 7195 0439 6C6F6E67 		.ascii	"long long unsigned int\000"
 7195      206C6F6E 
 7195      6720756E 
 7195      7369676E 
 7195      65642069 
 7196              	.LASF241:
 7197 0450 43617053 		.ascii	"CapSense_sensorIndex\000"
 7197      656E7365 
 7197      5F73656E 
 7197      736F7249 
 7197      6E646578 
 7198              	.LASF133:
 7199 0465 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 7199      656E7365 
 7199      5F464C41 
 7199      53485F49 
 7199      4F5F5354 
 7200              	.LASF118:
 7201 047e 736E7254 		.ascii	"snrTestSensorId\000"
 7201      65737453 
 7201      656E736F 
 7201      72496400 
 7202              	.LASF143:
 7203 048e 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 7203      4E6F6973 
 7203      65456E76 
 7203      6C7000
 7204              	.LASF141:
 7205 049d 77646774 		.ascii	"wdgtType\000"
 7205      54797065 
 7205      00
 7206              	.LASF161:
 7207 04a6 6C667372 		.ascii	"lfsrSize\000"
 7207      53697A65 
 7207      00
 7208              	.LASF250:
 7209 04af 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 7209      656E7365 
 7209      5F435344 
 7209      53657475 
 7209      70576964 
 7210              	.LASF226:
 7211 04ca 70635265 		.ascii	"pcReg\000"
 7211      6700
 7212              	.LASF231:
 7213 04d0 76616C75 		.ascii	"value\000"
 7213      6500
 7214              	.LASF185:
 7215 04d6 6E657750 		.ascii	"newPinHsiomVal\000"
 7215      696E4873 
 7215      696F6D56 
 7215      616C00
 7216              	.LASF208:
 7217 04e5 6175746F 		.ascii	"autoTuneStatus\000"
 7217      54756E65 
 7217      53746174 
 7217      757300
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 194


 7218              	.LASF114:
 7219 04f4 6D6F6443 		.ascii	"modCsdClk\000"
 7219      7364436C 
 7219      6B00
 7220              	.LASF102:
 7221 04fe 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 7221      656E7365 
 7221      5F52414D 
 7221      5F534E53 
 7221      5F535452 
 7222              	.LASF204:
 7223 0516 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 7223      656E7365 
 7223      5F537343 
 7223      53444361 
 7223      6C635072 
 7224              	.LASF30:
 7225 0530 63616C54 		.ascii	"calTarget\000"
 7225      61726765 
 7225      7400
 7226              	.LASF126:
 7227 053a 64725074 		.ascii	"drPtr\000"
 7227      7200
 7228              	.LASF228:
 7229 0540 6D6F6465 		.ascii	"mode\000"
 7229      00
 7230              	.LASF194:
 7231 0545 6D6F6443 		.ascii	"modClk\000"
 7231      6C6B00
 7232              	.LASF184:
 7233 054c 6E657750 		.ascii	"newPinPcVal\000"
 7233      696E5063 
 7233      56616C00 
 7234              	.LASF25:
 7235 0558 73696750 		.ascii	"sigPFC\000"
 7235      464300
 7236              	.LASF52:
 7237 055f 68797374 		.ascii	"hysteresis\000"
 7237      65726573 
 7237      697300
 7238              	.LASF223:
 7239 056a 64697363 		.ascii	"dischargeTime\000"
 7239      68617267 
 7239      6554696D 
 7239      6500
 7240              	.LASF144:
 7241 0578 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 7241      656E7365 
 7241      5F464C41 
 7241      53485F57 
 7241      445F5354 
 7242              	.LASF177:
 7243 0591 656C7464 		.ascii	"eltdNum\000"
 7243      4E756D00 
 7244              	.LASF54:
 7245 0599 6C6F7742 		.ascii	"lowBslnRst\000"
 7245      736C6E52 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 195


 7245      737400
 7246              	.LASF159:
 7247 05a4 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 7247      656E7365 
 7247      5F537343 
 7247      616C634C 
 7247      66737253 
 7248              	.LASF140:
 7249 05bc 746F7461 		.ascii	"totalNumSns\000"
 7249      6C4E756D 
 7249      536E7300 
 7250              	.LASF41:
 7251 05c8 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 7251      5453454E 
 7251      53455F43 
 7251      53445F4E 
 7251      4F495345 
 7252              	.LASF213:
 7253 05ed 6175746F 		.ascii	"autoTuneConfig\000"
 7253      54756E65 
 7253      436F6E66 
 7253      696700
 7254              	.LASF50:
 7255 05fc 6E6F6973 		.ascii	"noiseTh\000"
 7255      65546800 
 7256              	.LASF16:
 7257 0604 63686172 		.ascii	"char\000"
 7257      00
 7258              	.LASF253:
 7259 0609 43794578 		.ascii	"CyExitCriticalSection\000"
 7259      69744372 
 7259      69746963 
 7259      616C5365 
 7259      6374696F 
 7260              	.LASF31:
 7261 061f 69446163 		.ascii	"iDacMod\000"
 7261      4D6F6400 
 7262              	.LASF222:
 7263 0627 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 7263      656E7365 
 7263      5F446973 
 7263      63686172 
 7263      67654578 
 7264              	.LASF257:
 7265 0647 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 7265      656E7365 
 7265      5F537343 
 7265      53444765 
 7265      744E756D 
 7266              	.LASF186:
 7267 066c 746D7050 		.ascii	"tmpPcDrRegValue\000"
 7267      63447252 
 7267      65675661 
 7267      6C756500 
 7268              	.LASF150:
 7269 067c 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 7269      656E7365 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 196


 7269      5F424953 
 7269      545F4353 
 7269      445F534E 
 7270              	.LASF130:
 7271 0698 6873696F 		.ascii	"hsiomShift\000"
 7271      6D536869 
 7271      667400
 7272              	.LASF12:
 7273 06a3 75696E74 		.ascii	"uint16\000"
 7273      313600
 7274              	.LASF158:
 7275 06aa 636F6E76 		.ascii	"conversionsNum\000"
 7275      65727369 
 7275      6F6E734E 
 7275      756D00
 7276              	.LASF219:
 7277 06b9 70747252 		.ascii	"ptrRamSensor\000"
 7277      616D5365 
 7277      6E736F72 
 7277      00
 7278              	.LASF220:
 7279 06c6 43617053 		.ascii	"CapSense_SsAutoTune\000"
 7279      656E7365 
 7279      5F537341 
 7279      75746F54 
 7279      756E6500 
 7280              	.LASF48:
 7281 06da 7265736F 		.ascii	"resolution\000"
 7281      6C757469 
 7281      6F6E00
 7282              	.LASF109:
 7283 06e5 73746174 		.ascii	"status\000"
 7283      757300
 7284              	.LASF198:
 7285 06ec 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 7285      656E7365 
 7285      5F43616C 
 7285      69627261 
 7285      74655769 
 7286              	.LASF149:
 7287 0705 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 7287      656E7365 
 7287      5F534341 
 7287      4E5F4353 
 7287      585F4500 
 7288              	.LASF21:
 7289 0719 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 7289      656E7365 
 7289      5F4C4F57 
 7289      5F42534C 
 7289      4E5F5253 
 7290              	.LASF195:
 7291 0734 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 7291      656E7365 
 7291      5F537353 
 7291      6574536E 
 7291      73436C6F 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 197


 7292              	.LASF47:
 7293 0752 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 7293      656E7365 
 7293      5F53454E 
 7293      53455F4D 
 7293      4554484F 
 7294              	.LASF227:
 7295 076d 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 7295      656E7365 
 7295      5F536574 
 7295      496E6163 
 7295      74697665 
 7296              	.LASF101:
 7297 0790 69646163 		.ascii	"idacComp\000"
 7297      436F6D70 
 7297      00
 7298              	.LASF125:
 7299 0799 70635074 		.ascii	"pcPtr\000"
 7299      7200
 7300              	.LASF6:
 7301 079f 6C6F6E67 		.ascii	"long long int\000"
 7301      206C6F6E 
 7301      6720696E 
 7301      7400
 7302              	.LASF142:
 7303 07ad 6E756D43 		.ascii	"numCols\000"
 7303      6F6C7300 
 7304              	.LASF263:
 7305 07b5 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 7305      656E7365 
 7305      5F537343 
 7305      5344496E 
 7305      69746961 
 7306              	.LASF53:
 7307 07ce 6F6E4465 		.ascii	"onDebounce\000"
 7307      626F756E 
 7307      636500
 7308              	.LASF192:
 7309 07d9 61646472 		.ascii	"address\000"
 7309      65737300 
 7310              	.LASF199:
 7311 07e1 63616C69 		.ascii	"calibrateStatus\000"
 7311      62726174 
 7311      65537461 
 7311      74757300 
 7312              	.LASF115:
 7313 07f1 77646774 		.ascii	"wdgtList\000"
 7313      4C697374 
 7313      00
 7314              	.LASF148:
 7315 07fa 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 7315      656E7365 
 7315      5F534341 
 7315      4E5F4353 
 7315      445F4500 
 7316              	.LASF146:
 7317 080e 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 198


 7317      656E7365 
 7317      5F464C41 
 7317      53485F53 
 7317      54525543 
 7318              	.LASF168:
 7319 0824 43617053 		.ascii	"CapSense_Scan\000"
 7319      656E7365 
 7319      5F536361 
 7319      6E00
 7320              	.LASF229:
 7321 0832 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 7321      656E7365 
 7321      5F577269 
 7321      74654269 
 7321      74735361 
 7322              	.LASF187:
 7323 0849 746D7048 		.ascii	"tmpHsiomRegValue\000"
 7323      73696F6D 
 7323      52656756 
 7323      616C7565 
 7323      00
 7324              	.LASF237:
 7325 085a 43617053 		.ascii	"CapSense_dsRam\000"
 7325      656E7365 
 7325      5F647352 
 7325      616D00
 7326              	.LASF120:
 7327 0869 736E7254 		.ascii	"snrTestRawCount\000"
 7327      65737452 
 7327      6177436F 
 7327      756E7400 
 7328              	.LASF51:
 7329 0879 6E4E6F69 		.ascii	"nNoiseTh\000"
 7329      73655468 
 7329      00
 7330              	.LASF113:
 7331 0882 63736430 		.ascii	"csd0Config\000"
 7331      436F6E66 
 7331      696700
 7332              	.LASF19:
 7333 088d 63796973 		.ascii	"cyisraddress\000"
 7333      72616464 
 7333      72657373 
 7333      00
 7334              	.LASF174:
 7335 089a 43617053 		.ascii	"CapSense_ScanExt\000"
 7335      656E7365 
 7335      5F536361 
 7335      6E457874 
 7335      00
 7336              	.LASF60:
 7337 08ab 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 7337      656E7365 
 7337      5F52414D 
 7337      5F57445F 
 7337      42415345 
 7338              	.LASF124:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 199


 7339 08c7 6873696F 		.ascii	"hsiomPtr\000"
 7339      6D507472 
 7339      00
 7340              	.LASF13:
 7341 08d0 75696E74 		.ascii	"uint32\000"
 7341      333200
 7342              	.LASF137:
 7343 08d7 70747232 		.ascii	"ptr2FltrHistory\000"
 7343      466C7472 
 7343      48697374 
 7343      6F727900 
 7344              	.LASF155:
 7345 08e7 6761696E 		.ascii	"gainValue\000"
 7345      56616C75 
 7345      6500
 7346              	.LASF246:
 7347 08f1 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 7347      656E7365 
 7347      5F637572 
 7347      536E7349 
 7347      4F507472 
 7348              	.LASF129:
 7349 0906 6D61736B 		.ascii	"mask\000"
 7349      00
 7350              	.LASF197:
 7351 090b 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 7351      656E7365 
 7351      5F537353 
 7351      6574436C 
 7351      6F636B44 
 7352              	.LASF153:
 7353 0927 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 7353      656E7365 
 7353      5F4F5045 
 7353      52415449 
 7353      4F4E5F4D 
 7354              	.LASF260:
 7355 0944 43794465 		.ascii	"CyDelayUs\000"
 7355      6C617955 
 7355      7300
 7356              	.LASF24:
 7357 094e 70747253 		.ascii	"ptrSenseClk\000"
 7357      656E7365 
 7357      436C6B00 
 7358              	.LASF171:
 7359 095a 77646774 		.ascii	"wdgtIndex\000"
 7359      496E6465 
 7359      7800
 7360              	.LASF209:
 7361 0964 736E7349 		.ascii	"snsIndex\000"
 7361      6E646578 
 7361      00
 7362              	.LASF46:
 7363 096d 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 7363      656E7365 
 7363      5F53454E 
 7363      53455F4D 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 200


 7363      4554484F 
 7364              	.LASF147:
 7365 0989 6C6F6E67 		.ascii	"long double\000"
 7365      20646F75 
 7365      626C6500 
 7366              	.LASF26:
 7367 0995 736E7343 		.ascii	"snsClkConstantR\000"
 7367      6C6B436F 
 7367      6E737461 
 7367      6E745200 
 7368              	.LASF18:
 7369 09a5 72656733 		.ascii	"reg32\000"
 7369      3200
 7370              	.LASF119:
 7371 09ab 736E7254 		.ascii	"snrTestScanCounter\000"
 7371      65737453 
 7371      63616E43 
 7371      6F756E74 
 7371      657200
 7372              	.LASF32:
 7373 09be 69446163 		.ascii	"iDacComp\000"
 7373      436F6D70 
 7373      00
 7374              	.LASF104:
 7375 09c7 636F6E66 		.ascii	"configId\000"
 7375      69674964 
 7375      00
 7376              	.LASF136:
 7377 09d0 70747232 		.ascii	"ptr2SnsRam\000"
 7377      536E7352 
 7377      616D00
 7378              	.LASF235:
 7379 09db 43617053 		.ascii	"CapSense_SsInitialize\000"
 7379      656E7365 
 7379      5F537349 
 7379      6E697469 
 7379      616C697A 
 7380              	.LASF112:
 7381 09f1 736E7353 		.ascii	"snsStatus\000"
 7381      74617475 
 7381      7300
 7382              	.LASF190:
 7383 09fb 706F7374 		.ascii	"postScanStatus\000"
 7383      5363616E 
 7383      53746174 
 7383      757300
 7384              	.LASF58:
 7385 0a0a 736E7343 		.ascii	"snsClkSource\000"
 7385      6C6B536F 
 7385      75726365 
 7385      00
 7386              	.LASF262:
 7387 0a17 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 7387      656E7365 
 7387      5F537343 
 7387      5344456C 
 7387      65637472 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 201


 7388              	.LASF191:
 7389 0a34 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 7389      656E7365 
 7389      5F537349 
 7389      7372496E 
 7389      69746961 
 7390              	.LASF2:
 7391 0a4d 73686F72 		.ascii	"short int\000"
 7391      7420696E 
 7391      7400
 7392              	.LASF123:
 7393 0a57 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 7393      656E7365 
 7393      5F52414D 
 7393      5F535452 
 7393      55435400 
 7394              	.LASF182:
 7395 0a6b 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 7395      656E7365 
 7395      5F537353 
 7395      6574416C 
 7395      6C494F73 
 7396              	.LASF4:
 7397 0a85 6C6F6E67 		.ascii	"long int\000"
 7397      20696E74 
 7397      00
 7398              	.LASF110:
 7399 0a8e 77646774 		.ascii	"wdgtEnable\000"
 7399      456E6162 
 7399      6C6500
 7400              	.LASF99:
 7401 0a99 64696666 		.ascii	"diff\000"
 7401      00
 7402              	.LASF107:
 7403 0a9e 74756E65 		.ascii	"tunerCmd\000"
 7403      72436D64 
 7403      00
 7404              	.LASF44:
 7405 0aa7 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 7405      656E7365 
 7405      5F53454E 
 7405      53455F4D 
 7405      4554484F 
 7406              	.LASF266:
 7407 0ac3 433A5C55 		.ascii	"C:\\Users\\Qinh\\Documents\\PSoC Creator\\Workspace"
 7407      73657273 
 7407      5C51696E 
 7407      685C446F 
 7407      63756D65 
 7408 0af1 30315C63 		.ascii	"01\\cy8c4025-34channel-touch.cydsn\000"
 7408      79386334 
 7408      3032352D 
 7408      33346368 
 7408      616E6E65 
 7409              	.LASF167:
 7410 0b13 43617053 		.ascii	"CapSense_SetupWidget\000"
 7410      656E7365 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 202


 7410      5F536574 
 7410      75705769 
 7410      64676574 
 7411              	.LASF62:
 7412 0b28 62757474 		.ascii	"button0\000"
 7412      6F6E3000 
 7413              	.LASF63:
 7414 0b30 62757474 		.ascii	"button1\000"
 7414      6F6E3100 
 7415              	.LASF64:
 7416 0b38 62757474 		.ascii	"button2\000"
 7416      6F6E3200 
 7417              	.LASF65:
 7418 0b40 62757474 		.ascii	"button3\000"
 7418      6F6E3300 
 7419              	.LASF66:
 7420 0b48 62757474 		.ascii	"button4\000"
 7420      6F6E3400 
 7421              	.LASF67:
 7422 0b50 62757474 		.ascii	"button5\000"
 7422      6F6E3500 
 7423              	.LASF68:
 7424 0b58 62757474 		.ascii	"button6\000"
 7424      6F6E3600 
 7425              	.LASF69:
 7426 0b60 62757474 		.ascii	"button7\000"
 7426      6F6E3700 
 7427              	.LASF70:
 7428 0b68 62757474 		.ascii	"button8\000"
 7428      6F6E3800 
 7429              	.LASF71:
 7430 0b70 62757474 		.ascii	"button9\000"
 7430      6F6E3900 
 7431              	.LASF154:
 7432 0b78 6761696E 		.ascii	"gainReg\000"
 7432      52656700 
 7433              	.LASF212:
 7434 0b80 6D696E53 		.ascii	"minSnsClkDivTmp\000"
 7434      6E73436C 
 7434      6B446976 
 7434      546D7000 
 7435              	.LASF238:
 7436 0b90 43617053 		.ascii	"CapSense_dsFlash\000"
 7436      656E7365 
 7436      5F647346 
 7436      6C617368 
 7436      00
 7437              	.LASF28:
 7438 0ba1 66696E67 		.ascii	"fingerCap\000"
 7438      65724361 
 7438      7000
 7439              	.LASF251:
 7440 0bab 43617053 		.ascii	"CapSense_CSDScanExt\000"
 7440      656E7365 
 7440      5F435344 
 7440      5363616E 
 7440      45787400 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 203


 7441              	.LASF111:
 7442 0bbf 77646774 		.ascii	"wdgtStatus\000"
 7442      53746174 
 7442      757300
 7443              	.LASF258:
 7444 0bca 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 7444      7453656E 
 7444      73655F54 
 7444      756E6550 
 7444      72657363 
 7445              	.LASF265:
 7446 0be4 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 7446      72617465 
 7446      645F536F 
 7446      75726365 
 7446      5C50536F 
 7447              	.LASF254:
 7448 0c0e 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 7448      656E7365 
 7448      5F435344 
 7448      436F6E6E 
 7448      65637453 
 7449              	.LASF43:
 7450 0c25 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 7450      656E7365 
 7450      5F53454E 
 7450      53455F4D 
 7450      4554484F 
 7451              	.LASF244:
 7452 0c41 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 7452      656E7365 
 7452      5F637572 
 7452      72656E74 
 7452      53656E73 
 7453              	.LASF205:
 7454 0c5d 70727353 		.ascii	"prsSize\000"
 7454      697A6500 
 7455              	.LASF59:
 7456 0c65 73697A65 		.ascii	"sizetype\000"
 7456      74797065 
 7456      00
 7457              	.LASF131:
 7458 0c6e 64725368 		.ascii	"drShift\000"
 7458      69667400 
 7459              	.LASF5:
 7460 0c76 6C6F6E67 		.ascii	"long unsigned int\000"
 7460      20756E73 
 7460      69676E65 
 7460      6420696E 
 7460      7400
 7461              	.LASF202:
 7462 0c88 72657456 		.ascii	"retVal\000"
 7462      616C00
 7463              	.LASF27:
 7464 0c8f 76526566 		.ascii	"vRef\000"
 7464      00
 7465              	.LASF55:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 204


 7466 0c94 69646163 		.ascii	"idacMod\000"
 7466      4D6F6400 
 7467              	.LASF255:
 7468 0c9c 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 7468      656E7365 
 7468      5F495352 
 7468      5F537461 
 7468      72744578 
 7469              	.LASF138:
 7470 0cb1 70747232 		.ascii	"ptr2DebounceArr\000"
 7470      4465626F 
 7470      756E6365 
 7470      41727200 
 7471              	.LASF49:
 7472 0cc1 66696E67 		.ascii	"fingerTh\000"
 7472      65725468 
 7472      00
 7473              	.LASF98:
 7474 0cca 62736C6E 		.ascii	"bslnExt\000"
 7474      45787400 
 7475              	.LASF156:
 7476 0cd2 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 7476      656E7365 
 7476      5F494441 
 7476      435F4741 
 7476      494E5F54 
 7477              	.LASF61:
 7478 0cf2 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 7478      656E7365 
 7478      5F52414D 
 7478      5F57445F 
 7478      42555454 
 7479              	.LASF17:
 7480 0d10 63797374 		.ascii	"cystatus\000"
 7480      61747573 
 7480      00
 7481              	.LASF1:
 7482 0d19 756E7369 		.ascii	"unsigned char\000"
 7482      676E6564 
 7482      20636861 
 7482      7200
 7483              	.LASF216:
 7484 0d27 6D617849 		.ascii	"maxIdacComp\000"
 7484      64616343 
 7484      6F6D7000 
 7485              	.LASF9:
 7486 0d33 5F5F7569 		.ascii	"__uint32_t\000"
 7486      6E743332 
 7486      5F7400
 7487              	.LASF181:
 7488 0d3e 43617053 		.ascii	"CapSense_SetPinState\000"
 7488      656E7365 
 7488      5F536574 
 7488      50696E53 
 7488      74617465 
 7489              	.LASF139:
 7490 0d53 73746174 		.ascii	"staticConfig\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 205


 7490      6963436F 
 7490      6E666967 
 7490      00
 7491              	.LASF22:
 7492 0d60 73656E73 		.ascii	"sensorCap\000"
 7492      6F724361 
 7492      7000
 7493              	.LASF180:
 7494 0d6a 696F5074 		.ascii	"ioPtr\000"
 7494      7200
 7495              	.LASF122:
 7496 0d70 7363616E 		.ascii	"scanCurrentISC\000"
 7496      43757272 
 7496      656E7449 
 7496      534300
 7497              	.LASF135:
 7498 0d7f 70747232 		.ascii	"ptr2WdgtRam\000"
 7498      57646774 
 7498      52616D00 
 7499              	.LASF20:
 7500 0d8b 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 7500      656E7365 
 7500      5F544852 
 7500      4553484F 
 7500      4C445F54 
 7501              	.LASF211:
 7502 0da3 6D696E53 		.ascii	"minSnsClkDiv\000"
 7502      6E73436C 
 7502      6B446976 
 7502      00
 7503              	.LASF249:
 7504 0db0 43617053 		.ascii	"CapSense_CSDScan\000"
 7504      656E7365 
 7504      5F435344 
 7504      5363616E 
 7504      00
 7505              	.LASF45:
 7506 0dc1 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 7506      656E7365 
 7506      5F53454E 
 7506      53455F4D 
 7506      4554484F 
 7507              	.LASF176:
 7508 0dde 73746174 		.ascii	"state\000"
 7508      6500
 7509              	.LASF178:
 7510 0de4 656C7464 		.ascii	"eltdIndex\000"
 7510      496E6465 
 7510      7800
 7511              	.LASF170:
 7512 0dee 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 7512      656E7365 
 7512      5F536361 
 7512      6E416C6C 
 7512      57696467 
 7513              	.LASF128:
 7514 0e06 6873696F 		.ascii	"hsiomMask\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 206


 7514      6D4D6173 
 7514      6B00
 7515              	.LASF57:
 7516 0e10 736E7343 		.ascii	"snsClk\000"
 7516      6C6B00
 7517              	.LASF234:
 7518 0e17 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 7518      656E7365 
 7518      5F537353 
 7518      77697463 
 7518      6853656E 
 7519              	.LASF252:
 7520 0e34 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7520      74657243 
 7520      72697469 
 7520      63616C53 
 7520      65637469 
 7521              	.LASF243:
 7522 0e4b 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 7522      656E7365 
 7522      5F637572 
 7522      52616D53 
 7522      6E735074 
 7523              	.LASF0:
 7524 0e61 7369676E 		.ascii	"signed char\000"
 7524      65642063 
 7524      68617200 
 7525              	.LASF245:
 7526 0e6d 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 7526      656E7365 
 7526      5F736361 
 7526      6E467265 
 7526      71496E64 
 7527              	.LASF97:
 7528 0e84 62736C6E 		.ascii	"bsln\000"
 7528      00
 7529              	.LASF3:
 7530 0e89 73686F72 		.ascii	"short unsigned int\000"
 7530      7420756E 
 7530      7369676E 
 7530      65642069 
 7530      6E7400
 7531              	.LASF33:
 7532 0e9c 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 7532      5F54554E 
 7532      455F434F 
 7532      4E464947 
 7532      5F545950 
 7533              	.LASF236:
 7534 0eb2 696E6974 		.ascii	"initStatus\000"
 7534      53746174 
 7534      757300
 7535              	.LASF239:
 7536 0ebd 43617053 		.ascii	"CapSense_ioList\000"
 7536      656E7365 
 7536      5F696F4C 
 7536      69737400 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 207


 7537              	.LASF189:
 7538 0ecd 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 7538      656E7365 
 7538      5F537350 
 7538      6F737441 
 7538      6C6C5769 
 7539              	.LASF134:
 7540 0eeb 70747232 		.ascii	"ptr2SnsFlash\000"
 7540      536E7346 
 7540      6C617368 
 7540      00
 7541              	.LASF164:
 7542 0ef8 6C667372 		.ascii	"lfsrDither\000"
 7542      44697468 
 7542      657200
 7543              	.LASF196:
 7544 0f03 6E657752 		.ascii	"newRegValue\000"
 7544      65675661 
 7544      6C756500 
 7545              	.LASF214:
 7546 0f0f 6D617852 		.ascii	"maxRaw\000"
 7546      617700
 7547              	.LASF11:
 7548 0f16 75696E74 		.ascii	"uint8\000"
 7548      3800
 7549              	.LASF15:
 7550 0f1c 646F7562 		.ascii	"double\000"
 7550      6C6500
 7551              	.LASF100:
 7552 0f23 6E656742 		.ascii	"negBslnRstCnt\000"
 7552      736C6E52 
 7552      7374436E 
 7552      7400
 7553              	.LASF34:
 7554 0f31 70617261 		.ascii	"param0\000"
 7554      6D3000
 7555              	.LASF35:
 7556 0f38 70617261 		.ascii	"param1\000"
 7556      6D3100
 7557              	.LASF36:
 7558 0f3f 70617261 		.ascii	"param2\000"
 7558      6D3200
 7559              	.LASF37:
 7560 0f46 70617261 		.ascii	"param3\000"
 7560      6D3300
 7561              	.LASF38:
 7562 0f4d 70617261 		.ascii	"param4\000"
 7562      6D3400
 7563              	.LASF39:
 7564 0f54 70617261 		.ascii	"param5\000"
 7564      6D3500
 7565              	.LASF40:
 7566 0f5b 70617261 		.ascii	"param6\000"
 7566      6D3600
 7567              	.LASF157:
 7568 0f62 736E7343 		.ascii	"snsClkDivider\000"
 7568      6C6B4469 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 208


 7568      76696465 
 7568      7200
 7569              	.LASF206:
 7570 0f70 6D6F6443 		.ascii	"modClkDivider\000"
 7570      6C6B4469 
 7570      76696465 
 7570      7200
 7571              	.LASF105:
 7572 0f7e 64657669 		.ascii	"deviceId\000"
 7572      63654964 
 7572      00
 7573              	.LASF166:
 7574 0f87 77696467 		.ascii	"widgetStatus\000"
 7574      65745374 
 7574      61747573 
 7574      00
 7575              	.LASF151:
 7576 0f94 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 7576      656E7365 
 7576      5F424953 
 7576      545F4353 
 7576      585F534E 
 7577              	.LASF165:
 7578 0fb0 77696467 		.ascii	"widgetId\000"
 7578      65744964 
 7578      00
 7579              	.LASF242:
 7580 0fb9 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 7580      656E7365 
 7580      5F726571 
 7580      75657374 
 7580      5363616E 
 7581              	.LASF221:
 7582 0fd7 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 7582      656E7365 
 7582      5F537349 
 7582      6E697469 
 7582      616C697A 
 7583              	.LASF247:
 7584 0ffb 43617053 		.ascii	"CapSense_idacGainTable\000"
 7584      656E7365 
 7584      5F696461 
 7584      63476169 
 7584      6E546162 
 7585              	.LASF103:
 7586 1012 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 7586      656E7365 
 7586      5F52414D 
 7586      5F534E53 
 7586      5F4C4953 
 7587              	.LASF72:
 7588 102f 62757474 		.ascii	"button10\000"
 7588      6F6E3130 
 7588      00
 7589              	.LASF73:
 7590 1038 62757474 		.ascii	"button11\000"
 7590      6F6E3131 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccn3KG88.s 			page 209


 7590      00
 7591              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
