ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_IsBusy,"ax",%progbits
  20              		.align	1
  21              		.global	CapSense_IsBusy
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_IsBusy, %function
  25              	CapSense_IsBusy:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 237 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  33              		.loc 1 238 0
  34 0000 024B     		ldr	r3, .L2
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
  35              		.loc 1 239 0
  36              		@ sp needed
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
  37              		.loc 1 238 0
  38 0002 D868     		ldr	r0, [r3, #12]
  39 0004 8023     		movs	r3, #128
  40 0006 1840     		ands	r0, r3
  41              		.loc 1 239 0
  42 0008 7047     		bx	lr
  43              	.L3:
  44 000a C046     		.align	2
  45              	.L2:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 6


  46 000c 00000000 		.word	CapSense_dsRam
  47              		.cfi_endproc
  48              	.LFE1:
  49              		.size	CapSense_IsBusy, .-CapSense_IsBusy
  50              		.section	.text.CapSense_SetupWidget,"ax",%progbits
  51              		.align	1
  52              		.global	CapSense_SetupWidget
  53              		.code	16
  54              		.thumb_func
  55              		.type	CapSense_SetupWidget, %function
  56              	CapSense_SetupWidget:
  57              	.LFB2:
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  58              		.loc 1 283 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 7


  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62              	.LVL0:
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
  63              		.loc 1 286 0
  64 0000 8023     		movs	r3, #128
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
  65              		.loc 1 283 0
  66 0002 70B5     		push	{r4, r5, r6, lr}
  67              		.cfi_def_cfa_offset 16
  68              		.cfi_offset 4, -16
  69              		.cfi_offset 5, -12
  70              		.cfi_offset 6, -8
  71              		.cfi_offset 14, -4
  72              		.loc 1 286 0
  73 0004 0B4D     		ldr	r5, .L12
  74 0006 5B02     		lsls	r3, r3, #9
  75 0008 EC68     		ldr	r4, [r5, #12]
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
  76              		.loc 1 289 0
  77 000a 1122     		movs	r2, #17
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  78              		.loc 1 286 0
  79 000c 1C40     		ands	r4, r3
  80 000e 0ED1     		bne	.L10
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
  81              		.loc 1 304 0
  82 0010 103A     		subs	r2, r2, #16
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
  83              		.loc 1 296 0
  84 0012 2128     		cmp	r0, #33
  85 0014 0BD8     		bhi	.L10
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
  86              		.loc 1 296 0 is_stmt 0 discriminator 1
  87 0016 1F21     		movs	r1, #31
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  88              		.loc 1 297 0 is_stmt 1 discriminator 1
  89 0018 4309     		lsrs	r3, r0, #5
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 8


  90 001a 0433     		adds	r3, r3, #4
  91 001c 9B00     		lsls	r3, r3, #2
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
  92              		.loc 1 296 0 discriminator 1
  93 001e 5B59     		ldr	r3, [r3, r5]
  94 0020 0140     		ands	r1, r0
  95 0022 CB40     		lsrs	r3, r3, r1
  96 0024 1342     		tst	r3, r2
  97 0026 02D0     		beq	.L10
  98              	.LVL1:
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
  99              		.loc 1 324 0
 100 0028 FFF7FEFF 		bl	CapSense_CSDSetupWidget
 101              	.LVL2:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 102              		.loc 1 300 0
 103 002c 2200     		movs	r2, r4
 104              	.LVL3:
 105              	.L10:
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 106              		.loc 1 340 0
 107 002e 1000     		movs	r0, r2
 108              		@ sp needed
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 9


 109 0030 70BD     		pop	{r4, r5, r6, pc}
 110              	.L13:
 111 0032 C046     		.align	2
 112              	.L12:
 113 0034 00000000 		.word	CapSense_dsRam
 114              		.cfi_endproc
 115              	.LFE2:
 116              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 117              		.section	.text.CapSense_Scan,"ax",%progbits
 118              		.align	1
 119              		.global	CapSense_Scan
 120              		.code	16
 121              		.thumb_func
 122              		.type	CapSense_Scan, %function
 123              	CapSense_Scan:
 124              	.LFB3:
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 125              		.loc 1 366 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL4:
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 130              		.loc 1 369 0
 131 0000 094B     		ldr	r3, .L20
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 132              		.loc 1 366 0
 133 0002 10B5     		push	{r4, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 4, -8
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 10


 136              		.cfi_offset 14, -4
 137              		.loc 1 369 0
 138 0004 DC68     		ldr	r4, [r3, #12]
 139 0006 8023     		movs	r3, #128
 140 0008 5B02     		lsls	r3, r3, #9
 141 000a 1C40     		ands	r4, r3
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 142              		.loc 1 372 0
 143 000c 1120     		movs	r0, #17
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 144              		.loc 1 369 0
 145 000e 002C     		cmp	r4, #0
 146 0010 09D1     		bne	.L15
 147              	.LBB6:
 148              	.LBB7:
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 149              		.loc 1 376 0
 150 0012 064B     		ldr	r3, .L20+4
 151 0014 1B78     		ldrb	r3, [r3]
 152 0016 012B     		cmp	r3, #1
 153 0018 03D1     		bne	.L19
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 154              		.loc 1 385 0
 155 001a FFF7FEFF 		bl	CapSense_CSDScan
 156              	.LVL5:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 157              		.loc 1 367 0
 158 001e 2000     		movs	r0, r4
 159 0020 01E0     		b	.L15
 160              	.L19:
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 161              		.loc 1 394 0
 162 0022 0120     		movs	r0, #1
 163 0024 4042     		rsbs	r0, r0, #0
 164              	.L15:
 165              	.LVL6:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 11


 166              	.LBE7:
 167              	.LBE6:
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 168              		.loc 1 399 0
 169              		@ sp needed
 170 0026 10BD     		pop	{r4, pc}
 171              	.L21:
 172              		.align	2
 173              	.L20:
 174 0028 00000000 		.word	CapSense_dsRam
 175 002c 00000000 		.word	.LANCHOR0
 176              		.cfi_endproc
 177              	.LFE3:
 178              		.size	CapSense_Scan, .-CapSense_Scan
 179              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 180              		.align	1
 181              		.global	CapSense_ScanAllWidgets
 182              		.code	16
 183              		.thumb_func
 184              		.type	CapSense_ScanAllWidgets, %function
 185              	CapSense_ScanAllWidgets:
 186              	.LFB4:
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 187              		.loc 1 428 0
 188              		.cfi_startproc
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 12


 189              		@ args = 0, pretend = 0, frame = 0
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191              	.LVL7:
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 192              		.loc 1 433 0
 193 0000 0C4B     		ldr	r3, .L30
 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 194              		.loc 1 428 0
 195 0002 10B5     		push	{r4, lr}
 196              		.cfi_def_cfa_offset 8
 197              		.cfi_offset 4, -8
 198              		.cfi_offset 14, -4
 199              		.loc 1 433 0
 200 0004 DC68     		ldr	r4, [r3, #12]
 201 0006 8023     		movs	r3, #128
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 202              		.loc 1 436 0
 203 0008 1120     		movs	r0, #17
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 204              		.loc 1 433 0
 205 000a 1C40     		ands	r4, r3
 206 000c 11D1     		bne	.L23
 207              	.LVL8:
 208              	.L27:
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 209              		.loc 1 449 0
 210 000e 2000     		movs	r0, r4
 211 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 212              	.LVL9:
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 213              		.loc 1 451 0
 214 0014 0028     		cmp	r0, #0
 215 0016 09D1     		bne	.L24
 216 0018 074B     		ldr	r3, .L30+4
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 13


 217              		.loc 1 455 0
 218 001a 212C     		cmp	r4, #33
 219 001c 02D0     		beq	.L25
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 220              		.loc 1 458 0
 221 001e 0122     		movs	r2, #1
 222 0020 5A70     		strb	r2, [r3, #1]
 223 0022 00E0     		b	.L26
 224              	.L25:
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 225              		.loc 1 463 0
 226 0024 5870     		strb	r0, [r3, #1]
 227              	.L26:
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 228              		.loc 1 473 0
 229 0026 FFF7FEFF 		bl	CapSense_Scan
 230              	.LVL10:
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 231              		.loc 1 475 0
 232 002a 02E0     		b	.L23
 233              	.L24:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 234              		.loc 1 446 0
 235 002c 0134     		adds	r4, r4, #1
 236              	.LVL11:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 237              		.loc 1 444 0
 238 002e 222C     		cmp	r4, #34
 239 0030 EDD1     		bne	.L27
 240              	.LVL12:
 241              	.L23:
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 242              		.loc 1 481 0
 243              		@ sp needed
 244 0032 10BD     		pop	{r4, pc}
 245              	.L31:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 14


 246              		.align	2
 247              	.L30:
 248 0034 00000000 		.word	CapSense_dsRam
 249 0038 00000000 		.word	.LANCHOR0
 250              		.cfi_endproc
 251              	.LFE4:
 252              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 253              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 254              		.align	1
 255              		.global	CapSense_SetupWidgetExt
 256              		.code	16
 257              		.thumb_func
 258              		.type	CapSense_SetupWidgetExt, %function
 259              	CapSense_SetupWidgetExt:
 260              	.LFB5:
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 15


 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 261              		.loc 1 536 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              	.LVL13:
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 266              		.loc 1 539 0
 267 0000 8023     		movs	r3, #128
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 268              		.loc 1 536 0
 269 0002 70B5     		push	{r4, r5, r6, lr}
 270              		.cfi_def_cfa_offset 16
 271              		.cfi_offset 4, -16
 272              		.cfi_offset 5, -12
 273              		.cfi_offset 6, -8
 274              		.cfi_offset 14, -4
 275              		.loc 1 539 0
 276 0004 0E4E     		ldr	r6, .L41
 277 0006 5B02     		lsls	r3, r3, #9
 278 0008 F468     		ldr	r4, [r6, #12]
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 279              		.loc 1 542 0
 280 000a 1122     		movs	r2, #17
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 281              		.loc 1 539 0
 282 000c 1C40     		ands	r4, r3
 283 000e 14D1     		bne	.L39
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 16


 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 284              		.loc 1 558 0
 285 0010 103A     		subs	r2, r2, #16
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 286              		.loc 1 549 0
 287 0012 2128     		cmp	r0, #33
 288 0014 11D8     		bhi	.L39
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 289              		.loc 1 549 0 is_stmt 0 discriminator 1
 290 0016 1F25     		movs	r5, #31
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 291              		.loc 1 550 0 is_stmt 1 discriminator 1
 292 0018 4309     		lsrs	r3, r0, #5
 293 001a 0433     		adds	r3, r3, #4
 294 001c 9B00     		lsls	r3, r3, #2
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 295              		.loc 1 549 0 discriminator 1
 296 001e 9B59     		ldr	r3, [r3, r6]
 297 0020 0540     		ands	r5, r0
 298 0022 EB40     		lsrs	r3, r3, r5
 299 0024 1342     		tst	r3, r2
 300 0026 08D0     		beq	.L39
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 301              		.loc 1 551 0
 302 0028 064D     		ldr	r5, .L41+4
 303 002a 4301     		lsls	r3, r0, #5
 304 002c EB18     		adds	r3, r5, r3
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 305              		.loc 1 550 0
 306 002e 1B8B     		ldrh	r3, [r3, #24]
 307 0030 8B42     		cmp	r3, r1
 308 0032 02D9     		bls	.L39
 309              	.LVL14:
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 310              		.loc 1 578 0
 311 0034 FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 17


 312              	.LVL15:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 313              		.loc 1 554 0
 314 0038 2200     		movs	r2, r4
 315              	.LVL16:
 316              	.L39:
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 317              		.loc 1 594 0
 318 003a 1000     		movs	r0, r2
 319              		@ sp needed
 320 003c 70BD     		pop	{r4, r5, r6, pc}
 321              	.L42:
 322 003e C046     		.align	2
 323              	.L41:
 324 0040 00000000 		.word	CapSense_dsRam
 325 0044 00000000 		.word	CapSense_dsFlash
 326              		.cfi_endproc
 327              	.LFE5:
 328              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 329              		.section	.text.CapSense_ScanExt,"ax",%progbits
 330              		.align	1
 331              		.global	CapSense_ScanExt
 332              		.code	16
 333              		.thumb_func
 334              		.type	CapSense_ScanExt, %function
 335              	CapSense_ScanExt:
 336              	.LFB6:
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 18


 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 337              		.loc 1 642 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341              	.LVL17:
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 342              		.loc 1 645 0
 343 0000 094B     		ldr	r3, .L49
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 344              		.loc 1 642 0
 345 0002 10B5     		push	{r4, lr}
 346              		.cfi_def_cfa_offset 8
 347              		.cfi_offset 4, -8
 348              		.cfi_offset 14, -4
 349              		.loc 1 645 0
 350 0004 DC68     		ldr	r4, [r3, #12]
 351 0006 8023     		movs	r3, #128
 352 0008 5B02     		lsls	r3, r3, #9
 353 000a 1C40     		ands	r4, r3
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 19


 354              		.loc 1 648 0
 355 000c 1120     		movs	r0, #17
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 356              		.loc 1 645 0
 357 000e 002C     		cmp	r4, #0
 358 0010 09D1     		bne	.L44
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 359              		.loc 1 652 0
 360 0012 064B     		ldr	r3, .L49+4
 361 0014 1B78     		ldrb	r3, [r3]
 362 0016 012B     		cmp	r3, #1
 363 0018 03D1     		bne	.L48
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 364              		.loc 1 661 0
 365 001a FFF7FEFF 		bl	CapSense_CSDScanExt
 366              	.LVL18:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 367              		.loc 1 643 0
 368 001e 2000     		movs	r0, r4
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 369              		.loc 1 662 0
 370 0020 01E0     		b	.L44
 371              	.L48:
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 372              		.loc 1 670 0
 373 0022 0120     		movs	r0, #1
 374 0024 4042     		rsbs	r0, r0, #0
 375              	.L44:
 376              	.LVL19:
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 377              		.loc 1 675 0
 378              		@ sp needed
 379 0026 10BD     		pop	{r4, pc}
 380              	.L50:
 381              		.align	2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 20


 382              	.L49:
 383 0028 00000000 		.word	CapSense_dsRam
 384 002c 00000000 		.word	.LANCHOR0
 385              		.cfi_endproc
 386              	.LFE6:
 387              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 388              		.section	.text.CapSense_SetPinState,"ax",%progbits
 389              		.align	1
 390              		.global	CapSense_SetPinState
 391              		.code	16
 392              		.thumb_func
 393              		.type	CapSense_SetPinState, %function
 394              	CapSense_SetPinState:
 395              	.LFB8:
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 21


 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 22


 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 23


 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 396              		.loc 1 841 0
 397              		.cfi_startproc
 398              		@ args = 0, pretend = 0, frame = 0
 399              		@ frame_needed = 0, uses_anonymous_args = 0
 400              	.LVL20:
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 401              		.loc 1 866 0
 402 0000 1C23     		movs	r3, #28
 403 0002 5943     		muls	r1, r3
 404              	.LVL21:
 405 0004 1E4B     		ldr	r3, .L57
 406 0006 4001     		lsls	r0, r0, #5
 407              	.LVL22:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 408              		.loc 1 841 0
 409 0008 70B5     		push	{r4, r5, r6, lr}
 410              		.cfi_def_cfa_offset 16
 411              		.cfi_offset 4, -16
 412              		.cfi_offset 5, -12
 413              		.cfi_offset 6, -8
 414              		.cfi_offset 14, -4
 415              		.loc 1 866 0
 416 000a C458     		ldr	r4, [r0, r3]
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 24


 417              		.loc 1 841 0
 418 000c 1500     		movs	r5, r2
 419              		.loc 1 866 0
 420 000e 6418     		adds	r4, r4, r1
 421              	.LVL23:
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 422              		.loc 1 874 0
 423 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 424              	.LVL24:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 425              		.loc 1 875 0
 426 0014 0F22     		movs	r2, #15
 427 0016 267E     		ldrb	r6, [r4, #24]
 428 0018 2168     		ldr	r1, [r4]
 429 001a B240     		lsls	r2, r2, r6
 430 001c 0B68     		ldr	r3, [r1]
 431 001e 9343     		bics	r3, r2
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 432              		.loc 1 876 0
 433 0020 0722     		movs	r2, #7
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 434              		.loc 1 875 0
 435 0022 0B60     		str	r3, [r1]
 436              		.loc 1 876 0
 437 0024 A67E     		ldrb	r6, [r4, #26]
 438 0026 6168     		ldr	r1, [r4, #4]
 439 0028 B240     		lsls	r2, r2, r6
 440 002a 0B68     		ldr	r3, [r1]
 441 002c 9343     		bics	r3, r2
 442 002e 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 443              		.loc 1 877 0
 444 0030 FFF7FEFF 		bl	CyExitCriticalSection
 445              	.LVL25:
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 446              		.loc 1 879 0
 447 0034 012D     		cmp	r5, #1
 448 0036 18D0     		beq	.L53
 449 0038 002D     		cmp	r5, #0
 450 003a 05D0     		beq	.L54
 451 003c 032D     		cmp	r5, #3
 452 003e 1ED1     		bne	.L51
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 25


 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 453              		.loc 1 898 0
 454 0040 2000     		movs	r0, r4
 455 0042 FFF7FEFF 		bl	CapSense_CSDConnectSns
 456              	.LVL26:
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 457              		.loc 1 935 0
 458 0046 1AE0     		b	.L51
 459              	.LVL27:
 460              	.L54:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 26


 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 461              		.loc 1 883 0
 462 0048 FFF7FEFF 		bl	CyEnterCriticalSection
 463              	.LVL28:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 464              		.loc 1 884 0
 465 004c 0623     		movs	r3, #6
 466 004e A57E     		ldrb	r5, [r4, #26]
 467              	.LVL29:
 468 0050 6168     		ldr	r1, [r4, #4]
 469 0052 AB40     		lsls	r3, r3, r5
 470 0054 0A68     		ldr	r2, [r1]
 471 0056 1343     		orrs	r3, r2
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 472              		.loc 1 885 0
 473 0058 0122     		movs	r2, #1
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 474              		.loc 1 884 0
 475 005a 0B60     		str	r3, [r1]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 476              		.loc 1 885 0
 477 005c A168     		ldr	r1, [r4, #8]
 478 005e 647E     		ldrb	r4, [r4, #25]
 479              	.LVL30:
 480 0060 0B68     		ldr	r3, [r1]
 481 0062 A240     		lsls	r2, r2, r4
 482 0064 9343     		bics	r3, r2
 483 0066 0B60     		str	r3, [r1]
 484 0068 07E0     		b	.L56
 485              	.LVL31:
 486              	.L53:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 487              		.loc 1 890 0
 488 006a FFF7FEFF 		bl	CyEnterCriticalSection
 489              	.LVL32:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 490              		.loc 1 891 0
 491 006e 617E     		ldrb	r1, [r4, #25]
 492 0070 A268     		ldr	r2, [r4, #8]
 493 0072 8D40     		lsls	r5, r5, r1
 494              	.LVL33:
 495 0074 1368     		ldr	r3, [r2]
 496 0076 AB43     		bics	r3, r5
 497 0078 1360     		str	r3, [r2]
 498              	.LVL34:
 499              	.L56:
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 500              		.loc 1 892 0
 501 007a FFF7FEFF 		bl	CyExitCriticalSection
 502              	.LVL35:
 503              	.L51:
 504              		.loc 1 935 0
 505              		@ sp needed
 506 007e 70BD     		pop	{r4, r5, r6, pc}
 507              	.L58:
 508              		.align	2
 509              	.L57:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 27


 510 0080 00000000 		.word	CapSense_dsFlash
 511              		.cfi_endproc
 512              	.LFE8:
 513              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 514              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 515              		.align	1
 516              		.global	CapSense_SsSetAllIOsState
 517              		.code	16
 518              		.thumb_func
 519              		.type	CapSense_SsSetAllIOsState, %function
 520              	CapSense_SsSetAllIOsState:
 521              	.LFB11:
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 28


 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 29


1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 30


1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 31


1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 522              		.loc 1 1167 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 8
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              	.LVL36:
 527 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 528              		.cfi_def_cfa_offset 32
 529              		.cfi_offset 0, -32
 530              		.cfi_offset 1, -28
 531              		.cfi_offset 2, -24
 532              		.cfi_offset 4, -20
 533              		.cfi_offset 5, -16
 534              		.cfi_offset 6, -12
 535              		.cfi_offset 7, -8
 536              		.cfi_offset 14, -4
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
 537              		.loc 1 1180 0
 538 0002 0128     		cmp	r0, #1
 539 0004 03D0     		beq	.L61
 540 0006 0228     		cmp	r0, #2
 541 0008 04D1     		bne	.L68
 542              	.LVL37:
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 32


1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 543              		.loc 1 1192 0
 544 000a 0525     		movs	r5, #5
 545 000c 00E0     		b	.L67
 546              	.LVL38:
 547              	.L61:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 548              		.loc 1 1188 0
 549 000e 0025     		movs	r5, #0
 550              	.L67:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 551              		.loc 1 1191 0
 552 0010 0026     		movs	r6, #0
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 553              		.loc 1 1193 0
 554 0012 01E0     		b	.L60
 555              	.L68:
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 556              		.loc 1 1184 0
 557 0014 0025     		movs	r5, #0
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 558              		.loc 1 1183 0
 559 0016 0626     		movs	r6, #6
 560              	.L60:
 561              	.LVL39:
 562 0018 134C     		ldr	r4, .L69
 563              	.LVL40:
 564              	.L63:
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 565              		.loc 1 1204 0 discriminator 3
 566 001a FFF7FEFF 		bl	CyEnterCriticalSection
 567              	.LVL41:
 568 001e 0190     		str	r0, [sp, #4]
 569              	.LVL42:
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 570              		.loc 1 1211 0 discriminator 3
 571 0020 0720     		movs	r0, #7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 33


1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 572              		.loc 1 1206 0 discriminator 3
 573 0022 231F     		subs	r3, r4, #4
 574              	.LVL43:
 575 0024 1968     		ldr	r1, [r3]
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 576              		.loc 1 1207 0 discriminator 3
 577 0026 E268     		ldr	r2, [r4, #12]
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 578              		.loc 1 1206 0 discriminator 3
 579 0028 0B68     		ldr	r3, [r1]
 580              	.LVL44:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 581              		.loc 1 1207 0 discriminator 3
 582 002a 9343     		bics	r3, r2
 583              	.LVL45:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 584              		.loc 1 1208 0 discriminator 3
 585 002c 0B60     		str	r3, [r1]
 586              		.loc 1 1211 0 discriminator 3
 587 002e A77D     		ldrb	r7, [r4, #22]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 588              		.loc 1 1210 0 discriminator 3
 589 0030 2268     		ldr	r2, [r4]
 590              		.loc 1 1211 0 discriminator 3
 591 0032 B840     		lsls	r0, r0, r7
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 592              		.loc 1 1210 0 discriminator 3
 593 0034 1268     		ldr	r2, [r2]
 594              	.LVL46:
 595              		.loc 1 1211 0 discriminator 3
 596 0036 8243     		bics	r2, r0
 597              	.LVL47:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 598              		.loc 1 1212 0 discriminator 3
 599 0038 3000     		movs	r0, r6
 600 003a B840     		lsls	r0, r0, r7
 601 003c 0243     		orrs	r2, r0
 602              	.LVL48:
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 603              		.loc 1 1213 0 discriminator 3
 604 003e 2068     		ldr	r0, [r4]
 605 0040 0260     		str	r2, [r0]
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
 606              		.loc 1 1215 0 discriminator 3
 607 0042 2800     		movs	r0, r5
 608 0044 227D     		ldrb	r2, [r4, #20]
 609              	.LVL49:
 610 0046 9040     		lsls	r0, r0, r2
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
 611              		.loc 1 1218 0 discriminator 3
 612 0048 6268     		ldr	r2, [r4, #4]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 613              		.loc 1 1215 0 discriminator 3
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 34


 614 004a 0343     		orrs	r3, r0
 615              	.LVL50:
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 616              		.loc 1 1216 0 discriminator 3
 617 004c 0B60     		str	r3, [r1]
 618              	.LVL51:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 619              		.loc 1 1219 0 discriminator 3
 620 004e 2169     		ldr	r1, [r4, #16]
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 621              		.loc 1 1218 0 discriminator 3
 622 0050 1368     		ldr	r3, [r2]
 623              	.LVL52:
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 624              		.loc 1 1222 0 discriminator 3
 625 0052 0198     		ldr	r0, [sp, #4]
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 626              		.loc 1 1219 0 discriminator 3
 627 0054 8B43     		bics	r3, r1
 628              	.LVL53:
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 629              		.loc 1 1220 0 discriminator 3
 630 0056 1360     		str	r3, [r2]
 631              	.LVL54:
 632              		.loc 1 1222 0 discriminator 3
 633 0058 FFF7FEFF 		bl	CyExitCriticalSection
 634              	.LVL55:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 635              		.loc 1 1202 0 discriminator 3
 636 005c 034B     		ldr	r3, .L69+4
 637 005e 1C34     		adds	r4, r4, #28
 638              	.LVL56:
 639 0060 9C42     		cmp	r4, r3
 640 0062 DAD1     		bne	.L63
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 641              		.loc 1 1238 0
 642              		@ sp needed
 643              	.LVL57:
 644              	.LVL58:
 645              	.LVL59:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 35


 646 0064 F7BD     		pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 647              	.L70:
 648 0066 C046     		.align	2
 649              	.L69:
 650 0068 04000000 		.word	CapSense_ioList+4
 651 006c BC030000 		.word	CapSense_ioList+956
 652              		.cfi_endproc
 653              	.LFE11:
 654              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 655              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 656              		.align	1
 657              		.global	CapSense_SsPostAllWidgetsScan
 658              		.code	16
 659              		.thumb_func
 660              		.type	CapSense_SsPostAllWidgetsScan, %function
 661              	CapSense_SsPostAllWidgetsScan:
 662              	.LFB12:
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 36


1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 663              		.loc 1 1317 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667 0000 10B5     		push	{r4, lr}
 668              		.cfi_def_cfa_offset 8
 669              		.cfi_offset 4, -8
 670              		.cfi_offset 14, -4
 671              	.L76:
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 37


1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
 672              		.loc 1 1328 0
 673 0002 174C     		ldr	r4, .L77
 674 0004 A378     		ldrb	r3, [r4, #2]
 675 0006 0133     		adds	r3, r3, #1
 676 0008 DBB2     		uxtb	r3, r3
 677 000a A370     		strb	r3, [r4, #2]
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
 678              		.loc 1 1330 0
 679 000c A078     		ldrb	r0, [r4, #2]
 680 000e C0B2     		uxtb	r0, r0
 681 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 682              	.LVL60:
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
 683              		.loc 1 1332 0
 684 0014 0028     		cmp	r0, #0
 685 0016 06D1     		bne	.L72
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 686              		.loc 1 1334 0
 687 0018 A378     		ldrb	r3, [r4, #2]
 688 001a 212B     		cmp	r3, #33
 689 001c 00D1     		bne	.L73
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
 690              		.loc 1 1337 0
 691 001e 6070     		strb	r0, [r4, #1]
 692              	.L73:
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
 693              		.loc 1 1339 0
 694 0020 FFF7FEFF 		bl	CapSense_Scan
 695              	.LVL61:
 696 0024 1BE0     		b	.L71
 697              	.LVL62:
 698              	.L72:
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
 699              		.loc 1 1341 0
 700 0026 A278     		ldrb	r2, [r4, #2]
 701 0028 0E4B     		ldr	r3, .L77+4
 702 002a 0006     		lsls	r0, r0, #24
 703              	.LVL63:
 704 002c 212A     		cmp	r2, #33
 705 002e 0ED1     		bne	.L75
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 38


1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
 706              		.loc 1 1357 0
 707 0030 8021     		movs	r1, #128
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 708              		.loc 1 1355 0
 709 0032 1A89     		ldrh	r2, [r3, #8]
 710 0034 0132     		adds	r2, r2, #1
 711 0036 1A81     		strh	r2, [r3, #8]
 712              		.loc 1 1357 0
 713 0038 DA68     		ldr	r2, [r3, #12]
 714 003a 8A43     		bics	r2, r1
 715 003c DA60     		str	r2, [r3, #12]
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
 716              		.loc 1 1360 0
 717 003e DA68     		ldr	r2, [r3, #12]
 718 0040 1202     		lsls	r2, r2, #8
 719 0042 120A     		lsrs	r2, r2, #8
 720 0044 DA60     		str	r2, [r3, #12]
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 721              		.loc 1 1361 0
 722 0046 DA68     		ldr	r2, [r3, #12]
 723 0048 1043     		orrs	r0, r2
 724 004a D860     		str	r0, [r3, #12]
 725              	.LVL64:
 726 004c 07E0     		b	.L71
 727              	.LVL65:
 728              	.L75:
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
 729              		.loc 1 1369 0
 730 004e DA68     		ldr	r2, [r3, #12]
 731 0050 1202     		lsls	r2, r2, #8
 732 0052 120A     		lsrs	r2, r2, #8
 733 0054 DA60     		str	r2, [r3, #12]
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 734              		.loc 1 1370 0
 735 0056 DA68     		ldr	r2, [r3, #12]
 736 0058 1043     		orrs	r0, r2
 737 005a D860     		str	r0, [r3, #12]
 738 005c D1E7     		b	.L76
 739              	.L71:
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 39


1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 740              		.loc 1 1374 0
 741              		@ sp needed
 742 005e 10BD     		pop	{r4, pc}
 743              	.L78:
 744              		.align	2
 745              	.L77:
 746 0060 00000000 		.word	.LANCHOR0
 747 0064 00000000 		.word	CapSense_dsRam
 748              		.cfi_endproc
 749              	.LFE12:
 750              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 751              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 752              		.align	1
 753              		.global	CapSense_SsIsrInitialize
 754              		.code	16
 755              		.thumb_func
 756              		.type	CapSense_SsIsrInitialize, %function
 757              	CapSense_SsIsrInitialize:
 758              	.LFB13:
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 759              		.loc 1 1394 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 0
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              	.LVL66:
 764 0000 10B5     		push	{r4, lr}
 765              		.cfi_def_cfa_offset 8
 766              		.cfi_offset 4, -8
 767              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 768              		.loc 1 1395 0
 769 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 770              	.LVL67:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 771              		.loc 1 1396 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 40


 772              		@ sp needed
 773 0006 10BD     		pop	{r4, pc}
 774              		.cfi_endproc
 775              	.LFE13:
 776              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 777              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 778              		.align	1
 779              		.global	CapSense_SsSetModClkClockDivider
 780              		.code	16
 781              		.thumb_func
 782              		.type	CapSense_SsSetModClkClockDivider, %function
 783              	CapSense_SsSetModClkClockDivider:
 784              	.LFB14:
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 785              		.loc 1 1417 0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 790              	.LVL68:
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
 791              		.loc 1 1420 0
 792 0000 064A     		ldr	r2, .L83
 793 0002 074B     		ldr	r3, .L83+4
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
 794              		.loc 1 1430 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 41


 795 0004 0138     		subs	r0, r0, #1
 796              	.LVL69:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 797              		.loc 1 1420 0
 798 0006 1A60     		str	r2, [r3]
 799              		.loc 1 1430 0
 800 0008 064A     		ldr	r2, .L83+8
 801 000a 0002     		lsls	r0, r0, #8
 802              	.LVL70:
 803 000c 1060     		str	r0, [r2]
 804              	.L81:
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
 805              		.loc 1 1433 0 discriminator 1
 806 000e 1A68     		ldr	r2, [r3]
 807 0010 002A     		cmp	r2, #0
 808 0012 FCDB     		blt	.L81
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
 809              		.loc 1 1439 0
 810 0014 044A     		ldr	r2, .L83+12
 811 0016 024B     		ldr	r3, .L83+4
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 812              		.loc 1 1464 0
 813              		@ sp needed
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 814              		.loc 1 1439 0
 815 0018 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 42


 816              		.loc 1 1464 0
 817 001a 7047     		bx	lr
 818              	.L84:
 819              		.align	2
 820              	.L83:
 821 001c 40000040 		.word	1073741888
 822 0020 00000140 		.word	1073807360
 823 0024 00030140 		.word	1073808128
 824 0028 40FF0080 		.word	-2147418304
 825              		.cfi_endproc
 826              	.LFE14:
 827              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 828              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 829              		.align	1
 830              		.global	CapSense_SsSetSnsClockDivider
 831              		.code	16
 832              		.thumb_func
 833              		.type	CapSense_SsSetSnsClockDivider, %function
 834              	CapSense_SsSetSnsClockDivider:
 835              	.LFB15:
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 836              		.loc 1 1485 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841              	.LVL71:
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
 842              		.loc 1 1494 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 43


 843 0000 034A     		ldr	r2, .L86
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 844              		.loc 1 1496 0
 845 0002 0138     		subs	r0, r0, #1
 846              	.LVL72:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 847              		.loc 1 1494 0
 848 0004 1368     		ldr	r3, [r2]
 849              	.LVL73:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 44


1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 850              		.loc 1 1546 0
 851              		@ sp needed
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 852              		.loc 1 1495 0
 853 0006 1B0B     		lsrs	r3, r3, #12
 854              	.LVL74:
 855 0008 1B03     		lsls	r3, r3, #12
 856              	.LVL75:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 857              		.loc 1 1496 0
 858 000a 1843     		orrs	r0, r3
 859              	.LVL76:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 860              		.loc 1 1497 0
 861 000c 1060     		str	r0, [r2]
 862              		.loc 1 1546 0
 863 000e 7047     		bx	lr
 864              	.L87:
 865              		.align	2
 866              	.L86:
 867 0010 00020B40 		.word	1074463232
 868              		.cfi_endproc
 869              	.LFE15:
 870              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 871              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 872              		.align	1
 873              		.global	CapSense_SsSetClockDividers
 874              		.code	16
 875              		.thumb_func
 876              		.type	CapSense_SsSetClockDividers, %function
 877              	CapSense_SsSetClockDividers:
 878              	.LFB16:
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 45


1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 879              		.loc 1 1569 0
 880              		.cfi_startproc
 881              		@ args = 0, pretend = 0, frame = 0
 882              		@ frame_needed = 0, uses_anonymous_args = 0
 883              	.LVL77:
 884 0000 10B5     		push	{r4, lr}
 885              		.cfi_def_cfa_offset 8
 886              		.cfi_offset 4, -8
 887              		.cfi_offset 14, -4
 888              		.loc 1 1569 0
 889 0002 0400     		movs	r4, r0
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
 890              		.loc 1 1571 0
 891 0004 0800     		movs	r0, r1
 892              	.LVL78:
 893 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 894              	.LVL79:
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
 895              		.loc 1 1574 0
 896 000a 2000     		movs	r0, r4
 897 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 898              	.LVL80:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 899              		.loc 1 1575 0
 900              		@ sp needed
 901              	.LVL81:
 902 0010 10BD     		pop	{r4, pc}
 903              		.cfi_endproc
 904              	.LFE16:
 905              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 906              		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 907              		.align	1
 908              		.global	CapSense_CalibrateWidget
 909              		.code	16
 910              		.thumb_func
 911              		.type	CapSense_CalibrateWidget, %function
 912              	CapSense_CalibrateWidget:
 913              	.LFB17:
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 46


1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 914              		.loc 1 1621 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              	.LVL82:
 919 0000 10B5     		push	{r4, lr}
 920              		.cfi_def_cfa_offset 8
 921              		.cfi_offset 4, -8
 922              		.cfi_offset 14, -4
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
 923              		.loc 1 1626 0
 924 0002 2128     		cmp	r0, #33
 925 0004 01D9     		bls	.L90
 926 0006 0120     		movs	r0, #1
 927              	.LVL83:
 928 0008 02E0     		b	.L92
 929              	.LVL84:
 930              	.L90:
 931              	.LBB10:
 932              	.LBB11:
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 47


1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 48


 933              		.loc 1 1685 0
 934 000a 4621     		movs	r1, #70
 935 000c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 936              	.LVL85:
 937              	.L92:
 938              	.LBE11:
 939              	.LBE10:
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 940              		.loc 1 1701 0
 941              		@ sp needed
 942 0010 10BD     		pop	{r4, pc}
 943              		.cfi_endproc
 944              	.LFE17:
 945              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 946              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 947              		.align	1
 948              		.global	CapSense_CalibrateAllWidgets
 949              		.code	16
 950              		.thumb_func
 951              		.type	CapSense_CalibrateAllWidgets, %function
 952              	CapSense_CalibrateAllWidgets:
 953              	.LFB18:
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 49


1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 954              		.loc 1 1738 0
 955              		.cfi_startproc
 956              		@ args = 0, pretend = 0, frame = 0
 957              		@ frame_needed = 0, uses_anonymous_args = 0
 958              	.LVL86:
 959 0000 70B5     		push	{r4, r5, r6, lr}
 960              		.cfi_def_cfa_offset 16
 961              		.cfi_offset 4, -16
 962              		.cfi_offset 5, -12
 963              		.cfi_offset 6, -8
 964              		.cfi_offset 14, -4
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 965              		.loc 1 1742 0
 966 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 967              		.loc 1 1739 0
 968 0004 2500     		movs	r5, r4
 969              	.LVL87:
 970              	.L94:
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
 971              		.loc 1 1744 0 discriminator 3
 972 0006 2000     		movs	r0, r4
 973 0008 FFF7FEFF 		bl	CapSense_CalibrateWidget
 974              	.LVL88:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 975              		.loc 1 1742 0 discriminator 3
 976 000c 0134     		adds	r4, r4, #1
 977              	.LVL89:
 978              		.loc 1 1744 0 discriminator 3
 979 000e 0543     		orrs	r5, r0
 980              	.LVL90:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 981              		.loc 1 1742 0 discriminator 3
 982 0010 222C     		cmp	r4, #34
 983 0012 F8D1     		bne	.L94
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 50


1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984              		.loc 1 1748 0
 985 0014 2800     		movs	r0, r5
 986              		@ sp needed
 987              	.LVL91:
 988              	.LVL92:
 989 0016 70BD     		pop	{r4, r5, r6, pc}
 990              		.cfi_endproc
 991              	.LFE18:
 992              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 993              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 994              		.align	1
 995              		.global	CapSense_SsCSDGetColSnsClkDivider
 996              		.code	16
 997              		.thumb_func
 998              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 999              	CapSense_SsCSDGetColSnsClkDivider:
 1000              	.LFB25:
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 51


1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 52


1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 53


1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 54


1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 55


2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 56


2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 57


2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 58


2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 59


2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 60


2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 61


2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 62


2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 63


2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 64


2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 65


2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 66


2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 67


2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 68


2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1001              		.loc 1 2793 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006              	.LVL93:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1007              		.loc 1 2800 0
 1008 0000 024B     		ldr	r3, .L97
 1009 0002 4001     		lsls	r0, r0, #5
 1010              	.LVL94:
 1011 0004 1818     		adds	r0, r3, r0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 69


2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1012              		.loc 1 2803 0
 1013 0006 4368     		ldr	r3, [r0, #4]
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1014              		.loc 1 2811 0
 1015              		@ sp needed
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1016              		.loc 1 2810 0
 1017 0008 9889     		ldrh	r0, [r3, #12]
 1018              		.loc 1 2811 0
 1019 000a 7047     		bx	lr
 1020              	.L98:
 1021              		.align	2
 1022              	.L97:
 1023 000c 00000000 		.word	CapSense_dsFlash
 1024              		.cfi_endproc
 1025              	.LFE25:
 1026              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1027              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1028              		.align	1
 1029              		.global	CapSense_SsCSDCalcPrsSize
 1030              		.code	16
 1031              		.thumb_func
 1032              		.type	CapSense_SsCSDCalcPrsSize, %function
 1033              	CapSense_SsCSDCalcPrsSize:
 1034              	.LFB26:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 70


2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1035              		.loc 1 2881 0
 1036              		.cfi_startproc
 1037              		@ args = 0, pretend = 0, frame = 0
 1038              		@ frame_needed = 0, uses_anonymous_args = 0
 1039              		@ link register save eliminated.
 1040              	.LVL95:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 71


2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1041              		.loc 1 2897 0
 1042 0000 0123     		movs	r3, #1
 1043 0002 8B40     		lsls	r3, r3, r1
 1044 0004 0103     		lsls	r1, r0, #12
 1045              	.LVL96:
 1046 0006 013B     		subs	r3, r3, #1
 1047 0008 091A     		subs	r1, r1, r0
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
 1048              		.loc 1 2900 0
 1049 000a 0622     		movs	r2, #6
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1050              		.loc 1 2897 0
 1051 000c 9942     		cmp	r1, r3
 1052 000e 05D9     		bls	.L100
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1053              		.loc 1 2902 0
 1054 0010 F932     		adds	r2, r2, #249
 1055 0012 5043     		muls	r0, r2
 1056              	.LVL97:
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1057              		.loc 1 2905 0
 1058 0014 FA3A     		subs	r2, r2, #250
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1059              		.loc 1 2902 0
 1060 0016 8342     		cmp	r3, r0
 1061 0018 00D2     		bcs	.L100
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1062              		.loc 1 2910 0
 1063 001a 0022     		movs	r2, #0
 1064              	.L100:
 1065              	.LVL98:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1066              		.loc 1 2913 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 72


 1067 001c D0B2     		uxtb	r0, r2
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1068              		.loc 1 2914 0
 1069              		@ sp needed
 1070 001e 7047     		bx	lr
 1071              		.cfi_endproc
 1072              	.LFE26:
 1073              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1074              		.global	__aeabi_uidivmod
 1075              		.global	__aeabi_uidiv
 1076              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1077              		.align	1
 1078              		.code	16
 1079              		.thumb_func
 1080              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1081              	CapSense_SsSetWidgetSenseClkSrc:
 1082              	.LFB22:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1083              		.loc 1 2458 0
 1084              		.cfi_startproc
 1085              		@ args = 0, pretend = 0, frame = 0
 1086              		@ frame_needed = 0, uses_anonymous_args = 0
 1087              	.LVL99:
 1088 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1089              		.cfi_def_cfa_offset 24
 1090              		.cfi_offset 3, -24
 1091              		.cfi_offset 4, -20
 1092              		.cfi_offset 5, -16
 1093              		.cfi_offset 6, -12
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096              	.LBB18:
 1097              	.LBB19:
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
 1098              		.loc 1 2800 0
 1099 0002 2A4B     		ldr	r3, .L129
 1100 0004 4001     		lsls	r0, r0, #5
 1101              	.LVL100:
 1102 0006 1818     		adds	r0, r3, r0
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
 1103              		.loc 1 2803 0
 1104 0008 4368     		ldr	r3, [r0, #4]
 1105              	.LBE19:
 1106              	.LBE18:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1107              		.loc 1 2458 0
 1108 000a 0C00     		movs	r4, r1
 1109              	.LBB21:
 1110              	.LBB20:
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
 1111              		.loc 1 2803 0
 1112 000c 9E89     		ldrh	r6, [r3, #12]
 1113              	.LVL101:
 1114              	.LBE20:
 1115              	.LBE21:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1116              		.loc 1 2473 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 73


 1117 000e 0988     		ldrh	r1, [r1]
 1118              	.LVL102:
 1119 0010 0022     		movs	r2, #0
 1120 0012 3000     		movs	r0, r6
 1121 0014 FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1122              	.LVL103:
 1123 0018 0700     		movs	r7, r0
 1124              	.LVL104:
 1125              	.LBB22:
 1126              	.LBB23:
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
 1127              		.loc 1 2624 0
 1128 001a 9F2E     		cmp	r6, #159
 1129 001c 27D9     		bls	.L104
 1130 001e 244B     		ldr	r3, .L129+4
 1131 0020 9842     		cmp	r0, r3
 1132 0022 06D9     		bls	.L105
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
 1133              		.loc 1 2625 0
 1134 0024 2349     		ldr	r1, .L129+8
 1135 0026 FFF7FEFF 		bl	__aeabi_uidivmod
 1136              	.LVL105:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1137              		.loc 1 2628 0
 1138 002a 0425     		movs	r5, #4
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
 1139              		.loc 1 2625 0
 1140 002c 0029     		cmp	r1, #0
 1141 002e 28D0     		beq	.L112
 1142 0030 03E0     		b	.L107
 1143              	.LVL106:
 1144              	.L105:
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
 1145              		.loc 1 2630 0
 1146 0032 FF23     		movs	r3, #255
 1147 0034 5B00     		lsls	r3, r3, #1
 1148 0036 9842     		cmp	r0, r3
 1149 0038 07D9     		bls	.L108
 1150              	.LVL107:
 1151              	.L107:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
 1152              		.loc 1 2631 0
 1153 003a 1F49     		ldr	r1, .L129+12
 1154 003c 3800     		movs	r0, r7
 1155 003e FFF7FEFF 		bl	__aeabi_uidivmod
 1156              	.LVL108:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1157              		.loc 1 2634 0
 1158 0042 0325     		movs	r5, #3
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
 1159              		.loc 1 2631 0
 1160 0044 0029     		cmp	r1, #0
 1161 0046 1CD0     		beq	.L112
 1162 0048 01E0     		b	.L109
 1163              	.LVL109:
 1164              	.L108:
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 74


 1165              		.loc 1 2636 0
 1166 004a 7E28     		cmp	r0, #126
 1167 004c 07D9     		bls	.L110
 1168              	.LVL110:
 1169              	.L109:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
 1170              		.loc 1 2637 0
 1171 004e 7F21     		movs	r1, #127
 1172 0050 3800     		movs	r0, r7
 1173 0052 FFF7FEFF 		bl	__aeabi_uidivmod
 1174              	.LVL111:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1175              		.loc 1 2640 0
 1176 0056 0225     		movs	r5, #2
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
 1177              		.loc 1 2637 0
 1178 0058 0029     		cmp	r1, #0
 1179 005a 12D0     		beq	.L112
 1180 005c 01E0     		b	.L111
 1181              	.LVL112:
 1182              	.L110:
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 1183              		.loc 1 2642 0
 1184 005e 3E28     		cmp	r0, #62
 1185 0060 05D9     		bls	.L104
 1186              	.LVL113:
 1187              	.L111:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
 1188              		.loc 1 2643 0
 1189 0062 3F21     		movs	r1, #63
 1190 0064 3800     		movs	r0, r7
 1191 0066 FFF7FEFF 		bl	__aeabi_uidivmod
 1192              	.LVL114:
 1193 006a 0029     		cmp	r1, #0
 1194 006c 1CD0     		beq	.L127
 1195              	.L104:
 1196              	.LVL115:
 1197              	.LBE23:
 1198              	.LBE22:
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1199              		.loc 1 2482 0
 1200 006e 2188     		ldrh	r1, [r4]
 1201 0070 7000     		lsls	r0, r6, #1
 1202 0072 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1203              	.LVL116:
 1204              	.LBB25:
 1205              	.LBB26:
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1206              		.loc 1 2702 0
 1207 0076 421E     		subs	r2, r0, #1
 1208 0078 D2B2     		uxtb	r2, r2
 1209              	.LBE26:
 1210              	.LBE25:
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1211              		.loc 1 2482 0
 1212 007a 0500     		movs	r5, r0
 1213              	.LVL117:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 75


 1214              	.LBB28:
 1215              	.LBB27:
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1216              		.loc 1 2753 0
 1217 007c 0023     		movs	r3, #0
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1218              		.loc 1 2702 0
 1219 007e 032A     		cmp	r2, #3
 1220 0080 0ED8     		bhi	.L115
 1221              	.LVL118:
 1222              	.L112:
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 1223              		.loc 1 2737 0
 1224 0082 C820     		movs	r0, #200
 1225 0084 3100     		movs	r1, r6
 1226 0086 C000     		lsls	r0, r0, #3
 1227 0088 FFF7FEFF 		bl	__aeabi_uidiv
 1228              	.LVL119:
2738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1229              		.loc 1 2738 0
 1230 008c 0023     		movs	r3, #0
 1231              	.LVL120:
 1232              	.L113:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1233              		.loc 1 2740 0
 1234 008e 0928     		cmp	r0, #9
 1235 0090 02D8     		bhi	.L128
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 1236              		.loc 1 2742 0
 1237 0092 0133     		adds	r3, r3, #1
 1238              	.LVL121:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1239              		.loc 1 2743 0
 1240 0094 4000     		lsls	r0, r0, #1
 1241              	.LVL122:
 1242 0096 FAE7     		b	.L113
 1243              	.L128:
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1244              		.loc 1 2748 0
 1245 0098 0A38     		subs	r0, r0, #10
 1246              	.LVL123:
 1247 009a 421E     		subs	r2, r0, #1
 1248 009c 9041     		sbcs	r0, r0, r2
 1249              	.LVL124:
 1250 009e 1B1A     		subs	r3, r3, r0
 1251              	.LVL125:
 1252              	.L115:
 1253              	.LBE27:
 1254              	.LBE28:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1255              		.loc 1 2499 0
 1256 00a0 1B01     		lsls	r3, r3, #4
 1257 00a2 2B43     		orrs	r3, r5
 1258 00a4 A373     		strb	r3, [r4, #14]
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1259              		.loc 1 2534 0
 1260              		@ sp needed
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 76


 1261              	.LVL126:
 1262              	.LVL127:
 1263 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1264              	.LVL128:
 1265              	.L127:
 1266              	.LBB29:
 1267              	.LBB24:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1268              		.loc 1 2646 0
 1269 00a8 0125     		movs	r5, #1
 1270              	.LVL129:
 1271 00aa EAE7     		b	.L112
 1272              	.L130:
 1273              		.align	2
 1274              	.L129:
 1275 00ac 00000000 		.word	CapSense_dsFlash
 1276 00b0 FE030000 		.word	1022
 1277 00b4 FF030000 		.word	1023
 1278 00b8 FF010000 		.word	511
 1279              	.LBE24:
 1280              	.LBE29:
 1281              		.cfi_endproc
 1282              	.LFE22:
 1283              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1284              		.section	.text.CapSense_SsAutoTuneWidget,"ax",%progbits
 1285              		.align	1
 1286              		.global	CapSense_SsAutoTuneWidget
 1287              		.code	16
 1288              		.thumb_func
 1289              		.type	CapSense_SsAutoTuneWidget, %function
 1290              	CapSense_SsAutoTuneWidget:
 1291              	.LFB19:
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1292              		.loc 1 1781 0
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 40
 1295              		@ frame_needed = 0, uses_anonymous_args = 0
 1296              	.LVL130:
 1297 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1298              		.cfi_def_cfa_offset 20
 1299              		.cfi_offset 4, -20
 1300              		.cfi_offset 5, -16
 1301              		.cfi_offset 6, -12
 1302              		.cfi_offset 7, -8
 1303              		.cfi_offset 14, -4
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 1304              		.loc 1 1801 0
 1305 0002 3C4F     		ldr	r7, .L141
 1306 0004 4301     		lsls	r3, r0, #5
 1307 0006 FF18     		adds	r7, r7, r3
 1308              	.LVL131:
1802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1309              		.loc 1 1802 0
 1310 0008 BB68     		ldr	r3, [r7, #8]
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1311              		.loc 1 1781 0
 1312 000a 8BB0     		sub	sp, sp, #44
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 77


 1313              		.cfi_def_cfa_offset 64
1802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1314              		.loc 1 1802 0
 1315 000c 0093     		str	r3, [sp]
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1316              		.loc 1 1807 0
 1317 000e 3A4B     		ldr	r3, .L141+4
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1318              		.loc 1 1781 0
 1319 0010 0600     		movs	r6, r0
1807:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1320              		.loc 1 1807 0
 1321 0012 4433     		adds	r3, r3, #68
 1322 0014 1978     		ldrb	r1, [r3]
 1323 0016 3948     		ldr	r0, .L141+8
 1324              	.LVL132:
 1325 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1326              	.LVL133:
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1327              		.loc 1 1852 0
 1328 001c FA23     		movs	r3, #250
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
 1329              		.loc 1 1851 0
 1330 001e 03AC     		add	r4, sp, #12
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
 1331              		.loc 1 1852 0
 1332 0020 9B00     		lsls	r3, r3, #2
 1333 0022 2382     		strh	r3, [r4, #16]
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
 1334              		.loc 1 1853 0
 1335 0024 364B     		ldr	r3, .L141+12
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
 1336              		.loc 1 1801 0
 1337 0026 7D68     		ldr	r5, [r7, #4]
 1338              	.LVL134:
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
 1339              		.loc 1 1851 0
 1340 0028 E082     		strh	r0, [r4, #22]
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
 1341              		.loc 1 1853 0
 1342 002a 6382     		strh	r3, [r4, #18]
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
 1343              		.loc 1 1854 0
 1344 002c 2B8A     		ldrh	r3, [r5, #16]
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1345              		.loc 1 1866 0
 1346 002e 3549     		ldr	r1, .L141+16
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
 1347              		.loc 1 1854 0
 1348 0030 A382     		strh	r3, [r4, #20]
1855:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1349              		.loc 1 1855 0
 1350 0032 2B00     		movs	r3, r5
 1351 0034 1233     		adds	r3, r3, #18
 1352 0036 E360     		str	r3, [r4, #12]
1864:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1353              		.loc 1 1864 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 78


 1354 0038 0C23     		movs	r3, #12
 1355 003a 2B80     		strh	r3, [r5]
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1356              		.loc 1 1866 0
 1357 003c FFF7FEFF 		bl	__aeabi_uidiv
 1358              	.LVL135:
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1359              		.loc 1 1867 0
 1360 0040 0023     		movs	r3, #0
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
 1361              		.loc 1 1866 0
 1362 0042 A881     		strh	r0, [r5, #12]
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1363              		.loc 1 1867 0
 1364 0044 AB73     		strb	r3, [r5, #14]
1875:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1365              		.loc 1 1875 0
 1366 0046 4621     		movs	r1, #70
 1367 0048 3000     		movs	r0, r6
 1368 004a FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1369              	.LVL136:
1793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1370              		.loc 1 1793 0
 1371 004e 0023     		movs	r3, #0
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
 1372              		.loc 1 1791 0
 1373 0050 1A00     		movs	r2, r3
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1374              		.loc 1 1878 0
 1375 0052 1900     		movs	r1, r3
 1376 0054 FF7E     		ldrb	r7, [r7, #27]
 1377              	.LVL137:
 1378              	.L132:
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1379              		.loc 1 1878 0 is_stmt 0 discriminator 1
 1380 0056 B942     		cmp	r1, r7
 1381 0058 0BD2     		bcs	.L139
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1382              		.loc 1 1881 0 is_stmt 1
 1383 005a 0098     		ldr	r0, [sp]
 1384 005c 407A     		ldrb	r0, [r0, #9]
 1385 005e 8342     		cmp	r3, r0
 1386 0060 02D2     		bcs	.L133
 1387              	.LVL138:
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1388              		.loc 1 1887 0
 1389 0062 009B     		ldr	r3, [sp]
 1390 0064 1A88     		ldrh	r2, [r3]
 1391              	.LVL139:
 1392 0066 0300     		movs	r3, r0
 1393              	.LVL140:
 1394              	.L133:
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1395              		.loc 1 1898 0 discriminator 2
 1396 0068 0098     		ldr	r0, [sp]
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1397              		.loc 1 1878 0 discriminator 2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 79


 1398 006a 0131     		adds	r1, r1, #1
 1399              	.LVL141:
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1400              		.loc 1 1898 0 discriminator 2
 1401 006c 0A30     		adds	r0, r0, #10
 1402 006e 0090     		str	r0, [sp]
 1403              	.LVL142:
 1404 0070 F1E7     		b	.L132
 1405              	.LVL143:
 1406              	.L139:
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
 1407              		.loc 1 1902 0
 1408 0072 697A     		ldrb	r1, [r5, #9]
 1409              	.LVL144:
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
 1410              		.loc 1 1903 0
 1411 0074 E376     		strb	r3, [r4, #27]
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
 1412              		.loc 1 1902 0
 1413 0076 A176     		strb	r1, [r4, #26]
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1414              		.loc 1 1904 0
 1415 0078 AB7A     		ldrb	r3, [r5, #10]
 1416              	.LVL145:
 1417 007a 234F     		ldr	r7, .L141+20
 1418 007c DB00     		lsls	r3, r3, #3
 1419 007e FB18     		adds	r3, r7, r3
 1420 0080 5B68     		ldr	r3, [r3, #4]
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1421              		.loc 1 1906 0
 1422 0082 FA20     		movs	r0, #250
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
 1423              		.loc 1 1904 0
 1424 0084 6360     		str	r3, [r4, #4]
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1425              		.loc 1 1905 0
 1426 0086 2B00     		movs	r3, r5
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1427              		.loc 1 1906 0
 1428 0088 8000     		lsls	r0, r0, #2
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1429              		.loc 1 1905 0
 1430 008a 0C33     		adds	r3, r3, #12
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1431              		.loc 1 1906 0
 1432 008c 5043     		muls	r0, r2
 1433 008e 1F49     		ldr	r1, .L141+24
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
 1434              		.loc 1 1905 0
 1435 0090 0093     		str	r3, [sp]
 1436              	.LVL146:
 1437 0092 A360     		str	r3, [r4, #8]
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
 1438              		.loc 1 1906 0
 1439 0094 FFF7FEFF 		bl	__aeabi_uidiv
 1440              	.LVL147:
 1441 0098 2083     		strh	r0, [r4, #24]
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 80


1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
 1442              		.loc 1 1910 0
 1443 009a 2000     		movs	r0, r4
 1444 009c FFF7FEFF 		bl	SmartSense_TunePrescalers
 1445              	.LVL148:
 1446 00a0 0197     		str	r7, [sp, #4]
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1447              		.loc 1 1911 0
 1448 00a2 0390     		str	r0, [sp, #12]
 1449              	.L135:
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1450              		.loc 1 1914 0
 1451 00a4 AB89     		ldrh	r3, [r5, #12]
 1452 00a6 032B     		cmp	r3, #3
 1453 00a8 02D8     		bhi	.L140
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1454              		.loc 1 1916 0
 1455 00aa 5B00     		lsls	r3, r3, #1
 1456 00ac AB81     		strh	r3, [r5, #12]
 1457 00ae F9E7     		b	.L135
 1458              	.L140:
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1459              		.loc 1 1972 0
 1460 00b0 174B     		ldr	r3, .L141+28
1782:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1461              		.loc 1 1782 0
 1462 00b2 0027     		movs	r7, #0
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1463              		.loc 1 1972 0
 1464 00b4 9842     		cmp	r0, r3
 1465 00b6 00D9     		bls	.L137
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1466              		.loc 1 1974 0
 1467 00b8 0637     		adds	r7, r7, #6
 1468              	.L137:
 1469              	.LVL149:
1984:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1470              		.loc 1 1984 0
 1471 00ba 4621     		movs	r1, #70
 1472 00bc 3000     		movs	r0, r6
 1473              	.LVL150:
 1474 00be FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1475              	.LVL151:
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
 1476              		.loc 1 1986 0
 1477 00c2 AB7A     		ldrb	r3, [r5, #10]
 1478 00c4 019A     		ldr	r2, [sp, #4]
 1479 00c6 DB00     		lsls	r3, r3, #3
 1480 00c8 D318     		adds	r3, r2, r3
 1481 00ca 5B68     		ldr	r3, [r3, #4]
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1482              		.loc 1 2003 0
 1483 00cc 2000     		movs	r0, r4
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
 1484              		.loc 1 1986 0
 1485 00ce 6360     		str	r3, [r4, #4]
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 81


 1486              		.loc 1 1987 0
 1487 00d0 6B7A     		ldrb	r3, [r5, #9]
 1488 00d2 A376     		strb	r3, [r4, #26]
1988:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1489              		.loc 1 1988 0
 1490 00d4 009B     		ldr	r3, [sp]
 1491 00d6 A360     		str	r3, [r4, #8]
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1492              		.loc 1 2003 0
 1493 00d8 FFF7FEFF 		bl	SmartSense_TuneSensitivity
 1494              	.LVL152:
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1495              		.loc 1 2013 0
 1496 00dc 2900     		movs	r1, r5
2003:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1497              		.loc 1 2003 0
 1498 00de 2880     		strh	r0, [r5]
2013:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1499              		.loc 1 2013 0
 1500 00e0 3000     		movs	r0, r6
 1501 00e2 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1502              	.LVL153:
2016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1503              		.loc 1 2016 0
 1504 00e6 4621     		movs	r1, #70
 1505 00e8 3000     		movs	r0, r6
 1506 00ea FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1507              	.LVL154:
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1508              		.loc 1 2022 0
 1509 00ee 3843     		orrs	r0, r7
 1510              	.LVL155:
2023:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1511              		.loc 1 2023 0
 1512 00f0 0BB0     		add	sp, sp, #44
 1513              		@ sp needed
 1514              	.LVL156:
 1515              	.LVL157:
 1516 00f2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1517              	.L142:
 1518              		.align	2
 1519              	.L141:
 1520 00f4 00000000 		.word	CapSense_dsFlash
 1521 00f8 00000000 		.word	CapSense_dsRam
 1522 00fc C05D0000 		.word	24000
 1523 0100 E5070000 		.word	2021
 1524 0104 DC050000 		.word	1500
 1525 0108 00000000 		.word	.LANCHOR1
 1526 010c FF0F0000 		.word	4095
 1527 0110 880D0100 		.word	69000
 1528              		.cfi_endproc
 1529              	.LFE19:
 1530              		.size	CapSense_SsAutoTuneWidget, .-CapSense_SsAutoTuneWidget
 1531              		.section	.text.CapSense_SsAutoTune,"ax",%progbits
 1532              		.align	1
 1533              		.global	CapSense_SsAutoTune
 1534              		.code	16
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 82


 1535              		.thumb_func
 1536              		.type	CapSense_SsAutoTune, %function
 1537              	CapSense_SsAutoTune:
 1538              	.LFB20:
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
 1539              		.loc 1 2048 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 0
 1542              		@ frame_needed = 0, uses_anonymous_args = 0
 1543              	.LVL158:
 1544 0000 70B5     		push	{r4, r5, r6, lr}
 1545              		.cfi_def_cfa_offset 16
 1546              		.cfi_offset 4, -16
 1547              		.cfi_offset 5, -12
 1548              		.cfi_offset 6, -8
 1549              		.cfi_offset 14, -4
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1550              		.loc 1 2053 0
 1551 0002 0024     		movs	r4, #0
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1552              		.loc 1 2049 0
 1553 0004 2500     		movs	r5, r4
 1554              	.LVL159:
 1555              	.L144:
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1556              		.loc 1 2058 0
 1557 0006 2000     		movs	r0, r4
 1558 0008 FFF7FEFF 		bl	CapSense_SsAutoTuneWidget
 1559              	.LVL160:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1560              		.loc 1 2053 0
 1561 000c 0134     		adds	r4, r4, #1
 1562              	.LVL161:
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1563              		.loc 1 2058 0
 1564 000e 0543     		orrs	r5, r0
 1565              	.LVL162:
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1566              		.loc 1 2053 0
 1567 0010 222C     		cmp	r4, #34
 1568 0012 F8D1     		bne	.L144
2062:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
 1569              		.loc 1 2062 0
 1570 0014 2800     		movs	r0, r5
 1571              		@ sp needed
 1572              	.LVL163:
 1573              	.LVL164:
 1574 0016 70BD     		pop	{r4, r5, r6, pc}
 1575              		.cfi_endproc
 1576              	.LFE20:
 1577              		.size	CapSense_SsAutoTune, .-CapSense_SsAutoTune
 1578              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1579              		.align	1
 1580              		.global	CapSense_SsInitializeSourceSenseClk
 1581              		.code	16
 1582              		.thumb_func
 1583              		.type	CapSense_SsInitializeSourceSenseClk, %function
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 83


 1584              	CapSense_SsInitializeSourceSenseClk:
 1585              	.LFB21:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1586              		.loc 1 2405 0
 1587              		.cfi_startproc
 1588              		@ args = 0, pretend = 0, frame = 0
 1589              		@ frame_needed = 0, uses_anonymous_args = 0
 1590              	.LVL165:
 1591 0000 10B5     		push	{r4, lr}
 1592              		.cfi_def_cfa_offset 8
 1593              		.cfi_offset 4, -8
 1594              		.cfi_offset 14, -4
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1595              		.loc 1 2409 0
 1596 0002 0024     		movs	r4, #0
 1597              	.LVL166:
 1598              	.L147:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1599              		.loc 1 2411 0
 1600 0004 054B     		ldr	r3, .L149
 1601 0006 6201     		lsls	r2, r4, #5
 1602 0008 D318     		adds	r3, r2, r3
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1603              		.loc 1 2417 0
 1604 000a 2000     		movs	r0, r4
 1605 000c 5968     		ldr	r1, [r3, #4]
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1606              		.loc 1 2409 0
 1607 000e 0134     		adds	r4, r4, #1
 1608              	.LVL167:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1609              		.loc 1 2417 0
 1610 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1611              	.LVL168:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1612              		.loc 1 2409 0
 1613 0014 222C     		cmp	r4, #34
 1614 0016 F5D1     		bne	.L147
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1615              		.loc 1 2432 0
 1616              		@ sp needed
 1617              	.LVL169:
 1618 0018 10BD     		pop	{r4, pc}
 1619              	.L150:
 1620 001a C046     		.align	2
 1621              	.L149:
 1622 001c 00000000 		.word	CapSense_dsFlash
 1623              		.cfi_endproc
 1624              	.LFE21:
 1625              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1626              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1627              		.align	1
 1628              		.global	CapSense_DischargeExtCapacitors
 1629              		.code	16
 1630              		.thumb_func
 1631              		.type	CapSense_DischargeExtCapacitors, %function
 1632              	CapSense_DischargeExtCapacitors:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 84


 1633              	.LFB27:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1634              		.loc 1 2939 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 16
 1637              		@ frame_needed = 0, uses_anonymous_args = 0
 1638              	.LVL170:
 1639 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1640              		.cfi_def_cfa_offset 20
 1641              		.cfi_offset 4, -20
 1642              		.cfi_offset 5, -16
 1643              		.cfi_offset 6, -12
 1644              		.cfi_offset 7, -8
 1645              		.cfi_offset 14, -4
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1646              		.loc 1 2947 0
 1647 0002 284D     		ldr	r5, .L152
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1648              		.loc 1 2948 0
 1649 0004 284E     		ldr	r6, .L152+4
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1650              		.loc 1 2947 0
 1651 0006 2B68     		ldr	r3, [r5]
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
 1652              		.loc 1 2939 0
 1653 0008 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 85


 1654              		.cfi_def_cfa_offset 40
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1655              		.loc 1 2949 0
 1656 000a 284F     		ldr	r7, .L152+8
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1657              		.loc 1 2947 0
 1658 000c 0093     		str	r3, [sp]
 1659              	.LVL171:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1660              		.loc 1 2948 0
 1661 000e 3368     		ldr	r3, [r6]
 1662              	.LVL172:
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
 1663              		.loc 1 2939 0
 1664 0010 0390     		str	r0, [sp, #12]
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1665              		.loc 1 2948 0
 1666 0012 0193     		str	r3, [sp, #4]
 1667              	.LVL173:
 1668              		.loc 1 2949 0
 1669 0014 3B68     		ldr	r3, [r7]
 1670              	.LVL174:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1671              		.loc 1 2968 0
 1672 0016 264C     		ldr	r4, .L152+12
2949:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1673              		.loc 1 2949 0
 1674 0018 0293     		str	r3, [sp, #8]
 1675              	.LVL175:
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1676              		.loc 1 2952 0
 1677 001a FFF7FEFF 		bl	CyEnterCriticalSection
 1678              	.LVL176:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1679              		.loc 1 2953 0
 1680 001e 2B68     		ldr	r3, [r5]
 1681              	.LVL177:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1682              		.loc 1 2954 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 86


 1683 0020 244A     		ldr	r2, .L152+16
 1684 0022 1340     		ands	r3, r2
 1685              	.LVL178:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1686              		.loc 1 2955 0
 1687 0024 2B60     		str	r3, [r5]
2956:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1688              		.loc 1 2956 0
 1689 0026 FFF7FEFF 		bl	CyExitCriticalSection
 1690              	.LVL179:
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1691              		.loc 1 2959 0
 1692 002a FFF7FEFF 		bl	CyEnterCriticalSection
 1693              	.LVL180:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1694              		.loc 1 2961 0
 1695 002e 0422     		movs	r2, #4
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1696              		.loc 1 2960 0
 1697 0030 3368     		ldr	r3, [r6]
 1698              	.LVL181:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1699              		.loc 1 2961 0
 1700 0032 9343     		bics	r3, r2
 1701              	.LVL182:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1702              		.loc 1 2962 0
 1703 0034 3360     		str	r3, [r6]
2963:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1704              		.loc 1 2963 0
 1705 0036 FFF7FEFF 		bl	CyExitCriticalSection
 1706              	.LVL183:
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1707              		.loc 1 2966 0
 1708 003a FFF7FEFF 		bl	CyEnterCriticalSection
 1709              	.LVL184:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1710              		.loc 1 2969 0
 1711 003e C022     		movs	r2, #192
2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1712              		.loc 1 2967 0
 1713 0040 3B68     		ldr	r3, [r7]
 1714              	.LVL185:
 1715              		.loc 1 2969 0
 1716 0042 5200     		lsls	r2, r2, #1
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1717              		.loc 1 2968 0
 1718 0044 2340     		ands	r3, r4
 1719              	.LVL186:
 1720              		.loc 1 2969 0
 1721 0046 1343     		orrs	r3, r2
 1722              	.LVL187:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1723              		.loc 1 2970 0
 1724 0048 3B60     		str	r3, [r7]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1725              		.loc 1 2971 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 87


 1726 004a FFF7FEFF 		bl	CyExitCriticalSection
 1727              	.LVL188:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1728              		.loc 1 2974 0
 1729 004e 6B46     		mov	r3, sp
 1730 0050 9889     		ldrh	r0, [r3, #12]
 1731 0052 FFF7FEFF 		bl	CyDelayUs
 1732              	.LVL189:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1733              		.loc 1 2977 0
 1734 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 1735              	.LVL190:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1736              		.loc 1 2978 0
 1737 005a 3B68     		ldr	r3, [r7]
 1738              	.LVL191:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1739              		.loc 1 2980 0
 1740 005c 029A     		ldr	r2, [sp, #8]
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1741              		.loc 1 2979 0
 1742 005e 1C40     		ands	r4, r3
 1743              	.LVL192:
 1744              		.loc 1 2980 0
 1745 0060 E023     		movs	r3, #224
 1746 0062 5B00     		lsls	r3, r3, #1
 1747 0064 1340     		ands	r3, r2
 1748 0066 1C43     		orrs	r4, r3
 1749              	.LVL193:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1750              		.loc 1 2981 0
 1751 0068 3C60     		str	r4, [r7]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1752              		.loc 1 2982 0
 1753 006a FFF7FEFF 		bl	CyExitCriticalSection
 1754              	.LVL194:
2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1755              		.loc 1 2984 0
 1756 006e FFF7FEFF 		bl	CyEnterCriticalSection
 1757              	.LVL195:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1758              		.loc 1 2986 0
 1759 0072 0422     		movs	r2, #4
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1760              		.loc 1 2987 0
 1761 0074 0421     		movs	r1, #4
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1762              		.loc 1 2985 0
 1763 0076 3368     		ldr	r3, [r6]
 1764              	.LVL196:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 88


2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1765              		.loc 1 2986 0
 1766 0078 9343     		bics	r3, r2
 1767              	.LVL197:
 1768              		.loc 1 2987 0
 1769 007a 019A     		ldr	r2, [sp, #4]
 1770 007c 0A40     		ands	r2, r1
 1771 007e 1343     		orrs	r3, r2
 1772              	.LVL198:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1773              		.loc 1 2988 0
 1774 0080 3360     		str	r3, [r6]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1775              		.loc 1 2989 0
 1776 0082 FFF7FEFF 		bl	CyExitCriticalSection
 1777              	.LVL199:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1778              		.loc 1 2991 0
 1779 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 1780              	.LVL200:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1781              		.loc 1 2992 0
 1782 008a 2B68     		ldr	r3, [r5]
 1783              	.LVL201:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1784              		.loc 1 2993 0
 1785 008c 094A     		ldr	r2, .L152+16
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1786              		.loc 1 2994 0
 1787 008e 0099     		ldr	r1, [sp]
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1788              		.loc 1 2993 0
 1789 0090 1A40     		ands	r2, r3
 1790              	.LVL202:
 1791              		.loc 1 2994 0
 1792 0092 F023     		movs	r3, #240
 1793 0094 1B01     		lsls	r3, r3, #4
 1794 0096 0B40     		ands	r3, r1
 1795 0098 1343     		orrs	r3, r2
 1796              	.LVL203:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1797              		.loc 1 2995 0
 1798 009a 2B60     		str	r3, [r5]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1799              		.loc 1 2996 0
 1800 009c FFF7FEFF 		bl	CyExitCriticalSection
 1801              	.LVL204:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1802              		.loc 1 2997 0
 1803 00a0 05B0     		add	sp, sp, #20
 1804              	.LVL205:
 1805              		@ sp needed
 1806 00a2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1807              	.L153:
 1808              		.align	2
 1809              	.L152:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 89


 1810 00a4 00040240 		.word	1073873920
 1811 00a8 00040440 		.word	1074004992
 1812 00ac 08040440 		.word	1074005000
 1813 00b0 3FFEFFFF 		.word	-449
 1814 00b4 FFF0FFFF 		.word	-3841
 1815              		.cfi_endproc
 1816              	.LFE27:
 1817              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1818              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1819              		.align	1
 1820              		.global	CapSense_SetInactiveElectrodeState
 1821              		.code	16
 1822              		.thumb_func
 1823              		.type	CapSense_SetInactiveElectrodeState, %function
 1824              	CapSense_SetInactiveElectrodeState:
 1825              	.LFB28:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 90


3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 91


3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 92


3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1826              		.loc 1 3205 0
 1827              		.cfi_startproc
 1828              		@ args = 0, pretend = 0, frame = 0
 1829              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 93


 1830              		@ link register save eliminated.
 1831              	.LVL206:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1832              		.loc 1 3208 0
 1833 0000 0028     		cmp	r0, #0
 1834 0002 04D1     		bne	.L158
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1835              		.loc 1 3212 0
 1836 0004 8923     		movs	r3, #137
 1837 0006 034A     		ldr	r2, .L159
 1838 0008 DB00     		lsls	r3, r3, #3
 1839 000a D154     		strb	r1, [r2, r3]
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1840              		.loc 1 3213 0
 1841 000c 00E0     		b	.L155
 1842              	.L158:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 94


3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1843              		.loc 1 3257 0
 1844 000e 0120     		movs	r0, #1
 1845              	.LVL207:
 1846              	.L155:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1847              		.loc 1 3262 0
 1848              		@ sp needed
 1849 0010 7047     		bx	lr
 1850              	.L160:
 1851 0012 C046     		.align	2
 1852              	.L159:
 1853 0014 00000000 		.word	CapSense_dsRam
 1854              		.cfi_endproc
 1855              	.LFE28:
 1856              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1857              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1858              		.align	1
 1859              		.global	CapSense_WriteBitsSafe
 1860              		.code	16
 1861              		.thumb_func
 1862              		.type	CapSense_WriteBitsSafe, %function
 1863              	CapSense_WriteBitsSafe:
 1864              	.LFB29:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 95


3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1865              		.loc 1 3290 0
 1866              		.cfi_startproc
 1867              		@ args = 0, pretend = 0, frame = 0
 1868              		@ frame_needed = 0, uses_anonymous_args = 0
 1869              	.LVL208:
 1870 0000 70B5     		push	{r4, r5, r6, lr}
 1871              		.cfi_def_cfa_offset 16
 1872              		.cfi_offset 4, -16
 1873              		.cfi_offset 5, -12
 1874              		.cfi_offset 6, -8
 1875              		.cfi_offset 14, -4
 1876              		.loc 1 3290 0
 1877 0002 0500     		movs	r5, r0
 1878 0004 1400     		movs	r4, r2
 1879 0006 0E00     		movs	r6, r1
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1880              		.loc 1 3291 0
 1881 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1882              	.LVL209:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1883              		.loc 1 3292 0
 1884 000c 2B68     		ldr	r3, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1885              		.loc 1 3294 0
 1886              		@ sp needed
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1887              		.loc 1 3292 0
 1888 000e 5C40     		eors	r4, r3
 1889              	.LVL210:
 1890 0010 3440     		ands	r4, r6
 1891 0012 5C40     		eors	r4, r3
 1892 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1893              		.loc 1 3293 0
 1894 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1895              	.LVL211:
 1896              	.LVL212:
 1897              	.LVL213:
 1898              		.loc 1 3294 0
 1899 001a 70BD     		pop	{r4, r5, r6, pc}
 1900              		.cfi_endproc
 1901              	.LFE29:
 1902              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1903              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1904              		.align	1
 1905              		.global	CapSense_SsSwitchSensingMode
 1906              		.code	16
 1907              		.thumb_func
 1908              		.type	CapSense_SsSwitchSensingMode, %function
 1909              	CapSense_SsSwitchSensingMode:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 96


 1910              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1911              		.loc 1 1068 0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              	.LVL214:
 1916 0000 70B5     		push	{r4, r5, r6, lr}
 1917              		.cfi_def_cfa_offset 16
 1918              		.cfi_offset 4, -16
 1919              		.cfi_offset 5, -12
 1920              		.cfi_offset 6, -8
 1921              		.cfi_offset 14, -4
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1922              		.loc 1 1069 0
 1923 0002 0F4D     		ldr	r5, .L168
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1924              		.loc 1 1068 0
 1925 0004 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1926              		.loc 1 1069 0
 1927 0006 2A78     		ldrb	r2, [r5]
 1928 0008 8242     		cmp	r2, r0
 1929 000a 18D0     		beq	.L162
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1930              		.loc 1 1072 0
 1931 000c 012A     		cmp	r2, #1
 1932 000e 0BD1     		bne	.L165
 1933              	.LBB34:
 1934              	.LBB35:
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 1935              		.loc 1 961 0
 1936 0010 0C49     		ldr	r1, .L168+4
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1937              		.loc 1 968 0
 1938 0012 0D48     		ldr	r0, .L168+8
 1939              	.LVL215:
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 1940              		.loc 1 961 0
 1941 0014 0B68     		ldr	r3, [r1]
 1942              	.LVL216:
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 1943              		.loc 1 962 0
 1944 0016 9343     		bics	r3, r2
 1945              	.LVL217:
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 1946              		.loc 1 963 0
 1947 0018 0B60     		str	r3, [r1]
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1948              		.loc 1 968 0
 1949 001a F021     		movs	r1, #240
 1950 001c 0022     		movs	r2, #0
 1951 001e 0901     		lsls	r1, r1, #4
 1952 0020 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1953              	.LVL218:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1954              		.loc 1 971 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 97


 1955 0024 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1956              	.LVL219:
 1957              	.L165:
 1958              	.LBE35:
 1959              	.LBE34:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1960              		.loc 1 1105 0
 1961 0028 012C     		cmp	r4, #1
 1962 002a 03D1     		bne	.L166
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1963              		.loc 1 1109 0
 1964 002c FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1965              	.LVL220:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1966              		.loc 1 1110 0
 1967 0030 2C70     		strb	r4, [r5]
 1968 0032 04E0     		b	.L162
 1969              	.L166:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1970              		.loc 1 1113 0
 1971 0034 023C     		subs	r4, r4, #2
 1972 0036 022C     		cmp	r4, #2
 1973 0038 01D9     		bls	.L162
 1974              	.LVL221:
 1975              	.LBB36:
 1976              	.LBB37:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1977              		.loc 1 1138 0
 1978 003a 0023     		movs	r3, #0
 1979 003c 2B70     		strb	r3, [r5]
 1980              	.LVL222:
 1981              	.L162:
 1982              	.LBE37:
 1983              	.LBE36:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1984              		.loc 1 1141 0
 1985              		@ sp needed
 1986 003e 70BD     		pop	{r4, r5, r6, pc}
 1987              	.L169:
 1988              		.align	2
 1989              	.L168:
 1990 0040 00000000 		.word	.LANCHOR0
 1991 0044 A8020B40 		.word	1074463400
 1992 0048 00040240 		.word	1073873920
 1993              		.cfi_endproc
 1994              	.LFE10:
 1995              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1996              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1997              		.align	1
 1998              		.global	CapSense_SsInitialize
 1999              		.code	16
 2000              		.thumb_func
 2001              		.type	CapSense_SsInitialize, %function
 2002              	CapSense_SsInitialize:
 2003              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 2004              		.loc 1 708 0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 98


 2005              		.cfi_startproc
 2006              		@ args = 0, pretend = 0, frame = 0
 2007              		@ frame_needed = 0, uses_anonymous_args = 0
 2008              	.LVL223:
 2009 0000 10B5     		push	{r4, lr}
 2010              		.cfi_def_cfa_offset 8
 2011              		.cfi_offset 4, -8
 2012              		.cfi_offset 14, -4
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2013              		.loc 1 753 0
 2014 0002 0024     		movs	r4, #0
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 2015              		.loc 1 747 0
 2016 0004 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 2017              	.LVL224:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 2018              		.loc 1 752 0
 2019 0008 0020     		movs	r0, #0
 2020 000a FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 2021              	.LVL225:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2022              		.loc 1 753 0
 2023 000e 054B     		ldr	r3, .L171
 2024 0010 054A     		ldr	r2, .L171+4
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 2025              		.loc 1 755 0
 2026 0012 2000     		movs	r0, r4
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2027              		.loc 1 753 0
 2028 0014 D454     		strb	r4, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 2029              		.loc 1 755 0
 2030 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2031              	.LVL226:
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 2032              		.loc 1 758 0
 2033 001a 0120     		movs	r0, #1
 2034 001c FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 2035              	.LVL227:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 2036              		.loc 1 769 0
 2037              		@ sp needed
 2038 0020 2000     		movs	r0, r4
 2039 0022 10BD     		pop	{r4, pc}
 2040              	.L172:
 2041              		.align	2
 2042              	.L171:
 2043 0024 49040000 		.word	1097
 2044 0028 00000000 		.word	CapSense_dsRam
 2045              		.cfi_endproc
 2046              	.LFE7:
 2047              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 2048              		.global	CapSense_idacGainTable
 2049              		.comm	CapSense_curSnsIOPtr,4,4
 2050              		.comm	CapSense_curRamSnsPtr,4,4
 2051              		.global	CapSense_requestScanAllWidget
 2052              		.global	CapSense_sensorIndex
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 99


 2053              		.global	CapSense_widgetIndex
 2054              		.global	CapSense_scanFreqIndex
 2055              		.global	CapSense_currentSenseMethod
 2056              		.section	.rodata
 2057              		.align	2
 2058              		.set	.LANCHOR1,. + 0
 2059              		.type	CapSense_idacGainTable, %object
 2060              		.size	CapSense_idacGainTable, 48
 2061              	CapSense_idacGainTable:
 2062 0000 00000001 		.word	16777216
 2063 0004 7C920000 		.word	37500
 2064 0008 00000003 		.word	50331648
 2065 000c F8240100 		.word	75000
 2066 0010 00004001 		.word	20971520
 2067 0014 E0930400 		.word	300000
 2068 0018 00004003 		.word	54525952
 2069 001c C0270900 		.word	600000
 2070 0020 00008001 		.word	25165824
 2071 0024 009F2400 		.word	2400000
 2072 0028 00008003 		.word	58720256
 2073 002c 003E4900 		.word	4800000
 2074              		.type	CapSense_scanFreqIndex, %object
 2075              		.size	CapSense_scanFreqIndex, 1
 2076              	CapSense_scanFreqIndex:
 2077 0030 00       		.space	1
 2078              		.bss
 2079              		.set	.LANCHOR0,. + 0
 2080              		.type	CapSense_currentSenseMethod, %object
 2081              		.size	CapSense_currentSenseMethod, 1
 2082              	CapSense_currentSenseMethod:
 2083 0000 00       		.space	1
 2084              		.type	CapSense_requestScanAllWidget, %object
 2085              		.size	CapSense_requestScanAllWidget, 1
 2086              	CapSense_requestScanAllWidget:
 2087 0001 00       		.space	1
 2088              		.type	CapSense_widgetIndex, %object
 2089              		.size	CapSense_widgetIndex, 1
 2090              	CapSense_widgetIndex:
 2091 0002 00       		.space	1
 2092              		.type	CapSense_sensorIndex, %object
 2093              		.size	CapSense_sensorIndex, 1
 2094              	CapSense_sensorIndex:
 2095 0003 00       		.space	1
 2096              		.text
 2097              	.Letext0:
 2098              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2099              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 2100              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 2101              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 2102              		.file 6 "Generated_Source\\PSoC4\\CapSense_SmartSense_LL.h"
 2103              		.file 7 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 2104              		.file 8 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 2105              		.file 9 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 2106              		.file 10 "Generated_Source\\PSoC4/CyLib.h"
 2107              		.file 11 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 2108              		.section	.debug_info,"",%progbits
 2109              	.Ldebug_info0:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 100


 2110 0000 4D190000 		.4byte	0x194d
 2111 0004 0400     		.2byte	0x4
 2112 0006 00000000 		.4byte	.Ldebug_abbrev0
 2113 000a 04       		.byte	0x4
 2114 000b 01       		.uleb128 0x1
 2115 000c A80B0000 		.4byte	.LASF260
 2116 0010 0C       		.byte	0xc
 2117 0011 670B0000 		.4byte	.LASF261
 2118 0015 3A0A0000 		.4byte	.LASF262
 2119 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 2120 001d 00000000 		.4byte	0
 2121 0021 00000000 		.4byte	.Ldebug_line0
 2122 0025 02       		.uleb128 0x2
 2123 0026 04       		.byte	0x4
 2124 0027 07       		.byte	0x7
 2125 0028 6B010000 		.4byte	.LASF0
 2126 002c 02       		.uleb128 0x2
 2127 002d 01       		.byte	0x1
 2128 002e 06       		.byte	0x6
 2129 002f 5A0E0000 		.4byte	.LASF1
 2130 0033 02       		.uleb128 0x2
 2131 0034 01       		.byte	0x1
 2132 0035 08       		.byte	0x8
 2133 0036 120D0000 		.4byte	.LASF2
 2134 003a 02       		.uleb128 0x2
 2135 003b 02       		.byte	0x2
 2136 003c 05       		.byte	0x5
 2137 003d C4090000 		.4byte	.LASF3
 2138 0041 02       		.uleb128 0x2
 2139 0042 02       		.byte	0x2
 2140 0043 07       		.byte	0x7
 2141 0044 820E0000 		.4byte	.LASF4
 2142 0048 02       		.uleb128 0x2
 2143 0049 04       		.byte	0x4
 2144 004a 05       		.byte	0x5
 2145 004b FC090000 		.4byte	.LASF5
 2146 004f 03       		.uleb128 0x3
 2147 0050 2C0D0000 		.4byte	.LASF9
 2148 0054 02       		.byte	0x2
 2149 0055 41       		.byte	0x41
 2150 0056 5A000000 		.4byte	0x5a
 2151 005a 02       		.uleb128 0x2
 2152 005b 04       		.byte	0x4
 2153 005c 07       		.byte	0x7
 2154 005d 6F0C0000 		.4byte	.LASF6
 2155 0061 02       		.uleb128 0x2
 2156 0062 08       		.byte	0x8
 2157 0063 05       		.byte	0x5
 2158 0064 16070000 		.4byte	.LASF7
 2159 0068 02       		.uleb128 0x2
 2160 0069 08       		.byte	0x8
 2161 006a 07       		.byte	0x7
 2162 006b B5030000 		.4byte	.LASF8
 2163 006f 04       		.uleb128 0x4
 2164 0070 04       		.byte	0x4
 2165 0071 05       		.byte	0x5
 2166 0072 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 101


 2167 0076 03       		.uleb128 0x3
 2168 0077 02030000 		.4byte	.LASF10
 2169 007b 03       		.byte	0x3
 2170 007c 30       		.byte	0x30
 2171 007d 4F000000 		.4byte	0x4f
 2172 0081 05       		.uleb128 0x5
 2173 0082 0F0F0000 		.4byte	.LASF11
 2174 0086 04       		.byte	0x4
 2175 0087 FB01     		.2byte	0x1fb
 2176 0089 33000000 		.4byte	0x33
 2177 008d 05       		.uleb128 0x5
 2178 008e 1A060000 		.4byte	.LASF12
 2179 0092 04       		.byte	0x4
 2180 0093 FC01     		.2byte	0x1fc
 2181 0095 41000000 		.4byte	0x41
 2182 0099 05       		.uleb128 0x5
 2183 009a 47080000 		.4byte	.LASF13
 2184 009e 04       		.byte	0x4
 2185 009f FD01     		.2byte	0x1fd
 2186 00a1 5A000000 		.4byte	0x5a
 2187 00a5 02       		.uleb128 0x2
 2188 00a6 04       		.byte	0x4
 2189 00a7 04       		.byte	0x4
 2190 00a8 5C030000 		.4byte	.LASF14
 2191 00ac 02       		.uleb128 0x2
 2192 00ad 08       		.byte	0x8
 2193 00ae 04       		.byte	0x4
 2194 00af 150F0000 		.4byte	.LASF15
 2195 00b3 02       		.uleb128 0x2
 2196 00b4 01       		.byte	0x1
 2197 00b5 08       		.byte	0x8
 2198 00b6 7B050000 		.4byte	.LASF16
 2199 00ba 05       		.uleb128 0x5
 2200 00bb 090D0000 		.4byte	.LASF17
 2201 00bf 04       		.byte	0x4
 2202 00c0 9D02     		.2byte	0x29d
 2203 00c2 5A000000 		.4byte	0x5a
 2204 00c6 06       		.uleb128 0x6
 2205 00c7 81000000 		.4byte	0x81
 2206 00cb 05       		.uleb128 0x5
 2207 00cc 1C090000 		.4byte	.LASF18
 2208 00d0 04       		.byte	0x4
 2209 00d1 A702     		.2byte	0x2a7
 2210 00d3 D7000000 		.4byte	0xd7
 2211 00d7 06       		.uleb128 0x6
 2212 00d8 99000000 		.4byte	0x99
 2213 00dc 05       		.uleb128 0x5
 2214 00dd 04080000 		.4byte	.LASF19
 2215 00e1 04       		.byte	0x4
 2216 00e2 B702     		.2byte	0x2b7
 2217 00e4 E8000000 		.4byte	0xe8
 2218 00e8 07       		.uleb128 0x7
 2219 00e9 04       		.byte	0x4
 2220 00ea EE000000 		.4byte	0xee
 2221 00ee 08       		.uleb128 0x8
 2222 00ef 05       		.uleb128 0x5
 2223 00f0 840D0000 		.4byte	.LASF20
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 102


 2224 00f4 05       		.byte	0x5
 2225 00f5 A201     		.2byte	0x1a2
 2226 00f7 8D000000 		.4byte	0x8d
 2227 00fb 05       		.uleb128 0x5
 2228 00fc 90060000 		.4byte	.LASF21
 2229 0100 05       		.byte	0x5
 2230 0101 A601     		.2byte	0x1a6
 2231 0103 81000000 		.4byte	0x81
 2232 0107 09       		.uleb128 0x9
 2233 0108 1C       		.byte	0x1c
 2234 0109 06       		.byte	0x6
 2235 010a 31       		.byte	0x31
 2236 010b 94010000 		.4byte	0x194
 2237 010f 0A       		.uleb128 0xa
 2238 0110 590D0000 		.4byte	.LASF22
 2239 0114 06       		.byte	0x6
 2240 0115 36       		.byte	0x36
 2241 0116 99000000 		.4byte	0x99
 2242 011a 00       		.byte	0
 2243 011b 0A       		.uleb128 0xa
 2244 011c 15020000 		.4byte	.LASF23
 2245 0120 06       		.byte	0x6
 2246 0121 3B       		.byte	0x3b
 2247 0122 99000000 		.4byte	0x99
 2248 0126 04       		.byte	0x4
 2249 0127 0A       		.uleb128 0xa
 2250 0128 C5080000 		.4byte	.LASF24
 2251 012c 06       		.byte	0x6
 2252 012d 40       		.byte	0x40
 2253 012e 94010000 		.4byte	0x194
 2254 0132 08       		.byte	0x8
 2255 0133 0A       		.uleb128 0xa
 2256 0134 CF040000 		.4byte	.LASF25
 2257 0138 06       		.byte	0x6
 2258 0139 45       		.byte	0x45
 2259 013a 94010000 		.4byte	0x194
 2260 013e 0C       		.byte	0xc
 2261 013f 0A       		.uleb128 0xa
 2262 0140 0C090000 		.4byte	.LASF26
 2263 0144 06       		.byte	0x6
 2264 0145 4A       		.byte	0x4a
 2265 0146 8D000000 		.4byte	0x8d
 2266 014a 10       		.byte	0x10
 2267 014b 0A       		.uleb128 0xa
 2268 014c 880C0000 		.4byte	.LASF27
 2269 0150 06       		.byte	0x6
 2270 0151 4F       		.byte	0x4f
 2271 0152 8D000000 		.4byte	0x8d
 2272 0156 12       		.byte	0x12
 2273 0157 0A       		.uleb128 0xa
 2274 0158 240B0000 		.4byte	.LASF28
 2275 015c 06       		.byte	0x6
 2276 015d 54       		.byte	0x54
 2277 015e 8D000000 		.4byte	0x8d
 2278 0162 14       		.byte	0x14
 2279 0163 0A       		.uleb128 0xa
 2280 0164 5D020000 		.4byte	.LASF29
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 103


 2281 0168 06       		.byte	0x6
 2282 0169 59       		.byte	0x59
 2283 016a 8D000000 		.4byte	0x8d
 2284 016e 16       		.byte	0x16
 2285 016f 0A       		.uleb128 0xa
 2286 0170 AC040000 		.4byte	.LASF30
 2287 0174 06       		.byte	0x6
 2288 0175 5E       		.byte	0x5e
 2289 0176 8D000000 		.4byte	0x8d
 2290 017a 18       		.byte	0x18
 2291 017b 0A       		.uleb128 0xa
 2292 017c 96050000 		.4byte	.LASF31
 2293 0180 06       		.byte	0x6
 2294 0181 63       		.byte	0x63
 2295 0182 81000000 		.4byte	0x81
 2296 0186 1A       		.byte	0x1a
 2297 0187 0A       		.uleb128 0xa
 2298 0188 35090000 		.4byte	.LASF32
 2299 018c 06       		.byte	0x6
 2300 018d 68       		.byte	0x68
 2301 018e 81000000 		.4byte	0x81
 2302 0192 1B       		.byte	0x1b
 2303 0193 00       		.byte	0
 2304 0194 07       		.uleb128 0x7
 2305 0195 04       		.byte	0x4
 2306 0196 8D000000 		.4byte	0x8d
 2307 019a 03       		.uleb128 0x3
 2308 019b 950E0000 		.4byte	.LASF33
 2309 019f 06       		.byte	0x6
 2310 01a0 6A       		.byte	0x6a
 2311 01a1 07010000 		.4byte	0x107
 2312 01a5 09       		.uleb128 0x9
 2313 01a6 0C       		.byte	0xc
 2314 01a7 06       		.byte	0x6
 2315 01a8 75       		.byte	0x75
 2316 01a9 02020000 		.4byte	0x202
 2317 01ad 0A       		.uleb128 0xa
 2318 01ae 2A0F0000 		.4byte	.LASF34
 2319 01b2 06       		.byte	0x6
 2320 01b3 7A       		.byte	0x7a
 2321 01b4 8D000000 		.4byte	0x8d
 2322 01b8 00       		.byte	0
 2323 01b9 0A       		.uleb128 0xa
 2324 01ba 310F0000 		.4byte	.LASF35
 2325 01be 06       		.byte	0x6
 2326 01bf 7E       		.byte	0x7e
 2327 01c0 8D000000 		.4byte	0x8d
 2328 01c4 02       		.byte	0x2
 2329 01c5 0A       		.uleb128 0xa
 2330 01c6 380F0000 		.4byte	.LASF36
 2331 01ca 06       		.byte	0x6
 2332 01cb 82       		.byte	0x82
 2333 01cc 8D000000 		.4byte	0x8d
 2334 01d0 04       		.byte	0x4
 2335 01d1 0A       		.uleb128 0xa
 2336 01d2 3F0F0000 		.4byte	.LASF37
 2337 01d6 06       		.byte	0x6
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 104


 2338 01d7 86       		.byte	0x86
 2339 01d8 8D000000 		.4byte	0x8d
 2340 01dc 06       		.byte	0x6
 2341 01dd 0A       		.uleb128 0xa
 2342 01de 460F0000 		.4byte	.LASF38
 2343 01e2 06       		.byte	0x6
 2344 01e3 8A       		.byte	0x8a
 2345 01e4 8D000000 		.4byte	0x8d
 2346 01e8 08       		.byte	0x8
 2347 01e9 0A       		.uleb128 0xa
 2348 01ea 4D0F0000 		.4byte	.LASF39
 2349 01ee 06       		.byte	0x6
 2350 01ef 8E       		.byte	0x8e
 2351 01f0 81000000 		.4byte	0x81
 2352 01f4 0A       		.byte	0xa
 2353 01f5 0A       		.uleb128 0xa
 2354 01f6 540F0000 		.4byte	.LASF40
 2355 01fa 06       		.byte	0x6
 2356 01fb 92       		.byte	0x92
 2357 01fc 81000000 		.4byte	0x81
 2358 0200 0B       		.byte	0xb
 2359 0201 00       		.byte	0
 2360 0202 03       		.uleb128 0x3
 2361 0203 3F050000 		.4byte	.LASF41
 2362 0207 06       		.byte	0x6
 2363 0208 93       		.byte	0x93
 2364 0209 A5010000 		.4byte	0x1a5
 2365 020d 0B       		.uleb128 0xb
 2366 020e 01       		.byte	0x1
 2367 020f 33000000 		.4byte	0x33
 2368 0213 07       		.byte	0x7
 2369 0214 70       		.byte	0x70
 2370 0215 38020000 		.4byte	0x238
 2371 0219 0C       		.uleb128 0xc
 2372 021a FC000000 		.4byte	.LASF42
 2373 021e 00       		.byte	0
 2374 021f 0C       		.uleb128 0xc
 2375 0220 DA010000 		.4byte	.LASF43
 2376 0224 01       		.byte	0x1
 2377 0225 0C       		.uleb128 0xc
 2378 0226 1E0A0000 		.4byte	.LASF44
 2379 022a 02       		.byte	0x2
 2380 022b 0C       		.uleb128 0xc
 2381 022c BA0D0000 		.4byte	.LASF45
 2382 0230 03       		.byte	0x3
 2383 0231 0C       		.uleb128 0xc
 2384 0232 E4080000 		.4byte	.LASF46
 2385 0236 04       		.byte	0x4
 2386 0237 00       		.byte	0
 2387 0238 03       		.uleb128 0x3
 2388 0239 C9060000 		.4byte	.LASF47
 2389 023d 07       		.byte	0x7
 2390 023e 76       		.byte	0x76
 2391 023f 0D020000 		.4byte	0x20d
 2392 0243 09       		.uleb128 0x9
 2393 0244 14       		.byte	0x14
 2394 0245 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 105


 2395 0246 AD       		.byte	0xad
 2396 0247 E8020000 		.4byte	0x2e8
 2397 024b 0A       		.uleb128 0xa
 2398 024c 51060000 		.4byte	.LASF48
 2399 0250 07       		.byte	0x7
 2400 0251 B2       		.byte	0xb2
 2401 0252 8D000000 		.4byte	0x8d
 2402 0256 00       		.byte	0
 2403 0257 0A       		.uleb128 0xa
 2404 0258 BA0C0000 		.4byte	.LASF49
 2405 025c 07       		.byte	0x7
 2406 025d B7       		.byte	0xb7
 2407 025e EF000000 		.4byte	0xef
 2408 0262 02       		.byte	0x2
 2409 0263 0A       		.uleb128 0xa
 2410 0264 73050000 		.4byte	.LASF50
 2411 0268 07       		.byte	0x7
 2412 0269 BC       		.byte	0xbc
 2413 026a 81000000 		.4byte	0x81
 2414 026e 04       		.byte	0x4
 2415 026f 0A       		.uleb128 0xa
 2416 0270 F0070000 		.4byte	.LASF51
 2417 0274 07       		.byte	0x7
 2418 0275 C1       		.byte	0xc1
 2419 0276 81000000 		.4byte	0x81
 2420 027a 05       		.byte	0x5
 2421 027b 0A       		.uleb128 0xa
 2422 027c D6040000 		.4byte	.LASF52
 2423 0280 07       		.byte	0x7
 2424 0281 C7       		.byte	0xc7
 2425 0282 81000000 		.4byte	0x81
 2426 0286 06       		.byte	0x6
 2427 0287 0A       		.uleb128 0xa
 2428 0288 45070000 		.4byte	.LASF53
 2429 028c 07       		.byte	0x7
 2430 028d CD       		.byte	0xcd
 2431 028e 81000000 		.4byte	0x81
 2432 0292 07       		.byte	0x7
 2433 0293 0A       		.uleb128 0xa
 2434 0294 10050000 		.4byte	.LASF54
 2435 0298 07       		.byte	0x7
 2436 0299 D4       		.byte	0xd4
 2437 029a FB000000 		.4byte	0xfb
 2438 029e 08       		.byte	0x8
 2439 029f 0A       		.uleb128 0xa
 2440 02a0 8D0C0000 		.4byte	.LASF55
 2441 02a4 07       		.byte	0x7
 2442 02a5 DB       		.byte	0xdb
 2443 02a6 E8020000 		.4byte	0x2e8
 2444 02aa 09       		.byte	0x9
 2445 02ab 0A       		.uleb128 0xa
 2446 02ac 2B030000 		.4byte	.LASF56
 2447 02b0 07       		.byte	0x7
 2448 02b1 E0       		.byte	0xe0
 2449 02b2 81000000 		.4byte	0x81
 2450 02b6 0A       		.byte	0xa
 2451 02b7 0A       		.uleb128 0xa
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 106


 2452 02b8 090E0000 		.4byte	.LASF57
 2453 02bc 07       		.byte	0x7
 2454 02bd E8       		.byte	0xe8
 2455 02be 8D000000 		.4byte	0x8d
 2456 02c2 0C       		.byte	0xc
 2457 02c3 0A       		.uleb128 0xa
 2458 02c4 81090000 		.4byte	.LASF58
 2459 02c8 07       		.byte	0x7
 2460 02c9 ED       		.byte	0xed
 2461 02ca 81000000 		.4byte	0x81
 2462 02ce 0E       		.byte	0xe
 2463 02cf 0A       		.uleb128 0xa
 2464 02d0 240B0000 		.4byte	.LASF28
 2465 02d4 07       		.byte	0x7
 2466 02d5 F3       		.byte	0xf3
 2467 02d6 8D000000 		.4byte	0x8d
 2468 02da 10       		.byte	0x10
 2469 02db 0A       		.uleb128 0xa
 2470 02dc CF040000 		.4byte	.LASF25
 2471 02e0 07       		.byte	0x7
 2472 02e1 F8       		.byte	0xf8
 2473 02e2 8D000000 		.4byte	0x8d
 2474 02e6 12       		.byte	0x12
 2475 02e7 00       		.byte	0
 2476 02e8 0D       		.uleb128 0xd
 2477 02e9 81000000 		.4byte	0x81
 2478 02ed F8020000 		.4byte	0x2f8
 2479 02f1 0E       		.uleb128 0xe
 2480 02f2 F8020000 		.4byte	0x2f8
 2481 02f6 00       		.byte	0
 2482 02f7 00       		.byte	0
 2483 02f8 02       		.uleb128 0x2
 2484 02f9 04       		.byte	0x4
 2485 02fa 07       		.byte	0x7
 2486 02fb 5E0C0000 		.4byte	.LASF59
 2487 02ff 03       		.uleb128 0x3
 2488 0300 22080000 		.4byte	.LASF60
 2489 0304 07       		.byte	0x7
 2490 0305 F9       		.byte	0xf9
 2491 0306 43020000 		.4byte	0x243
 2492 030a 09       		.uleb128 0x9
 2493 030b 14       		.byte	0x14
 2494 030c 07       		.byte	0x7
 2495 030d FE       		.byte	0xfe
 2496 030e BC030000 		.4byte	0x3bc
 2497 0312 0F       		.uleb128 0xf
 2498 0313 51060000 		.4byte	.LASF48
 2499 0317 07       		.byte	0x7
 2500 0318 0301     		.2byte	0x103
 2501 031a 8D000000 		.4byte	0x8d
 2502 031e 00       		.byte	0
 2503 031f 0F       		.uleb128 0xf
 2504 0320 BA0C0000 		.4byte	.LASF49
 2505 0324 07       		.byte	0x7
 2506 0325 0801     		.2byte	0x108
 2507 0327 EF000000 		.4byte	0xef
 2508 032b 02       		.byte	0x2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 107


 2509 032c 0F       		.uleb128 0xf
 2510 032d 73050000 		.4byte	.LASF50
 2511 0331 07       		.byte	0x7
 2512 0332 0D01     		.2byte	0x10d
 2513 0334 81000000 		.4byte	0x81
 2514 0338 04       		.byte	0x4
 2515 0339 0F       		.uleb128 0xf
 2516 033a F0070000 		.4byte	.LASF51
 2517 033e 07       		.byte	0x7
 2518 033f 1201     		.2byte	0x112
 2519 0341 81000000 		.4byte	0x81
 2520 0345 05       		.byte	0x5
 2521 0346 0F       		.uleb128 0xf
 2522 0347 D6040000 		.4byte	.LASF52
 2523 034b 07       		.byte	0x7
 2524 034c 1801     		.2byte	0x118
 2525 034e 81000000 		.4byte	0x81
 2526 0352 06       		.byte	0x6
 2527 0353 0F       		.uleb128 0xf
 2528 0354 45070000 		.4byte	.LASF53
 2529 0358 07       		.byte	0x7
 2530 0359 1E01     		.2byte	0x11e
 2531 035b 81000000 		.4byte	0x81
 2532 035f 07       		.byte	0x7
 2533 0360 0F       		.uleb128 0xf
 2534 0361 10050000 		.4byte	.LASF54
 2535 0365 07       		.byte	0x7
 2536 0366 2501     		.2byte	0x125
 2537 0368 FB000000 		.4byte	0xfb
 2538 036c 08       		.byte	0x8
 2539 036d 0F       		.uleb128 0xf
 2540 036e 8D0C0000 		.4byte	.LASF55
 2541 0372 07       		.byte	0x7
 2542 0373 2C01     		.2byte	0x12c
 2543 0375 E8020000 		.4byte	0x2e8
 2544 0379 09       		.byte	0x9
 2545 037a 0F       		.uleb128 0xf
 2546 037b 2B030000 		.4byte	.LASF56
 2547 037f 07       		.byte	0x7
 2548 0380 3101     		.2byte	0x131
 2549 0382 81000000 		.4byte	0x81
 2550 0386 0A       		.byte	0xa
 2551 0387 0F       		.uleb128 0xf
 2552 0388 090E0000 		.4byte	.LASF57
 2553 038c 07       		.byte	0x7
 2554 038d 3901     		.2byte	0x139
 2555 038f 8D000000 		.4byte	0x8d
 2556 0393 0C       		.byte	0xc
 2557 0394 0F       		.uleb128 0xf
 2558 0395 81090000 		.4byte	.LASF58
 2559 0399 07       		.byte	0x7
 2560 039a 3E01     		.2byte	0x13e
 2561 039c 81000000 		.4byte	0x81
 2562 03a0 0E       		.byte	0xe
 2563 03a1 0F       		.uleb128 0xf
 2564 03a2 240B0000 		.4byte	.LASF28
 2565 03a6 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 108


 2566 03a7 4401     		.2byte	0x144
 2567 03a9 8D000000 		.4byte	0x8d
 2568 03ad 10       		.byte	0x10
 2569 03ae 0F       		.uleb128 0xf
 2570 03af CF040000 		.4byte	.LASF25
 2571 03b3 07       		.byte	0x7
 2572 03b4 4901     		.2byte	0x149
 2573 03b6 8D000000 		.4byte	0x8d
 2574 03ba 12       		.byte	0x12
 2575 03bb 00       		.byte	0
 2576 03bc 05       		.uleb128 0x5
 2577 03bd EB0C0000 		.4byte	.LASF61
 2578 03c1 07       		.byte	0x7
 2579 03c2 4A01     		.2byte	0x14a
 2580 03c4 0A030000 		.4byte	0x30a
 2581 03c8 10       		.uleb128 0x10
 2582 03c9 A802     		.2byte	0x2a8
 2583 03cb 07       		.byte	0x7
 2584 03cc 5001     		.2byte	0x150
 2585 03ce A2050000 		.4byte	0x5a2
 2586 03d2 0F       		.uleb128 0xf
 2587 03d3 9F0A0000 		.4byte	.LASF62
 2588 03d7 07       		.byte	0x7
 2589 03d8 5501     		.2byte	0x155
 2590 03da BC030000 		.4byte	0x3bc
 2591 03de 00       		.byte	0
 2592 03df 0F       		.uleb128 0xf
 2593 03e0 A70A0000 		.4byte	.LASF63
 2594 03e4 07       		.byte	0x7
 2595 03e5 5A01     		.2byte	0x15a
 2596 03e7 BC030000 		.4byte	0x3bc
 2597 03eb 14       		.byte	0x14
 2598 03ec 0F       		.uleb128 0xf
 2599 03ed AF0A0000 		.4byte	.LASF64
 2600 03f1 07       		.byte	0x7
 2601 03f2 5F01     		.2byte	0x15f
 2602 03f4 BC030000 		.4byte	0x3bc
 2603 03f8 28       		.byte	0x28
 2604 03f9 0F       		.uleb128 0xf
 2605 03fa B70A0000 		.4byte	.LASF65
 2606 03fe 07       		.byte	0x7
 2607 03ff 6401     		.2byte	0x164
 2608 0401 BC030000 		.4byte	0x3bc
 2609 0405 3C       		.byte	0x3c
 2610 0406 0F       		.uleb128 0xf
 2611 0407 BF0A0000 		.4byte	.LASF66
 2612 040b 07       		.byte	0x7
 2613 040c 6901     		.2byte	0x169
 2614 040e BC030000 		.4byte	0x3bc
 2615 0412 50       		.byte	0x50
 2616 0413 0F       		.uleb128 0xf
 2617 0414 C70A0000 		.4byte	.LASF67
 2618 0418 07       		.byte	0x7
 2619 0419 6E01     		.2byte	0x16e
 2620 041b BC030000 		.4byte	0x3bc
 2621 041f 64       		.byte	0x64
 2622 0420 0F       		.uleb128 0xf
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 109


 2623 0421 CF0A0000 		.4byte	.LASF68
 2624 0425 07       		.byte	0x7
 2625 0426 7301     		.2byte	0x173
 2626 0428 BC030000 		.4byte	0x3bc
 2627 042c 78       		.byte	0x78
 2628 042d 0F       		.uleb128 0xf
 2629 042e D70A0000 		.4byte	.LASF69
 2630 0432 07       		.byte	0x7
 2631 0433 7801     		.2byte	0x178
 2632 0435 BC030000 		.4byte	0x3bc
 2633 0439 8C       		.byte	0x8c
 2634 043a 0F       		.uleb128 0xf
 2635 043b DF0A0000 		.4byte	.LASF70
 2636 043f 07       		.byte	0x7
 2637 0440 7D01     		.2byte	0x17d
 2638 0442 BC030000 		.4byte	0x3bc
 2639 0446 A0       		.byte	0xa0
 2640 0447 0F       		.uleb128 0xf
 2641 0448 E70A0000 		.4byte	.LASF71
 2642 044c 07       		.byte	0x7
 2643 044d 8201     		.2byte	0x182
 2644 044f BC030000 		.4byte	0x3bc
 2645 0453 B4       		.byte	0xb4
 2646 0454 0F       		.uleb128 0xf
 2647 0455 28100000 		.4byte	.LASF72
 2648 0459 07       		.byte	0x7
 2649 045a 8701     		.2byte	0x187
 2650 045c BC030000 		.4byte	0x3bc
 2651 0460 C8       		.byte	0xc8
 2652 0461 0F       		.uleb128 0xf
 2653 0462 31100000 		.4byte	.LASF73
 2654 0466 07       		.byte	0x7
 2655 0467 8C01     		.2byte	0x18c
 2656 0469 BC030000 		.4byte	0x3bc
 2657 046d DC       		.byte	0xdc
 2658 046e 0F       		.uleb128 0xf
 2659 046f 00000000 		.4byte	.LASF74
 2660 0473 07       		.byte	0x7
 2661 0474 9101     		.2byte	0x191
 2662 0476 BC030000 		.4byte	0x3bc
 2663 047a F0       		.byte	0xf0
 2664 047b 11       		.uleb128 0x11
 2665 047c 09000000 		.4byte	.LASF75
 2666 0480 07       		.byte	0x7
 2667 0481 9601     		.2byte	0x196
 2668 0483 BC030000 		.4byte	0x3bc
 2669 0487 0401     		.2byte	0x104
 2670 0489 11       		.uleb128 0x11
 2671 048a 12000000 		.4byte	.LASF76
 2672 048e 07       		.byte	0x7
 2673 048f 9B01     		.2byte	0x19b
 2674 0491 BC030000 		.4byte	0x3bc
 2675 0495 1801     		.2byte	0x118
 2676 0497 11       		.uleb128 0x11
 2677 0498 1B000000 		.4byte	.LASF77
 2678 049c 07       		.byte	0x7
 2679 049d A001     		.2byte	0x1a0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 110


 2680 049f BC030000 		.4byte	0x3bc
 2681 04a3 2C01     		.2byte	0x12c
 2682 04a5 11       		.uleb128 0x11
 2683 04a6 24000000 		.4byte	.LASF78
 2684 04aa 07       		.byte	0x7
 2685 04ab A501     		.2byte	0x1a5
 2686 04ad BC030000 		.4byte	0x3bc
 2687 04b1 4001     		.2byte	0x140
 2688 04b3 11       		.uleb128 0x11
 2689 04b4 2D000000 		.4byte	.LASF79
 2690 04b8 07       		.byte	0x7
 2691 04b9 AA01     		.2byte	0x1aa
 2692 04bb BC030000 		.4byte	0x3bc
 2693 04bf 5401     		.2byte	0x154
 2694 04c1 11       		.uleb128 0x11
 2695 04c2 36000000 		.4byte	.LASF80
 2696 04c6 07       		.byte	0x7
 2697 04c7 AF01     		.2byte	0x1af
 2698 04c9 BC030000 		.4byte	0x3bc
 2699 04cd 6801     		.2byte	0x168
 2700 04cf 11       		.uleb128 0x11
 2701 04d0 3F000000 		.4byte	.LASF81
 2702 04d4 07       		.byte	0x7
 2703 04d5 B401     		.2byte	0x1b4
 2704 04d7 BC030000 		.4byte	0x3bc
 2705 04db 7C01     		.2byte	0x17c
 2706 04dd 11       		.uleb128 0x11
 2707 04de 11010000 		.4byte	.LASF82
 2708 04e2 07       		.byte	0x7
 2709 04e3 B901     		.2byte	0x1b9
 2710 04e5 BC030000 		.4byte	0x3bc
 2711 04e9 9001     		.2byte	0x190
 2712 04eb 11       		.uleb128 0x11
 2713 04ec 1A010000 		.4byte	.LASF83
 2714 04f0 07       		.byte	0x7
 2715 04f1 BE01     		.2byte	0x1be
 2716 04f3 BC030000 		.4byte	0x3bc
 2717 04f7 A401     		.2byte	0x1a4
 2718 04f9 11       		.uleb128 0x11
 2719 04fa 23010000 		.4byte	.LASF84
 2720 04fe 07       		.byte	0x7
 2721 04ff C301     		.2byte	0x1c3
 2722 0501 BC030000 		.4byte	0x3bc
 2723 0505 B801     		.2byte	0x1b8
 2724 0507 11       		.uleb128 0x11
 2725 0508 2C010000 		.4byte	.LASF85
 2726 050c 07       		.byte	0x7
 2727 050d C801     		.2byte	0x1c8
 2728 050f BC030000 		.4byte	0x3bc
 2729 0513 CC01     		.2byte	0x1cc
 2730 0515 11       		.uleb128 0x11
 2731 0516 35010000 		.4byte	.LASF86
 2732 051a 07       		.byte	0x7
 2733 051b CD01     		.2byte	0x1cd
 2734 051d BC030000 		.4byte	0x3bc
 2735 0521 E001     		.2byte	0x1e0
 2736 0523 11       		.uleb128 0x11
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 111


 2737 0524 3E010000 		.4byte	.LASF87
 2738 0528 07       		.byte	0x7
 2739 0529 D201     		.2byte	0x1d2
 2740 052b BC030000 		.4byte	0x3bc
 2741 052f F401     		.2byte	0x1f4
 2742 0531 11       		.uleb128 0x11
 2743 0532 47010000 		.4byte	.LASF88
 2744 0536 07       		.byte	0x7
 2745 0537 D701     		.2byte	0x1d7
 2746 0539 BC030000 		.4byte	0x3bc
 2747 053d 0802     		.2byte	0x208
 2748 053f 11       		.uleb128 0x11
 2749 0540 50010000 		.4byte	.LASF89
 2750 0544 07       		.byte	0x7
 2751 0545 DC01     		.2byte	0x1dc
 2752 0547 BC030000 		.4byte	0x3bc
 2753 054b 1C02     		.2byte	0x21c
 2754 054d 11       		.uleb128 0x11
 2755 054e 59010000 		.4byte	.LASF90
 2756 0552 07       		.byte	0x7
 2757 0553 E101     		.2byte	0x1e1
 2758 0555 BC030000 		.4byte	0x3bc
 2759 0559 3002     		.2byte	0x230
 2760 055b 11       		.uleb128 0x11
 2761 055c 62010000 		.4byte	.LASF91
 2762 0560 07       		.byte	0x7
 2763 0561 E601     		.2byte	0x1e6
 2764 0563 BC030000 		.4byte	0x3bc
 2765 0567 4402     		.2byte	0x244
 2766 0569 11       		.uleb128 0x11
 2767 056a 39020000 		.4byte	.LASF92
 2768 056e 07       		.byte	0x7
 2769 056f EB01     		.2byte	0x1eb
 2770 0571 BC030000 		.4byte	0x3bc
 2771 0575 5802     		.2byte	0x258
 2772 0577 11       		.uleb128 0x11
 2773 0578 42020000 		.4byte	.LASF93
 2774 057c 07       		.byte	0x7
 2775 057d F001     		.2byte	0x1f0
 2776 057f BC030000 		.4byte	0x3bc
 2777 0583 6C02     		.2byte	0x26c
 2778 0585 11       		.uleb128 0x11
 2779 0586 4B020000 		.4byte	.LASF94
 2780 058a 07       		.byte	0x7
 2781 058b F501     		.2byte	0x1f5
 2782 058d BC030000 		.4byte	0x3bc
 2783 0591 8002     		.2byte	0x280
 2784 0593 11       		.uleb128 0x11
 2785 0594 54020000 		.4byte	.LASF95
 2786 0598 07       		.byte	0x7
 2787 0599 FA01     		.2byte	0x1fa
 2788 059b BC030000 		.4byte	0x3bc
 2789 059f 9402     		.2byte	0x294
 2790 05a1 00       		.byte	0
 2791 05a2 05       		.uleb128 0x5
 2792 05a3 BE020000 		.4byte	.LASF96
 2793 05a7 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 112


 2794 05a8 FB01     		.2byte	0x1fb
 2795 05aa C8030000 		.4byte	0x3c8
 2796 05ae 12       		.uleb128 0x12
 2797 05af 0A       		.byte	0xa
 2798 05b0 07       		.byte	0x7
 2799 05b1 0102     		.2byte	0x201
 2800 05b3 06060000 		.4byte	0x606
 2801 05b7 13       		.uleb128 0x13
 2802 05b8 72617700 		.ascii	"raw\000"
 2803 05bc 07       		.byte	0x7
 2804 05bd 0602     		.2byte	0x206
 2805 05bf 06060000 		.4byte	0x606
 2806 05c3 00       		.byte	0
 2807 05c4 0F       		.uleb128 0xf
 2808 05c5 7D0E0000 		.4byte	.LASF97
 2809 05c9 07       		.byte	0x7
 2810 05ca 0B02     		.2byte	0x20b
 2811 05cc 06060000 		.4byte	0x606
 2812 05d0 02       		.byte	0x2
 2813 05d1 0F       		.uleb128 0xf
 2814 05d2 C30C0000 		.4byte	.LASF98
 2815 05d6 07       		.byte	0x7
 2816 05d7 1102     		.2byte	0x211
 2817 05d9 E8020000 		.4byte	0x2e8
 2818 05dd 04       		.byte	0x4
 2819 05de 0F       		.uleb128 0xf
 2820 05df 100A0000 		.4byte	.LASF99
 2821 05e3 07       		.byte	0x7
 2822 05e4 1602     		.2byte	0x216
 2823 05e6 EF000000 		.4byte	0xef
 2824 05ea 06       		.byte	0x6
 2825 05eb 0F       		.uleb128 0xf
 2826 05ec 1C0F0000 		.4byte	.LASF100
 2827 05f0 07       		.byte	0x7
 2828 05f1 1B02     		.2byte	0x21b
 2829 05f3 16060000 		.4byte	0x616
 2830 05f7 08       		.byte	0x8
 2831 05f8 0F       		.uleb128 0xf
 2832 05f9 07070000 		.4byte	.LASF101
 2833 05fd 07       		.byte	0x7
 2834 05fe 2002     		.2byte	0x220
 2835 0600 E8020000 		.4byte	0x2e8
 2836 0604 09       		.byte	0x9
 2837 0605 00       		.byte	0
 2838 0606 0D       		.uleb128 0xd
 2839 0607 8D000000 		.4byte	0x8d
 2840 060b 16060000 		.4byte	0x616
 2841 060f 0E       		.uleb128 0xe
 2842 0610 F8020000 		.4byte	0x2f8
 2843 0614 00       		.byte	0
 2844 0615 00       		.byte	0
 2845 0616 0D       		.uleb128 0xd
 2846 0617 FB000000 		.4byte	0xfb
 2847 061b 26060000 		.4byte	0x626
 2848 061f 0E       		.uleb128 0xe
 2849 0620 F8020000 		.4byte	0x2f8
 2850 0624 00       		.byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 113


 2851 0625 00       		.byte	0
 2852 0626 05       		.uleb128 0x5
 2853 0627 7A040000 		.4byte	.LASF102
 2854 062b 07       		.byte	0x7
 2855 062c 2102     		.2byte	0x221
 2856 062e AE050000 		.4byte	0x5ae
 2857 0632 10       		.uleb128 0x10
 2858 0633 5401     		.2byte	0x154
 2859 0635 07       		.byte	0x7
 2860 0636 2702     		.2byte	0x227
 2861 0638 FF070000 		.4byte	0x7ff
 2862 063c 0F       		.uleb128 0xf
 2863 063d 9F0A0000 		.4byte	.LASF62
 2864 0641 07       		.byte	0x7
 2865 0642 2C02     		.2byte	0x22c
 2866 0644 FF070000 		.4byte	0x7ff
 2867 0648 00       		.byte	0
 2868 0649 0F       		.uleb128 0xf
 2869 064a A70A0000 		.4byte	.LASF63
 2870 064e 07       		.byte	0x7
 2871 064f 3102     		.2byte	0x231
 2872 0651 FF070000 		.4byte	0x7ff
 2873 0655 0A       		.byte	0xa
 2874 0656 0F       		.uleb128 0xf
 2875 0657 AF0A0000 		.4byte	.LASF64
 2876 065b 07       		.byte	0x7
 2877 065c 3602     		.2byte	0x236
 2878 065e FF070000 		.4byte	0x7ff
 2879 0662 14       		.byte	0x14
 2880 0663 0F       		.uleb128 0xf
 2881 0664 B70A0000 		.4byte	.LASF65
 2882 0668 07       		.byte	0x7
 2883 0669 3B02     		.2byte	0x23b
 2884 066b FF070000 		.4byte	0x7ff
 2885 066f 1E       		.byte	0x1e
 2886 0670 0F       		.uleb128 0xf
 2887 0671 BF0A0000 		.4byte	.LASF66
 2888 0675 07       		.byte	0x7
 2889 0676 4002     		.2byte	0x240
 2890 0678 FF070000 		.4byte	0x7ff
 2891 067c 28       		.byte	0x28
 2892 067d 0F       		.uleb128 0xf
 2893 067e C70A0000 		.4byte	.LASF67
 2894 0682 07       		.byte	0x7
 2895 0683 4502     		.2byte	0x245
 2896 0685 FF070000 		.4byte	0x7ff
 2897 0689 32       		.byte	0x32
 2898 068a 0F       		.uleb128 0xf
 2899 068b CF0A0000 		.4byte	.LASF68
 2900 068f 07       		.byte	0x7
 2901 0690 4A02     		.2byte	0x24a
 2902 0692 FF070000 		.4byte	0x7ff
 2903 0696 3C       		.byte	0x3c
 2904 0697 0F       		.uleb128 0xf
 2905 0698 D70A0000 		.4byte	.LASF69
 2906 069c 07       		.byte	0x7
 2907 069d 4F02     		.2byte	0x24f
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 114


 2908 069f FF070000 		.4byte	0x7ff
 2909 06a3 46       		.byte	0x46
 2910 06a4 0F       		.uleb128 0xf
 2911 06a5 DF0A0000 		.4byte	.LASF70
 2912 06a9 07       		.byte	0x7
 2913 06aa 5402     		.2byte	0x254
 2914 06ac FF070000 		.4byte	0x7ff
 2915 06b0 50       		.byte	0x50
 2916 06b1 0F       		.uleb128 0xf
 2917 06b2 E70A0000 		.4byte	.LASF71
 2918 06b6 07       		.byte	0x7
 2919 06b7 5902     		.2byte	0x259
 2920 06b9 FF070000 		.4byte	0x7ff
 2921 06bd 5A       		.byte	0x5a
 2922 06be 0F       		.uleb128 0xf
 2923 06bf 28100000 		.4byte	.LASF72
 2924 06c3 07       		.byte	0x7
 2925 06c4 5E02     		.2byte	0x25e
 2926 06c6 FF070000 		.4byte	0x7ff
 2927 06ca 64       		.byte	0x64
 2928 06cb 0F       		.uleb128 0xf
 2929 06cc 31100000 		.4byte	.LASF73
 2930 06d0 07       		.byte	0x7
 2931 06d1 6302     		.2byte	0x263
 2932 06d3 FF070000 		.4byte	0x7ff
 2933 06d7 6E       		.byte	0x6e
 2934 06d8 0F       		.uleb128 0xf
 2935 06d9 00000000 		.4byte	.LASF74
 2936 06dd 07       		.byte	0x7
 2937 06de 6802     		.2byte	0x268
 2938 06e0 FF070000 		.4byte	0x7ff
 2939 06e4 78       		.byte	0x78
 2940 06e5 0F       		.uleb128 0xf
 2941 06e6 09000000 		.4byte	.LASF75
 2942 06ea 07       		.byte	0x7
 2943 06eb 6D02     		.2byte	0x26d
 2944 06ed FF070000 		.4byte	0x7ff
 2945 06f1 82       		.byte	0x82
 2946 06f2 0F       		.uleb128 0xf
 2947 06f3 12000000 		.4byte	.LASF76
 2948 06f7 07       		.byte	0x7
 2949 06f8 7202     		.2byte	0x272
 2950 06fa FF070000 		.4byte	0x7ff
 2951 06fe 8C       		.byte	0x8c
 2952 06ff 0F       		.uleb128 0xf
 2953 0700 1B000000 		.4byte	.LASF77
 2954 0704 07       		.byte	0x7
 2955 0705 7702     		.2byte	0x277
 2956 0707 FF070000 		.4byte	0x7ff
 2957 070b 96       		.byte	0x96
 2958 070c 0F       		.uleb128 0xf
 2959 070d 24000000 		.4byte	.LASF78
 2960 0711 07       		.byte	0x7
 2961 0712 7C02     		.2byte	0x27c
 2962 0714 FF070000 		.4byte	0x7ff
 2963 0718 A0       		.byte	0xa0
 2964 0719 0F       		.uleb128 0xf
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 115


 2965 071a 2D000000 		.4byte	.LASF79
 2966 071e 07       		.byte	0x7
 2967 071f 8102     		.2byte	0x281
 2968 0721 FF070000 		.4byte	0x7ff
 2969 0725 AA       		.byte	0xaa
 2970 0726 0F       		.uleb128 0xf
 2971 0727 36000000 		.4byte	.LASF80
 2972 072b 07       		.byte	0x7
 2973 072c 8602     		.2byte	0x286
 2974 072e FF070000 		.4byte	0x7ff
 2975 0732 B4       		.byte	0xb4
 2976 0733 0F       		.uleb128 0xf
 2977 0734 3F000000 		.4byte	.LASF81
 2978 0738 07       		.byte	0x7
 2979 0739 8B02     		.2byte	0x28b
 2980 073b FF070000 		.4byte	0x7ff
 2981 073f BE       		.byte	0xbe
 2982 0740 0F       		.uleb128 0xf
 2983 0741 11010000 		.4byte	.LASF82
 2984 0745 07       		.byte	0x7
 2985 0746 9002     		.2byte	0x290
 2986 0748 FF070000 		.4byte	0x7ff
 2987 074c C8       		.byte	0xc8
 2988 074d 0F       		.uleb128 0xf
 2989 074e 1A010000 		.4byte	.LASF83
 2990 0752 07       		.byte	0x7
 2991 0753 9502     		.2byte	0x295
 2992 0755 FF070000 		.4byte	0x7ff
 2993 0759 D2       		.byte	0xd2
 2994 075a 0F       		.uleb128 0xf
 2995 075b 23010000 		.4byte	.LASF84
 2996 075f 07       		.byte	0x7
 2997 0760 9A02     		.2byte	0x29a
 2998 0762 FF070000 		.4byte	0x7ff
 2999 0766 DC       		.byte	0xdc
 3000 0767 0F       		.uleb128 0xf
 3001 0768 2C010000 		.4byte	.LASF85
 3002 076c 07       		.byte	0x7
 3003 076d 9F02     		.2byte	0x29f
 3004 076f FF070000 		.4byte	0x7ff
 3005 0773 E6       		.byte	0xe6
 3006 0774 0F       		.uleb128 0xf
 3007 0775 35010000 		.4byte	.LASF86
 3008 0779 07       		.byte	0x7
 3009 077a A402     		.2byte	0x2a4
 3010 077c FF070000 		.4byte	0x7ff
 3011 0780 F0       		.byte	0xf0
 3012 0781 0F       		.uleb128 0xf
 3013 0782 3E010000 		.4byte	.LASF87
 3014 0786 07       		.byte	0x7
 3015 0787 A902     		.2byte	0x2a9
 3016 0789 FF070000 		.4byte	0x7ff
 3017 078d FA       		.byte	0xfa
 3018 078e 11       		.uleb128 0x11
 3019 078f 47010000 		.4byte	.LASF88
 3020 0793 07       		.byte	0x7
 3021 0794 AE02     		.2byte	0x2ae
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 116


 3022 0796 FF070000 		.4byte	0x7ff
 3023 079a 0401     		.2byte	0x104
 3024 079c 11       		.uleb128 0x11
 3025 079d 50010000 		.4byte	.LASF89
 3026 07a1 07       		.byte	0x7
 3027 07a2 B302     		.2byte	0x2b3
 3028 07a4 FF070000 		.4byte	0x7ff
 3029 07a8 0E01     		.2byte	0x10e
 3030 07aa 11       		.uleb128 0x11
 3031 07ab 59010000 		.4byte	.LASF90
 3032 07af 07       		.byte	0x7
 3033 07b0 B802     		.2byte	0x2b8
 3034 07b2 FF070000 		.4byte	0x7ff
 3035 07b6 1801     		.2byte	0x118
 3036 07b8 11       		.uleb128 0x11
 3037 07b9 62010000 		.4byte	.LASF91
 3038 07bd 07       		.byte	0x7
 3039 07be BD02     		.2byte	0x2bd
 3040 07c0 FF070000 		.4byte	0x7ff
 3041 07c4 2201     		.2byte	0x122
 3042 07c6 11       		.uleb128 0x11
 3043 07c7 39020000 		.4byte	.LASF92
 3044 07cb 07       		.byte	0x7
 3045 07cc C202     		.2byte	0x2c2
 3046 07ce FF070000 		.4byte	0x7ff
 3047 07d2 2C01     		.2byte	0x12c
 3048 07d4 11       		.uleb128 0x11
 3049 07d5 42020000 		.4byte	.LASF93
 3050 07d9 07       		.byte	0x7
 3051 07da C702     		.2byte	0x2c7
 3052 07dc FF070000 		.4byte	0x7ff
 3053 07e0 3601     		.2byte	0x136
 3054 07e2 11       		.uleb128 0x11
 3055 07e3 4B020000 		.4byte	.LASF94
 3056 07e7 07       		.byte	0x7
 3057 07e8 CC02     		.2byte	0x2cc
 3058 07ea FF070000 		.4byte	0x7ff
 3059 07ee 4001     		.2byte	0x140
 3060 07f0 11       		.uleb128 0x11
 3061 07f1 54020000 		.4byte	.LASF95
 3062 07f5 07       		.byte	0x7
 3063 07f6 D102     		.2byte	0x2d1
 3064 07f8 FF070000 		.4byte	0x7ff
 3065 07fc 4A01     		.2byte	0x14a
 3066 07fe 00       		.byte	0
 3067 07ff 0D       		.uleb128 0xd
 3068 0800 26060000 		.4byte	0x626
 3069 0804 0F080000 		.4byte	0x80f
 3070 0808 0E       		.uleb128 0xe
 3071 0809 F8020000 		.4byte	0x2f8
 3072 080d 00       		.byte	0
 3073 080e 00       		.byte	0
 3074 080f 05       		.uleb128 0x5
 3075 0810 0B100000 		.4byte	.LASF103
 3076 0814 07       		.byte	0x7
 3077 0815 D202     		.2byte	0x2d2
 3078 0817 32060000 		.4byte	0x632
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 117


 3079 081b 10       		.uleb128 0x10
 3080 081c 4C04     		.2byte	0x44c
 3081 081e 07       		.byte	0x7
 3082 081f D802     		.2byte	0x2d8
 3083 0821 24090000 		.4byte	0x924
 3084 0825 0F       		.uleb128 0xf
 3085 0826 3E090000 		.4byte	.LASF104
 3086 082a 07       		.byte	0x7
 3087 082b DF02     		.2byte	0x2df
 3088 082d 8D000000 		.4byte	0x8d
 3089 0831 00       		.byte	0
 3090 0832 0F       		.uleb128 0xf
 3091 0833 770F0000 		.4byte	.LASF105
 3092 0837 07       		.byte	0x7
 3093 0838 E402     		.2byte	0x2e4
 3094 083a 8D000000 		.4byte	0x8d
 3095 083e 02       		.byte	0x2
 3096 083f 0F       		.uleb128 0xf
 3097 0840 90010000 		.4byte	.LASF106
 3098 0844 07       		.byte	0x7
 3099 0845 E902     		.2byte	0x2e9
 3100 0847 8D000000 		.4byte	0x8d
 3101 084b 04       		.byte	0x4
 3102 084c 0F       		.uleb128 0xf
 3103 084d 150A0000 		.4byte	.LASF107
 3104 0851 07       		.byte	0x7
 3105 0852 EF02     		.2byte	0x2ef
 3106 0854 8D000000 		.4byte	0x8d
 3107 0858 06       		.byte	0x6
 3108 0859 0F       		.uleb128 0xf
 3109 085a 78010000 		.4byte	.LASF108
 3110 085e 07       		.byte	0x7
 3111 085f F402     		.2byte	0x2f4
 3112 0861 8D000000 		.4byte	0x8d
 3113 0865 08       		.byte	0x8
 3114 0866 0F       		.uleb128 0xf
 3115 0867 5C060000 		.4byte	.LASF109
 3116 086b 07       		.byte	0x7
 3117 086c F902     		.2byte	0x2f9
 3118 086e D7000000 		.4byte	0xd7
 3119 0872 0C       		.byte	0xc
 3120 0873 0F       		.uleb128 0xf
 3121 0874 050A0000 		.4byte	.LASF110
 3122 0878 07       		.byte	0x7
 3123 0879 FF02     		.2byte	0x2ff
 3124 087b 24090000 		.4byte	0x924
 3125 087f 10       		.byte	0x10
 3126 0880 0F       		.uleb128 0xf
 3127 0881 420B0000 		.4byte	.LASF111
 3128 0885 07       		.byte	0x7
 3129 0886 0603     		.2byte	0x306
 3130 0888 24090000 		.4byte	0x924
 3131 088c 18       		.byte	0x18
 3132 088d 0F       		.uleb128 0xf
 3133 088e 68090000 		.4byte	.LASF112
 3134 0892 07       		.byte	0x7
 3135 0893 1603     		.2byte	0x316
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 118


 3136 0895 34090000 		.4byte	0x934
 3137 0899 20       		.byte	0x20
 3138 089a 0F       		.uleb128 0xf
 3139 089b F9070000 		.4byte	.LASF113
 3140 089f 07       		.byte	0x7
 3141 08a0 1C03     		.2byte	0x31c
 3142 08a2 8D000000 		.4byte	0x8d
 3143 08a6 42       		.byte	0x42
 3144 08a7 0F       		.uleb128 0xf
 3145 08a8 70040000 		.4byte	.LASF114
 3146 08ac 07       		.byte	0x7
 3147 08ad 2103     		.2byte	0x321
 3148 08af 81000000 		.4byte	0x81
 3149 08b3 44       		.byte	0x44
 3150 08b4 0F       		.uleb128 0xf
 3151 08b5 68070000 		.4byte	.LASF115
 3152 08b9 07       		.byte	0x7
 3153 08ba 2603     		.2byte	0x326
 3154 08bc A2050000 		.4byte	0x5a2
 3155 08c0 46       		.byte	0x46
 3156 08c1 11       		.uleb128 0x11
 3157 08c2 AD030000 		.4byte	.LASF116
 3158 08c6 07       		.byte	0x7
 3159 08c7 2B03     		.2byte	0x32b
 3160 08c9 0F080000 		.4byte	0x80f
 3161 08cd EE02     		.2byte	0x2ee
 3162 08cf 11       		.uleb128 0x11
 3163 08d0 EC000000 		.4byte	.LASF117
 3164 08d4 07       		.byte	0x7
 3165 08d5 3003     		.2byte	0x330
 3166 08d7 81000000 		.4byte	0x81
 3167 08db 4204     		.2byte	0x442
 3168 08dd 11       		.uleb128 0x11
 3169 08de FA030000 		.4byte	.LASF118
 3170 08e2 07       		.byte	0x7
 3171 08e3 3503     		.2byte	0x335
 3172 08e5 81000000 		.4byte	0x81
 3173 08e9 4304     		.2byte	0x443
 3174 08eb 11       		.uleb128 0x11
 3175 08ec 22090000 		.4byte	.LASF119
 3176 08f0 07       		.byte	0x7
 3177 08f1 3A03     		.2byte	0x33a
 3178 08f3 8D000000 		.4byte	0x8d
 3179 08f7 4404     		.2byte	0x444
 3180 08f9 11       		.uleb128 0x11
 3181 08fa E0070000 		.4byte	.LASF120
 3182 08fe 07       		.byte	0x7
 3183 08ff 3F03     		.2byte	0x33f
 3184 0901 06060000 		.4byte	0x606
 3185 0905 4604     		.2byte	0x446
 3186 0907 11       		.uleb128 0x11
 3187 0908 98010000 		.4byte	.LASF121
 3188 090c 07       		.byte	0x7
 3189 090d 4403     		.2byte	0x344
 3190 090f 81000000 		.4byte	0x81
 3191 0913 4804     		.2byte	0x448
 3192 0915 11       		.uleb128 0x11
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 119


 3193 0916 690D0000 		.4byte	.LASF122
 3194 091a 07       		.byte	0x7
 3195 091b 4903     		.2byte	0x349
 3196 091d 81000000 		.4byte	0x81
 3197 0921 4904     		.2byte	0x449
 3198 0923 00       		.byte	0
 3199 0924 0D       		.uleb128 0xd
 3200 0925 99000000 		.4byte	0x99
 3201 0929 34090000 		.4byte	0x934
 3202 092d 0E       		.uleb128 0xe
 3203 092e F8020000 		.4byte	0x2f8
 3204 0932 01       		.byte	0x1
 3205 0933 00       		.byte	0
 3206 0934 0D       		.uleb128 0xd
 3207 0935 81000000 		.4byte	0x81
 3208 0939 44090000 		.4byte	0x944
 3209 093d 0E       		.uleb128 0xe
 3210 093e F8020000 		.4byte	0x2f8
 3211 0942 21       		.byte	0x21
 3212 0943 00       		.byte	0
 3213 0944 05       		.uleb128 0x5
 3214 0945 CE090000 		.4byte	.LASF123
 3215 0949 07       		.byte	0x7
 3216 094a 4A03     		.2byte	0x34a
 3217 094c 1B080000 		.4byte	0x81b
 3218 0950 12       		.uleb128 0x12
 3219 0951 1C       		.byte	0x1c
 3220 0952 07       		.byte	0x7
 3221 0953 5003     		.2byte	0x350
 3222 0955 CF090000 		.4byte	0x9cf
 3223 0959 0F       		.uleb128 0xf
 3224 095a 3E080000 		.4byte	.LASF124
 3225 095e 07       		.byte	0x7
 3226 095f 5503     		.2byte	0x355
 3227 0961 CF090000 		.4byte	0x9cf
 3228 0965 00       		.byte	0
 3229 0966 0F       		.uleb128 0xf
 3230 0967 10070000 		.4byte	.LASF125
 3231 096b 07       		.byte	0x7
 3232 096c 5A03     		.2byte	0x35a
 3233 096e CF090000 		.4byte	0x9cf
 3234 0972 04       		.byte	0x4
 3235 0973 0F       		.uleb128 0xf
 3236 0974 B6040000 		.4byte	.LASF126
 3237 0978 07       		.byte	0x7
 3238 0979 5F03     		.2byte	0x35f
 3239 097b CF090000 		.4byte	0x9cf
 3240 097f 08       		.byte	0x8
 3241 0980 0F       		.uleb128 0xf
 3242 0981 E3020000 		.4byte	.LASF127
 3243 0985 07       		.byte	0x7
 3244 0986 6403     		.2byte	0x364
 3245 0988 CF090000 		.4byte	0x9cf
 3246 098c 0C       		.byte	0xc
 3247 098d 0F       		.uleb128 0xf
 3248 098e FF0D0000 		.4byte	.LASF128
 3249 0992 07       		.byte	0x7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 120


 3250 0993 6903     		.2byte	0x369
 3251 0995 99000000 		.4byte	0x99
 3252 0999 10       		.byte	0x10
 3253 099a 0F       		.uleb128 0xf
 3254 099b 7D080000 		.4byte	.LASF129
 3255 099f 07       		.byte	0x7
 3256 09a0 6E03     		.2byte	0x36e
 3257 09a2 99000000 		.4byte	0x99
 3258 09a6 14       		.byte	0x14
 3259 09a7 0F       		.uleb128 0xf
 3260 09a8 0F060000 		.4byte	.LASF130
 3261 09ac 07       		.byte	0x7
 3262 09ad 7303     		.2byte	0x373
 3263 09af 81000000 		.4byte	0x81
 3264 09b3 18       		.byte	0x18
 3265 09b4 0F       		.uleb128 0xf
 3266 09b5 670C0000 		.4byte	.LASF131
 3267 09b9 07       		.byte	0x7
 3268 09ba 7803     		.2byte	0x378
 3269 09bc 81000000 		.4byte	0x81
 3270 09c0 19       		.byte	0x19
 3271 09c1 0F       		.uleb128 0xf
 3272 09c2 62030000 		.4byte	.LASF132
 3273 09c6 07       		.byte	0x7
 3274 09c7 7D03     		.2byte	0x37d
 3275 09c9 81000000 		.4byte	0x81
 3276 09cd 1A       		.byte	0x1a
 3277 09ce 00       		.byte	0
 3278 09cf 07       		.uleb128 0x7
 3279 09d0 04       		.byte	0x4
 3280 09d1 CB000000 		.4byte	0xcb
 3281 09d5 05       		.uleb128 0x5
 3282 09d6 E1030000 		.4byte	.LASF133
 3283 09da 07       		.byte	0x7
 3284 09db 7E03     		.2byte	0x37e
 3285 09dd 50090000 		.4byte	0x950
 3286 09e1 12       		.uleb128 0x12
 3287 09e2 20       		.byte	0x20
 3288 09e3 07       		.byte	0x7
 3289 09e4 B103     		.2byte	0x3b1
 3290 09e6 6D0A0000 		.4byte	0xa6d
 3291 09ea 0F       		.uleb128 0xf
 3292 09eb E40E0000 		.4byte	.LASF134
 3293 09ef 07       		.byte	0x7
 3294 09f0 BA03     		.2byte	0x3ba
 3295 09f2 6D0A0000 		.4byte	0xa6d
 3296 09f6 00       		.byte	0
 3297 09f7 0F       		.uleb128 0xf
 3298 09f8 780D0000 		.4byte	.LASF135
 3299 09fc 07       		.byte	0x7
 3300 09fd C103     		.2byte	0x3c1
 3301 09ff 740A0000 		.4byte	0xa74
 3302 0a03 04       		.byte	0x4
 3303 0a04 0F       		.uleb128 0xf
 3304 0a05 47090000 		.4byte	.LASF136
 3305 0a09 07       		.byte	0x7
 3306 0a0a C703     		.2byte	0x3c7
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 121


 3307 0a0c 760A0000 		.4byte	0xa76
 3308 0a10 08       		.byte	0x8
 3309 0a11 0F       		.uleb128 0xf
 3310 0a12 4E080000 		.4byte	.LASF137
 3311 0a16 07       		.byte	0x7
 3312 0a17 CD03     		.2byte	0x3cd
 3313 0a19 740A0000 		.4byte	0xa74
 3314 0a1d 0C       		.byte	0xc
 3315 0a1e 0F       		.uleb128 0xf
 3316 0a1f AA0C0000 		.4byte	.LASF138
 3317 0a23 07       		.byte	0x7
 3318 0a24 D403     		.2byte	0x3d4
 3319 0a26 7C0A0000 		.4byte	0xa7c
 3320 0a2a 10       		.byte	0x10
 3321 0a2b 0F       		.uleb128 0xf
 3322 0a2c 4C0D0000 		.4byte	.LASF139
 3323 0a30 07       		.byte	0x7
 3324 0a31 D903     		.2byte	0x3d9
 3325 0a33 99000000 		.4byte	0x99
 3326 0a37 14       		.byte	0x14
 3327 0a38 0F       		.uleb128 0xf
 3328 0a39 33050000 		.4byte	.LASF140
 3329 0a3d 07       		.byte	0x7
 3330 0a3e E003     		.2byte	0x3e0
 3331 0a40 8D000000 		.4byte	0x8d
 3332 0a44 18       		.byte	0x18
 3333 0a45 0F       		.uleb128 0xf
 3334 0a46 19040000 		.4byte	.LASF141
 3335 0a4a 07       		.byte	0x7
 3336 0a4b E703     		.2byte	0x3e7
 3337 0a4d 81000000 		.4byte	0x81
 3338 0a51 1A       		.byte	0x1a
 3339 0a52 0F       		.uleb128 0xf
 3340 0a53 24070000 		.4byte	.LASF142
 3341 0a57 07       		.byte	0x7
 3342 0a58 F103     		.2byte	0x3f1
 3343 0a5a 81000000 		.4byte	0x81
 3344 0a5e 1B       		.byte	0x1b
 3345 0a5f 0F       		.uleb128 0xf
 3346 0a60 0A040000 		.4byte	.LASF143
 3347 0a64 07       		.byte	0x7
 3348 0a65 F903     		.2byte	0x3f9
 3349 0a67 820A0000 		.4byte	0xa82
 3350 0a6b 1C       		.byte	0x1c
 3351 0a6c 00       		.byte	0
 3352 0a6d 07       		.uleb128 0x7
 3353 0a6e 04       		.byte	0x4
 3354 0a6f 730A0000 		.4byte	0xa73
 3355 0a73 14       		.uleb128 0x14
 3356 0a74 15       		.uleb128 0x15
 3357 0a75 04       		.byte	0x4
 3358 0a76 07       		.uleb128 0x7
 3359 0a77 04       		.byte	0x4
 3360 0a78 26060000 		.4byte	0x626
 3361 0a7c 07       		.uleb128 0x7
 3362 0a7d 04       		.byte	0x4
 3363 0a7e 81000000 		.4byte	0x81
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 122


 3364 0a82 07       		.uleb128 0x7
 3365 0a83 04       		.byte	0x4
 3366 0a84 02020000 		.4byte	0x202
 3367 0a88 05       		.uleb128 0x5
 3368 0a89 EF040000 		.4byte	.LASF144
 3369 0a8d 07       		.byte	0x7
 3370 0a8e FA03     		.2byte	0x3fa
 3371 0a90 E1090000 		.4byte	0x9e1
 3372 0a94 10       		.uleb128 0x10
 3373 0a95 4004     		.2byte	0x440
 3374 0a97 07       		.byte	0x7
 3375 0a98 0004     		.2byte	0x400
 3376 0a9a AC0A0000 		.4byte	0xaac
 3377 0a9e 0F       		.uleb128 0xf
 3378 0a9f 68030000 		.4byte	.LASF145
 3379 0aa3 07       		.byte	0x7
 3380 0aa4 0504     		.2byte	0x405
 3381 0aa6 AC0A0000 		.4byte	0xaac
 3382 0aaa 00       		.byte	0
 3383 0aab 00       		.byte	0
 3384 0aac 0D       		.uleb128 0xd
 3385 0aad 880A0000 		.4byte	0xa88
 3386 0ab1 BC0A0000 		.4byte	0xabc
 3387 0ab5 0E       		.uleb128 0xe
 3388 0ab6 F8020000 		.4byte	0x2f8
 3389 0aba 21       		.byte	0x21
 3390 0abb 00       		.byte	0
 3391 0abc 05       		.uleb128 0x5
 3392 0abd 85070000 		.4byte	.LASF146
 3393 0ac1 07       		.byte	0x7
 3394 0ac2 0604     		.2byte	0x406
 3395 0ac4 940A0000 		.4byte	0xa94
 3396 0ac8 02       		.uleb128 0x2
 3397 0ac9 08       		.byte	0x8
 3398 0aca 04       		.byte	0x4
 3399 0acb 00090000 		.4byte	.LASF147
 3400 0acf 0B       		.uleb128 0xb
 3401 0ad0 01       		.byte	0x1
 3402 0ad1 33000000 		.4byte	0x33
 3403 0ad5 08       		.byte	0x8
 3404 0ad6 43       		.byte	0x43
 3405 0ad7 FA0A0000 		.4byte	0xafa
 3406 0adb 0C       		.uleb128 0xc
 3407 0adc 71070000 		.4byte	.LASF148
 3408 0ae0 00       		.byte	0
 3409 0ae1 0C       		.uleb128 0xc
 3410 0ae2 7C060000 		.4byte	.LASF149
 3411 0ae6 01       		.byte	0x1
 3412 0ae7 0C       		.uleb128 0xc
 3413 0ae8 F3050000 		.4byte	.LASF150
 3414 0aec 02       		.byte	0x2
 3415 0aed 0C       		.uleb128 0xc
 3416 0aee 8D0F0000 		.4byte	.LASF151
 3417 0af2 03       		.byte	0x3
 3418 0af3 0C       		.uleb128 0xc
 3419 0af4 B0010000 		.4byte	.LASF152
 3420 0af8 04       		.byte	0x4
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 123


 3421 0af9 00       		.byte	0
 3422 0afa 03       		.uleb128 0x3
 3423 0afb 9E080000 		.4byte	.LASF153
 3424 0aff 08       		.byte	0x8
 3425 0b00 49       		.byte	0x49
 3426 0b01 CF0A0000 		.4byte	0xacf
 3427 0b05 09       		.uleb128 0x9
 3428 0b06 08       		.byte	0x8
 3429 0b07 08       		.byte	0x8
 3430 0b08 CF       		.byte	0xcf
 3431 0b09 260B0000 		.4byte	0xb26
 3432 0b0d 0A       		.uleb128 0xa
 3433 0b0e EF0A0000 		.4byte	.LASF154
 3434 0b12 08       		.byte	0x8
 3435 0b13 D4       		.byte	0xd4
 3436 0b14 99000000 		.4byte	0x99
 3437 0b18 00       		.byte	0
 3438 0b19 0A       		.uleb128 0xa
 3439 0b1a 5E080000 		.4byte	.LASF155
 3440 0b1e 08       		.byte	0x8
 3441 0b1f D9       		.byte	0xd9
 3442 0b20 99000000 		.4byte	0x99
 3443 0b24 04       		.byte	0x4
 3444 0b25 00       		.byte	0
 3445 0b26 03       		.uleb128 0x3
 3446 0b27 CB0C0000 		.4byte	.LASF156
 3447 0b2b 08       		.byte	0x8
 3448 0b2c DA       		.byte	0xda
 3449 0b2d 050B0000 		.4byte	0xb05
 3450 0b31 16       		.uleb128 0x16
 3451 0b32 9B070000 		.4byte	.LASF157
 3452 0b36 01       		.byte	0x1
 3453 0b37 6D01     		.2byte	0x16d
 3454 0b39 BA000000 		.4byte	0xba
 3455 0b3d 01       		.byte	0x1
 3456 0b3e 4F0B0000 		.4byte	0xb4f
 3457 0b42 17       		.uleb128 0x17
 3458 0b43 7E000000 		.4byte	.LASF159
 3459 0b47 01       		.byte	0x1
 3460 0b48 6F01     		.2byte	0x16f
 3461 0b4a BA000000 		.4byte	0xba
 3462 0b4e 00       		.byte	0
 3463 0b4f 16       		.uleb128 0x16
 3464 0b50 63060000 		.4byte	.LASF158
 3465 0b54 01       		.byte	0x1
 3466 0b55 5406     		.2byte	0x654
 3467 0b57 BA000000 		.4byte	0xba
 3468 0b5b 01       		.byte	0x1
 3469 0b5c 790B0000 		.4byte	0xb79
 3470 0b60 18       		.uleb128 0x18
 3471 0b61 A90F0000 		.4byte	.LASF162
 3472 0b65 01       		.byte	0x1
 3473 0b66 5406     		.2byte	0x654
 3474 0b68 99000000 		.4byte	0x99
 3475 0b6c 17       		.uleb128 0x17
 3476 0b6d 58070000 		.4byte	.LASF160
 3477 0b71 01       		.byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 124


 3478 0b72 5606     		.2byte	0x656
 3479 0b74 BA000000 		.4byte	0xba
 3480 0b78 00       		.byte	0
 3481 0b79 16       		.uleb128 0x16
 3482 0b7a 48000000 		.4byte	.LASF161
 3483 0b7e 01       		.byte	0x1
 3484 0b7f E80A     		.2byte	0xae8
 3485 0b81 99000000 		.4byte	0x99
 3486 0b85 01       		.byte	0x1
 3487 0b86 AF0B0000 		.4byte	0xbaf
 3488 0b8a 18       		.uleb128 0x18
 3489 0b8b A90F0000 		.4byte	.LASF162
 3490 0b8f 01       		.byte	0x1
 3491 0b90 E80A     		.2byte	0xae8
 3492 0b92 99000000 		.4byte	0x99
 3493 0b96 17       		.uleb128 0x17
 3494 0b97 810C0000 		.4byte	.LASF163
 3495 0b9b 01       		.byte	0x1
 3496 0b9c EA0A     		.2byte	0xaea
 3497 0b9e 99000000 		.4byte	0x99
 3498 0ba2 17       		.uleb128 0x17
 3499 0ba3 FA020000 		.4byte	.LASF164
 3500 0ba7 01       		.byte	0x1
 3501 0ba8 EE0A     		.2byte	0xaee
 3502 0baa AF0B0000 		.4byte	0xbaf
 3503 0bae 00       		.byte	0
 3504 0baf 07       		.uleb128 0x7
 3505 0bb0 04       		.byte	0x4
 3506 0bb1 FF020000 		.4byte	0x2ff
 3507 0bb5 19       		.uleb128 0x19
 3508 0bb6 100E0000 		.4byte	.LASF263
 3509 0bba 01       		.byte	0x1
 3510 0bbb 2B04     		.2byte	0x42b
 3511 0bbd 01       		.byte	0x1
 3512 0bbe CF0B0000 		.4byte	0xbcf
 3513 0bc2 18       		.uleb128 0x18
 3514 0bc3 78020000 		.4byte	.LASF165
 3515 0bc7 01       		.byte	0x1
 3516 0bc8 2B04     		.2byte	0x42b
 3517 0bca 38020000 		.4byte	0x238
 3518 0bce 00       		.byte	0
 3519 0bcf 1A       		.uleb128 0x1a
 3520 0bd0 7D020000 		.4byte	.LASF264
 3521 0bd4 01       		.byte	0x1
 3522 0bd5 EC       		.byte	0xec
 3523 0bd6 99000000 		.4byte	0x99
 3524 0bda 00000000 		.4byte	.LFB1
 3525 0bde 10000000 		.4byte	.LFE1-.LFB1
 3526 0be2 01       		.uleb128 0x1
 3527 0be3 9C       		.byte	0x9c
 3528 0be4 1B       		.uleb128 0x1b
 3529 0be5 8A0A0000 		.4byte	.LASF166
 3530 0be9 01       		.byte	0x1
 3531 0bea 1A01     		.2byte	0x11a
 3532 0bec BA000000 		.4byte	0xba
 3533 0bf0 00000000 		.4byte	.LFB2
 3534 0bf4 38000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 125


 3535 0bf8 01       		.uleb128 0x1
 3536 0bf9 9C       		.byte	0x9c
 3537 0bfa 300C0000 		.4byte	0xc30
 3538 0bfe 1C       		.uleb128 0x1c
 3539 0bff A90F0000 		.4byte	.LASF162
 3540 0c03 01       		.byte	0x1
 3541 0c04 1A01     		.2byte	0x11a
 3542 0c06 99000000 		.4byte	0x99
 3543 0c0a 00000000 		.4byte	.LLST0
 3544 0c0e 1D       		.uleb128 0x1d
 3545 0c0f 800F0000 		.4byte	.LASF168
 3546 0c13 01       		.byte	0x1
 3547 0c14 1C01     		.2byte	0x11c
 3548 0c16 BA000000 		.4byte	0xba
 3549 0c1a 21000000 		.4byte	.LLST1
 3550 0c1e 1E       		.uleb128 0x1e
 3551 0c1f 2C000000 		.4byte	.LVL2
 3552 0c23 A2180000 		.4byte	0x18a2
 3553 0c27 1F       		.uleb128 0x1f
 3554 0c28 01       		.uleb128 0x1
 3555 0c29 50       		.byte	0x50
 3556 0c2a 03       		.uleb128 0x3
 3557 0c2b F3       		.byte	0xf3
 3558 0c2c 01       		.uleb128 0x1
 3559 0c2d 50       		.byte	0x50
 3560 0c2e 00       		.byte	0
 3561 0c2f 00       		.byte	0
 3562 0c30 20       		.uleb128 0x20
 3563 0c31 310B0000 		.4byte	0xb31
 3564 0c35 00000000 		.4byte	.LFB3
 3565 0c39 30000000 		.4byte	.LFE3-.LFB3
 3566 0c3d 01       		.uleb128 0x1
 3567 0c3e 9C       		.byte	0x9c
 3568 0c3f 650C0000 		.4byte	0xc65
 3569 0c43 21       		.uleb128 0x21
 3570 0c44 420B0000 		.4byte	0xb42
 3571 0c48 35000000 		.4byte	.LLST2
 3572 0c4c 22       		.uleb128 0x22
 3573 0c4d 12000000 		.4byte	.LBB7
 3574 0c51 14000000 		.4byte	.LBE7-.LBB7
 3575 0c55 23       		.uleb128 0x23
 3576 0c56 420B0000 		.4byte	0xb42
 3577 0c5a 24       		.uleb128 0x24
 3578 0c5b 1E000000 		.4byte	.LVL5
 3579 0c5f AE180000 		.4byte	0x18ae
 3580 0c63 00       		.byte	0
 3581 0c64 00       		.byte	0
 3582 0c65 1B       		.uleb128 0x1b
 3583 0c66 E70D0000 		.4byte	.LASF167
 3584 0c6a 01       		.byte	0x1
 3585 0c6b AB01     		.2byte	0x1ab
 3586 0c6d BA000000 		.4byte	0xba
 3587 0c71 00000000 		.4byte	.LFB4
 3588 0c75 3C000000 		.4byte	.LFE4-.LFB4
 3589 0c79 01       		.uleb128 0x1
 3590 0c7a 9C       		.byte	0x9c
 3591 0c7b BD0C0000 		.4byte	0xcbd
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 126


 3592 0c7f 1D       		.uleb128 0x1d
 3593 0c80 7E000000 		.4byte	.LASF159
 3594 0c84 01       		.byte	0x1
 3595 0c85 AD01     		.2byte	0x1ad
 3596 0c87 BA000000 		.4byte	0xba
 3597 0c8b 54000000 		.4byte	.LLST3
 3598 0c8f 1D       		.uleb128 0x1d
 3599 0c90 D1080000 		.4byte	.LASF169
 3600 0c94 01       		.byte	0x1
 3601 0c95 AF01     		.2byte	0x1af
 3602 0c97 99000000 		.4byte	0x99
 3603 0c9b 7F000000 		.4byte	.LLST4
 3604 0c9f 25       		.uleb128 0x25
 3605 0ca0 14000000 		.4byte	.LVL9
 3606 0ca4 E40B0000 		.4byte	0xbe4
 3607 0ca8 B30C0000 		.4byte	0xcb3
 3608 0cac 1F       		.uleb128 0x1f
 3609 0cad 01       		.uleb128 0x1
 3610 0cae 50       		.byte	0x50
 3611 0caf 02       		.uleb128 0x2
 3612 0cb0 74       		.byte	0x74
 3613 0cb1 00       		.sleb128 0
 3614 0cb2 00       		.byte	0
 3615 0cb3 24       		.uleb128 0x24
 3616 0cb4 2A000000 		.4byte	.LVL10
 3617 0cb8 310B0000 		.4byte	0xb31
 3618 0cbc 00       		.byte	0
 3619 0cbd 1B       		.uleb128 0x1b
 3620 0cbe BF000000 		.4byte	.LASF170
 3621 0cc2 01       		.byte	0x1
 3622 0cc3 1702     		.2byte	0x217
 3623 0cc5 BA000000 		.4byte	0xba
 3624 0cc9 00000000 		.4byte	.LFB5
 3625 0ccd 48000000 		.4byte	.LFE5-.LFB5
 3626 0cd1 01       		.uleb128 0x1
 3627 0cd2 9C       		.byte	0x9c
 3628 0cd3 200D0000 		.4byte	0xd20
 3629 0cd7 1C       		.uleb128 0x1c
 3630 0cd8 A90F0000 		.4byte	.LASF162
 3631 0cdc 01       		.byte	0x1
 3632 0cdd 1702     		.2byte	0x217
 3633 0cdf 99000000 		.4byte	0x99
 3634 0ce3 92000000 		.4byte	.LLST5
 3635 0ce7 1C       		.uleb128 0x1c
 3636 0ce8 DA020000 		.4byte	.LASF171
 3637 0cec 01       		.byte	0x1
 3638 0ced 1702     		.2byte	0x217
 3639 0cef 99000000 		.4byte	0x99
 3640 0cf3 B3000000 		.4byte	.LLST6
 3641 0cf7 1D       		.uleb128 0x1d
 3642 0cf8 800F0000 		.4byte	.LASF168
 3643 0cfc 01       		.byte	0x1
 3644 0cfd 1902     		.2byte	0x219
 3645 0cff BA000000 		.4byte	0xba
 3646 0d03 D4000000 		.4byte	.LLST7
 3647 0d07 1E       		.uleb128 0x1e
 3648 0d08 38000000 		.4byte	.LVL15
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 127


 3649 0d0c BA180000 		.4byte	0x18ba
 3650 0d10 1F       		.uleb128 0x1f
 3651 0d11 01       		.uleb128 0x1
 3652 0d12 50       		.byte	0x50
 3653 0d13 03       		.uleb128 0x3
 3654 0d14 F3       		.byte	0xf3
 3655 0d15 01       		.uleb128 0x1
 3656 0d16 50       		.byte	0x50
 3657 0d17 1F       		.uleb128 0x1f
 3658 0d18 01       		.uleb128 0x1
 3659 0d19 51       		.byte	0x51
 3660 0d1a 03       		.uleb128 0x3
 3661 0d1b F3       		.byte	0xf3
 3662 0d1c 01       		.uleb128 0x1
 3663 0d1d 51       		.byte	0x51
 3664 0d1e 00       		.byte	0
 3665 0d1f 00       		.byte	0
 3666 0d20 1B       		.uleb128 0x1b
 3667 0d21 11080000 		.4byte	.LASF172
 3668 0d25 01       		.byte	0x1
 3669 0d26 8102     		.2byte	0x281
 3670 0d28 BA000000 		.4byte	0xba
 3671 0d2c 00000000 		.4byte	.LFB6
 3672 0d30 30000000 		.4byte	.LFE6-.LFB6
 3673 0d34 01       		.uleb128 0x1
 3674 0d35 9C       		.byte	0x9c
 3675 0d36 540D0000 		.4byte	0xd54
 3676 0d3a 1D       		.uleb128 0x1d
 3677 0d3b 7E000000 		.4byte	.LASF159
 3678 0d3f 01       		.byte	0x1
 3679 0d40 8302     		.2byte	0x283
 3680 0d42 BA000000 		.4byte	0xba
 3681 0d46 E8000000 		.4byte	.LLST8
 3682 0d4a 24       		.uleb128 0x24
 3683 0d4b 1E000000 		.4byte	.LVL18
 3684 0d4f C6180000 		.4byte	0x18c6
 3685 0d53 00       		.byte	0
 3686 0d54 26       		.uleb128 0x26
 3687 0d55 370D0000 		.4byte	.LASF179
 3688 0d59 01       		.byte	0x1
 3689 0d5a 4803     		.2byte	0x348
 3690 0d5c 00000000 		.4byte	.LFB8
 3691 0d60 84000000 		.4byte	.LFE8-.LFB8
 3692 0d64 01       		.uleb128 0x1
 3693 0d65 9C       		.byte	0x9c
 3694 0d66 190E0000 		.4byte	0xe19
 3695 0d6a 1C       		.uleb128 0x1c
 3696 0d6b A90F0000 		.4byte	.LASF162
 3697 0d6f 01       		.byte	0x1
 3698 0d70 4803     		.2byte	0x348
 3699 0d72 99000000 		.4byte	0x99
 3700 0d76 07010000 		.4byte	.LLST9
 3701 0d7a 1C       		.uleb128 0x1c
 3702 0d7b 6A000000 		.4byte	.LASF173
 3703 0d7f 01       		.byte	0x1
 3704 0d80 4803     		.2byte	0x348
 3705 0d82 99000000 		.4byte	0x99
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 128


 3706 0d86 28010000 		.4byte	.LLST10
 3707 0d8a 1C       		.uleb128 0x1c
 3708 0d8b D70D0000 		.4byte	.LASF174
 3709 0d8f 01       		.byte	0x1
 3710 0d90 4803     		.2byte	0x348
 3711 0d92 99000000 		.4byte	0x99
 3712 0d96 49010000 		.4byte	.LLST11
 3713 0d9a 27       		.uleb128 0x27
 3714 0d9b 08050000 		.4byte	.LASF175
 3715 0d9f 01       		.byte	0x1
 3716 0da0 4A03     		.2byte	0x34a
 3717 0da2 99000000 		.4byte	0x99
 3718 0da6 01       		.byte	0x1
 3719 0da7 1D       		.uleb128 0x1d
 3720 0da8 DD0D0000 		.4byte	.LASF176
 3721 0dac 01       		.byte	0x1
 3722 0dad 4B03     		.2byte	0x34b
 3723 0daf 99000000 		.4byte	0x99
 3724 0db3 8E010000 		.4byte	.LLST12
 3725 0db7 1D       		.uleb128 0x1d
 3726 0db8 CB010000 		.4byte	.LASF177
 3727 0dbc 01       		.byte	0x1
 3728 0dbd 4C03     		.2byte	0x34c
 3729 0dbf 81000000 		.4byte	0x81
 3730 0dc3 BA010000 		.4byte	.LLST13
 3731 0dc7 1D       		.uleb128 0x1d
 3732 0dc8 630D0000 		.4byte	.LASF178
 3733 0dcc 01       		.byte	0x1
 3734 0dcd 4D03     		.2byte	0x34d
 3735 0dcf 190E0000 		.4byte	0xe19
 3736 0dd3 E3010000 		.4byte	.LLST14
 3737 0dd7 24       		.uleb128 0x24
 3738 0dd8 14000000 		.4byte	.LVL24
 3739 0ddc D2180000 		.4byte	0x18d2
 3740 0de0 24       		.uleb128 0x24
 3741 0de1 34000000 		.4byte	.LVL25
 3742 0de5 DD180000 		.4byte	0x18dd
 3743 0de9 25       		.uleb128 0x25
 3744 0dea 46000000 		.4byte	.LVL26
 3745 0dee E8180000 		.4byte	0x18e8
 3746 0df2 FD0D0000 		.4byte	0xdfd
 3747 0df6 1F       		.uleb128 0x1f
 3748 0df7 01       		.uleb128 0x1
 3749 0df8 50       		.byte	0x50
 3750 0df9 02       		.uleb128 0x2
 3751 0dfa 74       		.byte	0x74
 3752 0dfb 00       		.sleb128 0
 3753 0dfc 00       		.byte	0
 3754 0dfd 24       		.uleb128 0x24
 3755 0dfe 4C000000 		.4byte	.LVL28
 3756 0e02 D2180000 		.4byte	0x18d2
 3757 0e06 24       		.uleb128 0x24
 3758 0e07 6E000000 		.4byte	.LVL32
 3759 0e0b D2180000 		.4byte	0x18d2
 3760 0e0f 24       		.uleb128 0x24
 3761 0e10 7E000000 		.4byte	.LVL35
 3762 0e14 DD180000 		.4byte	0x18dd
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 129


 3763 0e18 00       		.byte	0
 3764 0e19 07       		.uleb128 0x7
 3765 0e1a 04       		.byte	0x4
 3766 0e1b 1F0E0000 		.4byte	0xe1f
 3767 0e1f 28       		.uleb128 0x28
 3768 0e20 D5090000 		.4byte	0x9d5
 3769 0e24 26       		.uleb128 0x26
 3770 0e25 E2090000 		.4byte	.LASF180
 3771 0e29 01       		.byte	0x1
 3772 0e2a 8E04     		.2byte	0x48e
 3773 0e2c 00000000 		.4byte	.LFB11
 3774 0e30 70000000 		.4byte	.LFE11-.LFB11
 3775 0e34 01       		.uleb128 0x1
 3776 0e35 9C       		.byte	0x9c
 3777 0e36 D50E0000 		.4byte	0xed5
 3778 0e3a 1C       		.uleb128 0x1c
 3779 0e3b D70D0000 		.4byte	.LASF174
 3780 0e3f 01       		.byte	0x1
 3781 0e40 8E04     		.2byte	0x48e
 3782 0e42 99000000 		.4byte	0x99
 3783 0e46 19020000 		.4byte	.LLST15
 3784 0e4a 29       		.uleb128 0x29
 3785 0e4b CB010000 		.4byte	.LASF177
 3786 0e4f 01       		.byte	0x1
 3787 0e50 9004     		.2byte	0x490
 3788 0e52 81000000 		.4byte	0x81
 3789 0e56 02       		.uleb128 0x2
 3790 0e57 91       		.byte	0x91
 3791 0e58 64       		.sleb128 -28
 3792 0e59 1D       		.uleb128 0x1d
 3793 0e5a 39030000 		.4byte	.LASF181
 3794 0e5e 01       		.byte	0x1
 3795 0e5f 9204     		.2byte	0x492
 3796 0e61 99000000 		.4byte	0x99
 3797 0e65 3A020000 		.4byte	.LLST16
 3798 0e69 1D       		.uleb128 0x1d
 3799 0e6a C3040000 		.4byte	.LASF182
 3800 0e6e 01       		.byte	0x1
 3801 0e6f 9404     		.2byte	0x494
 3802 0e71 99000000 		.4byte	0x99
 3803 0e75 4E020000 		.4byte	.LLST17
 3804 0e79 1D       		.uleb128 0x1d
 3805 0e7a 52040000 		.4byte	.LASF183
 3806 0e7e 01       		.byte	0x1
 3807 0e7f 9504     		.2byte	0x495
 3808 0e81 99000000 		.4byte	0x99
 3809 0e85 6D020000 		.4byte	.LLST18
 3810 0e89 1D       		.uleb128 0x1d
 3811 0e8a E3050000 		.4byte	.LASF184
 3812 0e8e 01       		.byte	0x1
 3813 0e8f 9704     		.2byte	0x497
 3814 0e91 99000000 		.4byte	0x99
 3815 0e95 8C020000 		.4byte	.LLST19
 3816 0e99 1D       		.uleb128 0x1d
 3817 0e9a C0070000 		.4byte	.LASF185
 3818 0e9e 01       		.byte	0x1
 3819 0e9f 9804     		.2byte	0x498
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 130


 3820 0ea1 99000000 		.4byte	0x99
 3821 0ea5 B7020000 		.4byte	.LLST20
 3822 0ea9 1D       		.uleb128 0x1d
 3823 0eaa A4030000 		.4byte	.LASF186
 3824 0eae 01       		.byte	0x1
 3825 0eaf 9A04     		.2byte	0x49a
 3826 0eb1 190E0000 		.4byte	0xe19
 3827 0eb5 D7020000 		.4byte	.LLST21
 3828 0eb9 24       		.uleb128 0x24
 3829 0eba 1E000000 		.4byte	.LVL41
 3830 0ebe D2180000 		.4byte	0x18d2
 3831 0ec2 1E       		.uleb128 0x1e
 3832 0ec3 5C000000 		.4byte	.LVL55
 3833 0ec7 DD180000 		.4byte	0x18dd
 3834 0ecb 1F       		.uleb128 0x1f
 3835 0ecc 01       		.uleb128 0x1
 3836 0ecd 50       		.byte	0x50
 3837 0ece 04       		.uleb128 0x4
 3838 0ecf 91       		.byte	0x91
 3839 0ed0 64       		.sleb128 -28
 3840 0ed1 94       		.byte	0x94
 3841 0ed2 01       		.byte	0x1
 3842 0ed3 00       		.byte	0
 3843 0ed4 00       		.byte	0
 3844 0ed5 26       		.uleb128 0x26
 3845 0ed6 C60E0000 		.4byte	.LASF187
 3846 0eda 01       		.byte	0x1
 3847 0edb 2405     		.2byte	0x524
 3848 0edd 00000000 		.4byte	.LFB12
 3849 0ee1 68000000 		.4byte	.LFE12-.LFB12
 3850 0ee5 01       		.uleb128 0x1
 3851 0ee6 9C       		.byte	0x9c
 3852 0ee7 0E0F0000 		.4byte	0xf0e
 3853 0eeb 1D       		.uleb128 0x1d
 3854 0eec 72090000 		.4byte	.LASF188
 3855 0ef0 01       		.byte	0x1
 3856 0ef1 2C05     		.2byte	0x52c
 3857 0ef3 BA000000 		.4byte	0xba
 3858 0ef7 1E030000 		.4byte	.LLST22
 3859 0efb 24       		.uleb128 0x24
 3860 0efc 14000000 		.4byte	.LVL60
 3861 0f00 E40B0000 		.4byte	0xbe4
 3862 0f04 24       		.uleb128 0x24
 3863 0f05 24000000 		.4byte	.LVL61
 3864 0f09 310B0000 		.4byte	0xb31
 3865 0f0d 00       		.byte	0
 3866 0f0e 26       		.uleb128 0x26
 3867 0f0f AB090000 		.4byte	.LASF189
 3868 0f13 01       		.byte	0x1
 3869 0f14 7105     		.2byte	0x571
 3870 0f16 00000000 		.4byte	.LFB13
 3871 0f1a 08000000 		.4byte	.LFE13-.LFB13
 3872 0f1e 01       		.uleb128 0x1
 3873 0f1f 9C       		.byte	0x9c
 3874 0f20 460F0000 		.4byte	0xf46
 3875 0f24 1C       		.uleb128 0x1c
 3876 0f25 50070000 		.4byte	.LASF190
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 131


 3877 0f29 01       		.byte	0x1
 3878 0f2a 7105     		.2byte	0x571
 3879 0f2c DC000000 		.4byte	0xdc
 3880 0f30 48030000 		.4byte	.LLST23
 3881 0f34 1E       		.uleb128 0x1e
 3882 0f35 06000000 		.4byte	.LVL67
 3883 0f39 F4180000 		.4byte	0x18f4
 3884 0f3d 1F       		.uleb128 0x1f
 3885 0f3e 01       		.uleb128 0x1
 3886 0f3f 50       		.byte	0x50
 3887 0f40 03       		.uleb128 0x3
 3888 0f41 F3       		.byte	0xf3
 3889 0f42 01       		.uleb128 0x1
 3890 0f43 50       		.byte	0x50
 3891 0f44 00       		.byte	0
 3892 0f45 00       		.byte	0
 3893 0f46 26       		.uleb128 0x26
 3894 0f47 96020000 		.4byte	.LASF191
 3895 0f4b 01       		.byte	0x1
 3896 0f4c 8805     		.2byte	0x588
 3897 0f4e 00000000 		.4byte	.LFB14
 3898 0f52 2C000000 		.4byte	.LFE14-.LFB14
 3899 0f56 01       		.uleb128 0x1
 3900 0f57 9C       		.byte	0x9c
 3901 0f58 6D0F0000 		.4byte	0xf6d
 3902 0f5c 1C       		.uleb128 0x1c
 3903 0f5d BC040000 		.4byte	.LASF192
 3904 0f61 01       		.byte	0x1
 3905 0f62 8805     		.2byte	0x588
 3906 0f64 99000000 		.4byte	0x99
 3907 0f68 69030000 		.4byte	.LLST24
 3908 0f6c 00       		.byte	0
 3909 0f6d 26       		.uleb128 0x26
 3910 0f6e AB060000 		.4byte	.LASF193
 3911 0f72 01       		.byte	0x1
 3912 0f73 CC05     		.2byte	0x5cc
 3913 0f75 00000000 		.4byte	.LFB15
 3914 0f79 14000000 		.4byte	.LFE15-.LFB15
 3915 0f7d 01       		.uleb128 0x1
 3916 0f7e 9C       		.byte	0x9c
 3917 0f7f A40F0000 		.4byte	0xfa4
 3918 0f83 1C       		.uleb128 0x1c
 3919 0f84 090E0000 		.4byte	.LASF57
 3920 0f88 01       		.byte	0x1
 3921 0f89 CC05     		.2byte	0x5cc
 3922 0f8b 99000000 		.4byte	0x99
 3923 0f8f 97030000 		.4byte	.LLST25
 3924 0f93 1D       		.uleb128 0x1d
 3925 0f94 FC0E0000 		.4byte	.LASF194
 3926 0f98 01       		.byte	0x1
 3927 0f99 CF05     		.2byte	0x5cf
 3928 0f9b 99000000 		.4byte	0x99
 3929 0f9f C5030000 		.4byte	.LLST26
 3930 0fa3 00       		.byte	0
 3931 0fa4 26       		.uleb128 0x26
 3932 0fa5 82080000 		.4byte	.LASF195
 3933 0fa9 01       		.byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 132


 3934 0faa 2006     		.2byte	0x620
 3935 0fac 00000000 		.4byte	.LFB16
 3936 0fb0 12000000 		.4byte	.LFE16-.LFB16
 3937 0fb4 01       		.uleb128 0x1
 3938 0fb5 9C       		.byte	0x9c
 3939 0fb6 00100000 		.4byte	0x1000
 3940 0fba 1C       		.uleb128 0x1c
 3941 0fbb 090E0000 		.4byte	.LASF57
 3942 0fbf 01       		.byte	0x1
 3943 0fc0 2006     		.2byte	0x620
 3944 0fc2 99000000 		.4byte	0x99
 3945 0fc6 EE030000 		.4byte	.LLST27
 3946 0fca 1C       		.uleb128 0x1c
 3947 0fcb BC040000 		.4byte	.LASF192
 3948 0fcf 01       		.byte	0x1
 3949 0fd0 2006     		.2byte	0x620
 3950 0fd2 99000000 		.4byte	0x99
 3951 0fd6 1A040000 		.4byte	.LLST28
 3952 0fda 25       		.uleb128 0x25
 3953 0fdb 0A000000 		.4byte	.LVL79
 3954 0fdf 460F0000 		.4byte	0xf46
 3955 0fe3 EF0F0000 		.4byte	0xfef
 3956 0fe7 1F       		.uleb128 0x1f
 3957 0fe8 01       		.uleb128 0x1
 3958 0fe9 50       		.byte	0x50
 3959 0fea 03       		.uleb128 0x3
 3960 0feb F3       		.byte	0xf3
 3961 0fec 01       		.uleb128 0x1
 3962 0fed 51       		.byte	0x51
 3963 0fee 00       		.byte	0
 3964 0fef 1E       		.uleb128 0x1e
 3965 0ff0 10000000 		.4byte	.LVL80
 3966 0ff4 6D0F0000 		.4byte	0xf6d
 3967 0ff8 1F       		.uleb128 0x1f
 3968 0ff9 01       		.uleb128 0x1
 3969 0ffa 50       		.byte	0x50
 3970 0ffb 02       		.uleb128 0x2
 3971 0ffc 74       		.byte	0x74
 3972 0ffd 00       		.sleb128 0
 3973 0ffe 00       		.byte	0
 3974 0fff 00       		.byte	0
 3975 1000 20       		.uleb128 0x20
 3976 1001 4F0B0000 		.4byte	0xb4f
 3977 1005 00000000 		.4byte	.LFB17
 3978 1009 12000000 		.4byte	.LFE17-.LFB17
 3979 100d 01       		.uleb128 0x1
 3980 100e 9C       		.byte	0x9c
 3981 100f 5F100000 		.4byte	0x105f
 3982 1013 2A       		.uleb128 0x2a
 3983 1014 600B0000 		.4byte	0xb60
 3984 1018 3B040000 		.4byte	.LLST29
 3985 101c 21       		.uleb128 0x21
 3986 101d 6C0B0000 		.4byte	0xb6c
 3987 1021 75040000 		.4byte	.LLST30
 3988 1025 22       		.uleb128 0x22
 3989 1026 0A000000 		.4byte	.LBB10
 3990 102a 06000000 		.4byte	.LBE10-.LBB10
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 133


 3991 102e 2A       		.uleb128 0x2a
 3992 102f 600B0000 		.4byte	0xb60
 3993 1033 89040000 		.4byte	.LLST31
 3994 1037 22       		.uleb128 0x22
 3995 1038 0A000000 		.4byte	.LBB11
 3996 103c 06000000 		.4byte	.LBE11-.LBB11
 3997 1040 23       		.uleb128 0x23
 3998 1041 6C0B0000 		.4byte	0xb6c
 3999 1045 1E       		.uleb128 0x1e
 4000 1046 10000000 		.4byte	.LVL85
 4001 104a FF180000 		.4byte	0x18ff
 4002 104e 1F       		.uleb128 0x1f
 4003 104f 01       		.uleb128 0x1
 4004 1050 50       		.byte	0x50
 4005 1051 03       		.uleb128 0x3
 4006 1052 F3       		.byte	0xf3
 4007 1053 01       		.uleb128 0x1
 4008 1054 50       		.byte	0x50
 4009 1055 1F       		.uleb128 0x1f
 4010 1056 01       		.uleb128 0x1
 4011 1057 51       		.byte	0x51
 4012 1058 02       		.uleb128 0x2
 4013 1059 08       		.byte	0x8
 4014 105a 46       		.byte	0x46
 4015 105b 00       		.byte	0
 4016 105c 00       		.byte	0
 4017 105d 00       		.byte	0
 4018 105e 00       		.byte	0
 4019 105f 1B       		.uleb128 0x1b
 4020 1060 070B0000 		.4byte	.LASF196
 4021 1064 01       		.byte	0x1
 4022 1065 C906     		.2byte	0x6c9
 4023 1067 BA000000 		.4byte	0xba
 4024 106b 00000000 		.4byte	.LFB18
 4025 106f 18000000 		.4byte	.LFE18-.LFB18
 4026 1073 01       		.uleb128 0x1
 4027 1074 9C       		.byte	0x9c
 4028 1075 AA100000 		.4byte	0x10aa
 4029 1079 1D       		.uleb128 0x1d
 4030 107a 58070000 		.4byte	.LASF160
 4031 107e 01       		.byte	0x1
 4032 107f CB06     		.2byte	0x6cb
 4033 1081 BA000000 		.4byte	0xba
 4034 1085 AA040000 		.4byte	.LLST32
 4035 1089 1D       		.uleb128 0x1d
 4036 108a D1080000 		.4byte	.LASF169
 4037 108e 01       		.byte	0x1
 4038 108f CC06     		.2byte	0x6cc
 4039 1091 99000000 		.4byte	0x99
 4040 1095 D4040000 		.4byte	.LLST33
 4041 1099 1E       		.uleb128 0x1e
 4042 109a 0C000000 		.4byte	.LVL88
 4043 109e 4F0B0000 		.4byte	0xb4f
 4044 10a2 1F       		.uleb128 0x1f
 4045 10a3 01       		.uleb128 0x1
 4046 10a4 50       		.byte	0x50
 4047 10a5 02       		.uleb128 0x2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 134


 4048 10a6 74       		.byte	0x74
 4049 10a7 00       		.sleb128 0
 4050 10a8 00       		.byte	0
 4051 10a9 00       		.byte	0
 4052 10aa 20       		.uleb128 0x20
 4053 10ab 790B0000 		.4byte	0xb79
 4054 10af 00000000 		.4byte	.LFB25
 4055 10b3 10000000 		.4byte	.LFE25-.LFB25
 4056 10b7 01       		.uleb128 0x1
 4057 10b8 9C       		.byte	0x9c
 4058 10b9 D1100000 		.4byte	0x10d1
 4059 10bd 2A       		.uleb128 0x2a
 4060 10be 8A0B0000 		.4byte	0xb8a
 4061 10c2 0B050000 		.4byte	.LLST34
 4062 10c6 23       		.uleb128 0x23
 4063 10c7 960B0000 		.4byte	0xb96
 4064 10cb 23       		.uleb128 0x23
 4065 10cc A20B0000 		.4byte	0xba2
 4066 10d0 00       		.byte	0
 4067 10d1 1B       		.uleb128 0x1b
 4068 10d2 92040000 		.4byte	.LASF197
 4069 10d6 01       		.byte	0x1
 4070 10d7 400B     		.2byte	0xb40
 4071 10d9 81000000 		.4byte	0x81
 4072 10dd 00000000 		.4byte	.LFB26
 4073 10e1 20000000 		.4byte	.LFE26-.LFB26
 4074 10e5 01       		.uleb128 0x1
 4075 10e6 9C       		.byte	0x9c
 4076 10e7 27110000 		.4byte	0x1127
 4077 10eb 1C       		.uleb128 0x1c
 4078 10ec 5B0F0000 		.4byte	.LASF198
 4079 10f0 01       		.byte	0x1
 4080 10f1 400B     		.2byte	0xb40
 4081 10f3 99000000 		.4byte	0x99
 4082 10f7 2C050000 		.4byte	.LLST35
 4083 10fb 1C       		.uleb128 0x1c
 4084 10fc 51060000 		.4byte	.LASF48
 4085 1100 01       		.byte	0x1
 4086 1101 400B     		.2byte	0xb40
 4087 1103 99000000 		.4byte	0x99
 4088 1107 4D050000 		.4byte	.LLST36
 4089 110b 29       		.uleb128 0x29
 4090 110c 560C0000 		.4byte	.LASF199
 4091 1110 01       		.byte	0x1
 4092 1111 420B     		.2byte	0xb42
 4093 1113 99000000 		.4byte	0x99
 4094 1117 01       		.uleb128 0x1
 4095 1118 52       		.byte	0x52
 4096 1119 27       		.uleb128 0x27
 4097 111a 690F0000 		.4byte	.LASF200
 4098 111e 01       		.byte	0x1
 4099 111f 430B     		.2byte	0xb43
 4100 1121 99000000 		.4byte	0x99
 4101 1125 01       		.byte	0x1
 4102 1126 00       		.byte	0
 4103 1127 2B       		.uleb128 0x2b
 4104 1128 1B050000 		.4byte	.LASF203
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 135


 4105 112c 01       		.byte	0x1
 4106 112d 3B0A     		.2byte	0xa3b
 4107 112f 81000000 		.4byte	0x81
 4108 1133 01       		.byte	0x1
 4109 1134 5D110000 		.4byte	0x115d
 4110 1138 18       		.uleb128 0x18
 4111 1139 5B0F0000 		.4byte	.LASF198
 4112 113d 01       		.byte	0x1
 4113 113e 3B0A     		.2byte	0xa3b
 4114 1140 99000000 		.4byte	0x99
 4115 1144 18       		.uleb128 0x18
 4116 1145 21060000 		.4byte	.LASF201
 4117 1149 01       		.byte	0x1
 4118 114a 3B0A     		.2byte	0xa3b
 4119 114c 99000000 		.4byte	0x99
 4120 1150 17       		.uleb128 0x17
 4121 1151 22040000 		.4byte	.LASF202
 4122 1155 01       		.byte	0x1
 4123 1156 3D0A     		.2byte	0xa3d
 4124 1158 81000000 		.4byte	0x81
 4125 115c 00       		.byte	0
 4126 115d 2B       		.uleb128 0x2b
 4127 115e 43030000 		.4byte	.LASF204
 4128 1162 01       		.byte	0x1
 4129 1163 870A     		.2byte	0xa87
 4130 1165 81000000 		.4byte	0x81
 4131 1169 01       		.byte	0x1
 4132 116a AB110000 		.4byte	0x11ab
 4133 116e 18       		.uleb128 0x18
 4134 116f 5B0F0000 		.4byte	.LASF198
 4135 1173 01       		.byte	0x1
 4136 1174 870A     		.2byte	0xa87
 4137 1176 99000000 		.4byte	0x99
 4138 117a 18       		.uleb128 0x18
 4139 117b 22040000 		.4byte	.LASF202
 4140 117f 01       		.byte	0x1
 4141 1180 870A     		.2byte	0xa87
 4142 1182 81000000 		.4byte	0x81
 4143 1186 17       		.uleb128 0x17
 4144 1187 F6010000 		.4byte	.LASF205
 4145 118b 01       		.byte	0x1
 4146 118c 890A     		.2byte	0xa89
 4147 118e 99000000 		.4byte	0x99
 4148 1192 17       		.uleb128 0x17
 4149 1193 6E020000 		.4byte	.LASF206
 4150 1197 01       		.byte	0x1
 4151 1198 8A0A     		.2byte	0xa8a
 4152 119a 99000000 		.4byte	0x99
 4153 119e 17       		.uleb128 0x17
 4154 119f F10E0000 		.4byte	.LASF207
 4155 11a3 01       		.byte	0x1
 4156 11a4 8B0A     		.2byte	0xa8b
 4157 11a6 99000000 		.4byte	0x99
 4158 11aa 00       		.byte	0
 4159 11ab 2C       		.uleb128 0x2c
 4160 11ac 0B030000 		.4byte	.LASF265
 4161 11b0 01       		.byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 136


 4162 11b1 9909     		.2byte	0x999
 4163 11b3 00000000 		.4byte	.LFB22
 4164 11b7 BC000000 		.4byte	.LFE22-.LFB22
 4165 11bb 01       		.uleb128 0x1
 4166 11bc 9C       		.byte	0x9c
 4167 11bd F3120000 		.4byte	0x12f3
 4168 11c1 1C       		.uleb128 0x1c
 4169 11c2 D1080000 		.4byte	.LASF169
 4170 11c6 01       		.byte	0x1
 4171 11c7 9909     		.2byte	0x999
 4172 11c9 99000000 		.4byte	0x99
 4173 11cd 6E050000 		.4byte	.LLST37
 4174 11d1 1C       		.uleb128 0x1c
 4175 11d2 FA020000 		.4byte	.LASF164
 4176 11d6 01       		.byte	0x1
 4177 11d7 9909     		.2byte	0x999
 4178 11d9 AF0B0000 		.4byte	0xbaf
 4179 11dd 8F050000 		.4byte	.LLST38
 4180 11e1 1D       		.uleb128 0x1d
 4181 11e2 22040000 		.4byte	.LASF202
 4182 11e6 01       		.byte	0x1
 4183 11e7 9B09     		.2byte	0x99b
 4184 11e9 81000000 		.4byte	0x81
 4185 11ed C6050000 		.4byte	.LLST39
 4186 11f1 17       		.uleb128 0x17
 4187 11f2 F6010000 		.4byte	.LASF205
 4188 11f6 01       		.byte	0x1
 4189 11f7 9C09     		.2byte	0x99c
 4190 11f9 81000000 		.4byte	0x81
 4191 11fd 1D       		.uleb128 0x1d
 4192 11fe 21060000 		.4byte	.LASF201
 4193 1202 01       		.byte	0x1
 4194 1203 A009     		.2byte	0x9a0
 4195 1205 99000000 		.4byte	0x99
 4196 1209 E4050000 		.4byte	.LLST40
 4197 120d 29       		.uleb128 0x29
 4198 120e 5B0F0000 		.4byte	.LASF198
 4199 1212 01       		.byte	0x1
 4200 1213 A209     		.2byte	0x9a2
 4201 1215 99000000 		.4byte	0x99
 4202 1219 01       		.uleb128 0x1
 4203 121a 56       		.byte	0x56
 4204 121b 2D       		.uleb128 0x2d
 4205 121c 790B0000 		.4byte	0xb79
 4206 1220 02000000 		.4byte	.LBB18
 4207 1224 00000000 		.4byte	.Ldebug_ranges0+0
 4208 1228 01       		.byte	0x1
 4209 1229 A609     		.2byte	0x9a6
 4210 122b 49120000 		.4byte	0x1249
 4211 122f 2A       		.uleb128 0x2a
 4212 1230 8A0B0000 		.4byte	0xb8a
 4213 1234 4F060000 		.4byte	.LLST41
 4214 1238 2E       		.uleb128 0x2e
 4215 1239 00000000 		.4byte	.Ldebug_ranges0+0
 4216 123d 23       		.uleb128 0x23
 4217 123e 960B0000 		.4byte	0xb96
 4218 1242 23       		.uleb128 0x23
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 137


 4219 1243 A20B0000 		.4byte	0xba2
 4220 1247 00       		.byte	0
 4221 1248 00       		.byte	0
 4222 1249 2D       		.uleb128 0x2d
 4223 124a 27110000 		.4byte	0x1127
 4224 124e 1A000000 		.4byte	.LBB22
 4225 1252 18000000 		.4byte	.Ldebug_ranges0+0x18
 4226 1256 01       		.byte	0x1
 4227 1257 AB09     		.2byte	0x9ab
 4228 1259 7F120000 		.4byte	0x127f
 4229 125d 2A       		.uleb128 0x2a
 4230 125e 44110000 		.4byte	0x1144
 4231 1262 70060000 		.4byte	.LLST42
 4232 1266 2A       		.uleb128 0x2a
 4233 1267 38110000 		.4byte	0x1138
 4234 126b DB060000 		.4byte	.LLST43
 4235 126f 2E       		.uleb128 0x2e
 4236 1270 18000000 		.4byte	.Ldebug_ranges0+0x18
 4237 1274 21       		.uleb128 0x21
 4238 1275 50110000 		.4byte	0x1150
 4239 1279 F9060000 		.4byte	.LLST44
 4240 127d 00       		.byte	0
 4241 127e 00       		.byte	0
 4242 127f 2D       		.uleb128 0x2d
 4243 1280 5D110000 		.4byte	0x115d
 4244 1284 76000000 		.4byte	.LBB25
 4245 1288 30000000 		.4byte	.Ldebug_ranges0+0x30
 4246 128c 01       		.byte	0x1
 4247 128d B409     		.2byte	0x9b4
 4248 128f C7120000 		.4byte	0x12c7
 4249 1293 2A       		.uleb128 0x2a
 4250 1294 7A110000 		.4byte	0x117a
 4251 1298 C6050000 		.4byte	.LLST39
 4252 129c 2A       		.uleb128 0x2a
 4253 129d 6E110000 		.4byte	0x116e
 4254 12a1 19070000 		.4byte	.LLST46
 4255 12a5 2E       		.uleb128 0x2e
 4256 12a6 30000000 		.4byte	.Ldebug_ranges0+0x30
 4257 12aa 21       		.uleb128 0x21
 4258 12ab 86110000 		.4byte	0x1186
 4259 12af 2C070000 		.4byte	.LLST47
 4260 12b3 21       		.uleb128 0x21
 4261 12b4 92110000 		.4byte	0x1192
 4262 12b8 4B070000 		.4byte	.LLST48
 4263 12bc 21       		.uleb128 0x21
 4264 12bd 9E110000 		.4byte	0x119e
 4265 12c1 5F070000 		.4byte	.LLST49
 4266 12c5 00       		.byte	0
 4267 12c6 00       		.byte	0
 4268 12c7 25       		.uleb128 0x25
 4269 12c8 18000000 		.4byte	.LVL103
 4270 12cc 0B190000 		.4byte	0x190b
 4271 12d0 E0120000 		.4byte	0x12e0
 4272 12d4 1F       		.uleb128 0x1f
 4273 12d5 01       		.uleb128 0x1
 4274 12d6 50       		.byte	0x50
 4275 12d7 02       		.uleb128 0x2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 138


 4276 12d8 76       		.byte	0x76
 4277 12d9 00       		.sleb128 0
 4278 12da 1F       		.uleb128 0x1f
 4279 12db 01       		.uleb128 0x1
 4280 12dc 52       		.byte	0x52
 4281 12dd 01       		.uleb128 0x1
 4282 12de 30       		.byte	0x30
 4283 12df 00       		.byte	0
 4284 12e0 1E       		.uleb128 0x1e
 4285 12e1 76000000 		.4byte	.LVL116
 4286 12e5 D1100000 		.4byte	0x10d1
 4287 12e9 1F       		.uleb128 0x1f
 4288 12ea 01       		.uleb128 0x1
 4289 12eb 50       		.byte	0x50
 4290 12ec 04       		.uleb128 0x4
 4291 12ed 76       		.byte	0x76
 4292 12ee 00       		.sleb128 0
 4293 12ef 31       		.byte	0x31
 4294 12f0 24       		.byte	0x24
 4295 12f1 00       		.byte	0
 4296 12f2 00       		.byte	0
 4297 12f3 2F       		.uleb128 0x2f
 4298 12f4 72030000 		.4byte	.LASF208
 4299 12f8 01       		.byte	0x1
 4300 12f9 F406     		.2byte	0x6f4
 4301 12fb BA000000 		.4byte	0xba
 4302 12ff 00000000 		.4byte	.LFB19
 4303 1303 14010000 		.4byte	.LFE19-.LFB19
 4304 1307 01       		.uleb128 0x1
 4305 1308 9C       		.byte	0x9c
 4306 1309 66140000 		.4byte	0x1466
 4307 130d 1C       		.uleb128 0x1c
 4308 130e A90F0000 		.4byte	.LASF162
 4309 1312 01       		.byte	0x1
 4310 1313 F406     		.2byte	0x6f4
 4311 1315 99000000 		.4byte	0x99
 4312 1319 7F070000 		.4byte	.LLST50
 4313 131d 1D       		.uleb128 0x1d
 4314 131e 61040000 		.4byte	.LASF209
 4315 1322 01       		.byte	0x1
 4316 1323 F606     		.2byte	0x6f6
 4317 1325 BA000000 		.4byte	0xba
 4318 1329 AB070000 		.4byte	.LLST51
 4319 132d 1D       		.uleb128 0x1d
 4320 132e DB080000 		.4byte	.LASF210
 4321 1332 01       		.byte	0x1
 4322 1333 F806     		.2byte	0x6f8
 4323 1335 99000000 		.4byte	0x99
 4324 1339 E5070000 		.4byte	.LLST52
 4325 133d 1D       		.uleb128 0x1d
 4326 133e 84010000 		.4byte	.LASF211
 4327 1342 01       		.byte	0x1
 4328 1343 F906     		.2byte	0x6f9
 4329 1345 99000000 		.4byte	0x99
 4330 1349 1C080000 		.4byte	.LLST53
 4331 134d 27       		.uleb128 0x27
 4332 134e 9C0D0000 		.4byte	.LASF212
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 139


 4333 1352 01       		.byte	0x1
 4334 1353 FA06     		.2byte	0x6fa
 4335 1355 99000000 		.4byte	0x99
 4336 1359 04       		.byte	0x4
 4337 135a 1D       		.uleb128 0x1d
 4338 135b F70A0000 		.4byte	.LASF213
 4339 135f 01       		.byte	0x1
 4340 1360 FB06     		.2byte	0x6fb
 4341 1362 99000000 		.4byte	0x99
 4342 1366 2F080000 		.4byte	.LLST54
 4343 136a 29       		.uleb128 0x29
 4344 136b 64050000 		.4byte	.LASF214
 4345 136f 01       		.byte	0x1
 4346 1370 FD06     		.2byte	0x6fd
 4347 1372 9A010000 		.4byte	0x19a
 4348 1376 02       		.uleb128 0x2
 4349 1377 91       		.byte	0x91
 4350 1378 4C       		.sleb128 -52
 4351 1379 1D       		.uleb128 0x1d
 4352 137a 080F0000 		.4byte	.LASF215
 4353 137e 01       		.byte	0x1
 4354 137f FF06     		.2byte	0x6ff
 4355 1381 99000000 		.4byte	0x99
 4356 1385 52080000 		.4byte	.LLST55
 4357 1389 1D       		.uleb128 0x1d
 4358 138a 78000000 		.4byte	.LASF216
 4359 138e 01       		.byte	0x1
 4360 138f 0007     		.2byte	0x700
 4361 1391 99000000 		.4byte	0x99
 4362 1395 71080000 		.4byte	.LLST56
 4363 1399 1D       		.uleb128 0x1d
 4364 139a 200D0000 		.4byte	.LASF217
 4365 139e 01       		.byte	0x1
 4366 139f 0107     		.2byte	0x701
 4367 13a1 99000000 		.4byte	0x99
 4368 13a5 9C080000 		.4byte	.LLST57
 4369 13a9 1D       		.uleb128 0x1d
 4370 13aa 06020000 		.4byte	.LASF218
 4371 13ae 01       		.byte	0x1
 4372 13af 0807     		.2byte	0x708
 4373 13b1 66140000 		.4byte	0x1466
 4374 13b5 D1080000 		.4byte	.LLST58
 4375 13b9 1D       		.uleb128 0x1d
 4376 13ba A3010000 		.4byte	.LASF219
 4377 13be 01       		.byte	0x1
 4378 13bf 0907     		.2byte	0x709
 4379 13c1 AF0B0000 		.4byte	0xbaf
 4380 13c5 E4080000 		.4byte	.LLST59
 4381 13c9 1D       		.uleb128 0x1d
 4382 13ca 30060000 		.4byte	.LASF220
 4383 13ce 01       		.byte	0x1
 4384 13cf 0A07     		.2byte	0x70a
 4385 13d1 760A0000 		.4byte	0xa76
 4386 13d5 07090000 		.4byte	.LLST60
 4387 13d9 25       		.uleb128 0x25
 4388 13da 4E000000 		.4byte	.LVL136
 4389 13de FF180000 		.4byte	0x18ff
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 140


 4390 13e2 F3130000 		.4byte	0x13f3
 4391 13e6 1F       		.uleb128 0x1f
 4392 13e7 01       		.uleb128 0x1
 4393 13e8 50       		.byte	0x50
 4394 13e9 02       		.uleb128 0x2
 4395 13ea 76       		.byte	0x76
 4396 13eb 00       		.sleb128 0
 4397 13ec 1F       		.uleb128 0x1f
 4398 13ed 01       		.uleb128 0x1
 4399 13ee 51       		.byte	0x51
 4400 13ef 02       		.uleb128 0x2
 4401 13f0 08       		.byte	0x8
 4402 13f1 46       		.byte	0x46
 4403 13f2 00       		.byte	0
 4404 13f3 25       		.uleb128 0x25
 4405 13f4 A0000000 		.4byte	.LVL148
 4406 13f8 17190000 		.4byte	0x1917
 4407 13fc 07140000 		.4byte	0x1407
 4408 1400 1F       		.uleb128 0x1f
 4409 1401 01       		.uleb128 0x1
 4410 1402 50       		.byte	0x50
 4411 1403 02       		.uleb128 0x2
 4412 1404 74       		.byte	0x74
 4413 1405 00       		.sleb128 0
 4414 1406 00       		.byte	0
 4415 1407 25       		.uleb128 0x25
 4416 1408 C2000000 		.4byte	.LVL151
 4417 140c FF180000 		.4byte	0x18ff
 4418 1410 21140000 		.4byte	0x1421
 4419 1414 1F       		.uleb128 0x1f
 4420 1415 01       		.uleb128 0x1
 4421 1416 50       		.byte	0x50
 4422 1417 02       		.uleb128 0x2
 4423 1418 76       		.byte	0x76
 4424 1419 00       		.sleb128 0
 4425 141a 1F       		.uleb128 0x1f
 4426 141b 01       		.uleb128 0x1
 4427 141c 51       		.byte	0x51
 4428 141d 02       		.uleb128 0x2
 4429 141e 08       		.byte	0x8
 4430 141f 46       		.byte	0x46
 4431 1420 00       		.byte	0
 4432 1421 25       		.uleb128 0x25
 4433 1422 DC000000 		.4byte	.LVL152
 4434 1426 22190000 		.4byte	0x1922
 4435 142a 35140000 		.4byte	0x1435
 4436 142e 1F       		.uleb128 0x1f
 4437 142f 01       		.uleb128 0x1
 4438 1430 50       		.byte	0x50
 4439 1431 02       		.uleb128 0x2
 4440 1432 74       		.byte	0x74
 4441 1433 00       		.sleb128 0
 4442 1434 00       		.byte	0
 4443 1435 25       		.uleb128 0x25
 4444 1436 E6000000 		.4byte	.LVL153
 4445 143a AB110000 		.4byte	0x11ab
 4446 143e 4F140000 		.4byte	0x144f
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 141


 4447 1442 1F       		.uleb128 0x1f
 4448 1443 01       		.uleb128 0x1
 4449 1444 50       		.byte	0x50
 4450 1445 02       		.uleb128 0x2
 4451 1446 76       		.byte	0x76
 4452 1447 00       		.sleb128 0
 4453 1448 1F       		.uleb128 0x1f
 4454 1449 01       		.uleb128 0x1
 4455 144a 51       		.byte	0x51
 4456 144b 02       		.uleb128 0x2
 4457 144c 75       		.byte	0x75
 4458 144d 00       		.sleb128 0
 4459 144e 00       		.byte	0
 4460 144f 1E       		.uleb128 0x1e
 4461 1450 EE000000 		.4byte	.LVL154
 4462 1454 FF180000 		.4byte	0x18ff
 4463 1458 1F       		.uleb128 0x1f
 4464 1459 01       		.uleb128 0x1
 4465 145a 50       		.byte	0x50
 4466 145b 02       		.uleb128 0x2
 4467 145c 76       		.byte	0x76
 4468 145d 00       		.sleb128 0
 4469 145e 1F       		.uleb128 0x1f
 4470 145f 01       		.uleb128 0x1
 4471 1460 51       		.byte	0x51
 4472 1461 02       		.uleb128 0x2
 4473 1462 08       		.byte	0x8
 4474 1463 46       		.byte	0x46
 4475 1464 00       		.byte	0
 4476 1465 00       		.byte	0
 4477 1466 07       		.uleb128 0x7
 4478 1467 04       		.byte	0x4
 4479 1468 6C140000 		.4byte	0x146c
 4480 146c 28       		.uleb128 0x28
 4481 146d 880A0000 		.4byte	0xa88
 4482 1471 1B       		.uleb128 0x1b
 4483 1472 3D060000 		.4byte	.LASF221
 4484 1476 01       		.byte	0x1
 4485 1477 FF07     		.2byte	0x7ff
 4486 1479 BA000000 		.4byte	0xba
 4487 147d 00000000 		.4byte	.LFB20
 4488 1481 18000000 		.4byte	.LFE20-.LFB20
 4489 1485 01       		.uleb128 0x1
 4490 1486 9C       		.byte	0x9c
 4491 1487 BC140000 		.4byte	0x14bc
 4492 148b 1D       		.uleb128 0x1d
 4493 148c 61040000 		.4byte	.LASF209
 4494 1490 01       		.byte	0x1
 4495 1491 0108     		.2byte	0x801
 4496 1493 BA000000 		.4byte	0xba
 4497 1497 3E090000 		.4byte	.LLST61
 4498 149b 1D       		.uleb128 0x1d
 4499 149c D1080000 		.4byte	.LASF169
 4500 14a0 01       		.byte	0x1
 4501 14a1 0208     		.2byte	0x802
 4502 14a3 99000000 		.4byte	0x99
 4503 14a7 68090000 		.4byte	.LLST62
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 142


 4504 14ab 1E       		.uleb128 0x1e
 4505 14ac 0C000000 		.4byte	.LVL160
 4506 14b0 F3120000 		.4byte	0x12f3
 4507 14b4 1F       		.uleb128 0x1f
 4508 14b5 01       		.uleb128 0x1
 4509 14b6 50       		.byte	0x50
 4510 14b7 02       		.uleb128 0x2
 4511 14b8 74       		.byte	0x74
 4512 14b9 00       		.sleb128 0
 4513 14ba 00       		.byte	0
 4514 14bb 00       		.byte	0
 4515 14bc 26       		.uleb128 0x26
 4516 14bd D00F0000 		.4byte	.LASF222
 4517 14c1 01       		.byte	0x1
 4518 14c2 6409     		.2byte	0x964
 4519 14c4 00000000 		.4byte	.LFB21
 4520 14c8 20000000 		.4byte	.LFE21-.LFB21
 4521 14cc 01       		.uleb128 0x1
 4522 14cd 9C       		.byte	0x9c
 4523 14ce FF140000 		.4byte	0x14ff
 4524 14d2 1D       		.uleb128 0x1d
 4525 14d3 D1080000 		.4byte	.LASF169
 4526 14d7 01       		.byte	0x1
 4527 14d8 6609     		.2byte	0x966
 4528 14da 99000000 		.4byte	0x99
 4529 14de 9F090000 		.4byte	.LLST63
 4530 14e2 17       		.uleb128 0x17
 4531 14e3 FA020000 		.4byte	.LASF164
 4532 14e7 01       		.byte	0x1
 4533 14e8 6709     		.2byte	0x967
 4534 14ea AF0B0000 		.4byte	0xbaf
 4535 14ee 1E       		.uleb128 0x1e
 4536 14ef 14000000 		.4byte	.LVL168
 4537 14f3 AB110000 		.4byte	0x11ab
 4538 14f7 1F       		.uleb128 0x1f
 4539 14f8 01       		.uleb128 0x1
 4540 14f9 50       		.byte	0x50
 4541 14fa 02       		.uleb128 0x2
 4542 14fb 74       		.byte	0x74
 4543 14fc 7F       		.sleb128 -1
 4544 14fd 00       		.byte	0
 4545 14fe 00       		.byte	0
 4546 14ff 26       		.uleb128 0x26
 4547 1500 9E050000 		.4byte	.LASF223
 4548 1504 01       		.byte	0x1
 4549 1505 7A0B     		.2byte	0xb7a
 4550 1507 00000000 		.4byte	.LFB27
 4551 150b B8000000 		.4byte	.LFE27-.LFB27
 4552 150f 01       		.uleb128 0x1
 4553 1510 9C       		.byte	0x9c
 4554 1511 F8150000 		.4byte	0x15f8
 4555 1515 1C       		.uleb128 0x1c
 4556 1516 E1040000 		.4byte	.LASF224
 4557 151a 01       		.byte	0x1
 4558 151b 7A0B     		.2byte	0xb7a
 4559 151d 99000000 		.4byte	0x99
 4560 1521 E1090000 		.4byte	.LLST64
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 143


 4561 1525 1D       		.uleb128 0x1d
 4562 1526 8D020000 		.4byte	.LASF225
 4563 152a 01       		.byte	0x1
 4564 152b 7C0B     		.2byte	0xb7c
 4565 152d 99000000 		.4byte	0x99
 4566 1531 000A0000 		.4byte	.LLST65
 4567 1535 1D       		.uleb128 0x1d
 4568 1536 00020000 		.4byte	.LASF226
 4569 153a 01       		.byte	0x1
 4570 153b 7D0B     		.2byte	0xb7d
 4571 153d 99000000 		.4byte	0x99
 4572 1541 3D0A0000 		.4byte	.LLST66
 4573 1545 1D       		.uleb128 0x1d
 4574 1546 46040000 		.4byte	.LASF227
 4575 154a 01       		.byte	0x1
 4576 154b 7E0B     		.2byte	0xb7e
 4577 154d 99000000 		.4byte	0x99
 4578 1551 640A0000 		.4byte	.LLST67
 4579 1555 1D       		.uleb128 0x1d
 4580 1556 FC0E0000 		.4byte	.LASF194
 4581 155a 01       		.byte	0x1
 4582 155b 7F0B     		.2byte	0xb7f
 4583 155d 99000000 		.4byte	0x99
 4584 1561 8F0A0000 		.4byte	.LLST68
 4585 1565 1D       		.uleb128 0x1d
 4586 1566 CB010000 		.4byte	.LASF177
 4587 156a 01       		.byte	0x1
 4588 156b 800B     		.2byte	0xb80
 4589 156d 81000000 		.4byte	0x81
 4590 1571 FA0A0000 		.4byte	.LLST69
 4591 1575 24       		.uleb128 0x24
 4592 1576 1E000000 		.4byte	.LVL176
 4593 157a D2180000 		.4byte	0x18d2
 4594 157e 24       		.uleb128 0x24
 4595 157f 2A000000 		.4byte	.LVL179
 4596 1583 DD180000 		.4byte	0x18dd
 4597 1587 24       		.uleb128 0x24
 4598 1588 2E000000 		.4byte	.LVL180
 4599 158c D2180000 		.4byte	0x18d2
 4600 1590 24       		.uleb128 0x24
 4601 1591 3A000000 		.4byte	.LVL183
 4602 1595 DD180000 		.4byte	0x18dd
 4603 1599 24       		.uleb128 0x24
 4604 159a 3E000000 		.4byte	.LVL184
 4605 159e D2180000 		.4byte	0x18d2
 4606 15a2 24       		.uleb128 0x24
 4607 15a3 4E000000 		.4byte	.LVL188
 4608 15a7 DD180000 		.4byte	0x18dd
 4609 15ab 25       		.uleb128 0x25
 4610 15ac 56000000 		.4byte	.LVL189
 4611 15b0 2D190000 		.4byte	0x192d
 4612 15b4 C1150000 		.4byte	0x15c1
 4613 15b8 1F       		.uleb128 0x1f
 4614 15b9 01       		.uleb128 0x1
 4615 15ba 50       		.byte	0x50
 4616 15bb 04       		.uleb128 0x4
 4617 15bc 7D       		.byte	0x7d
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 144


 4618 15bd 0C       		.sleb128 12
 4619 15be 94       		.byte	0x94
 4620 15bf 02       		.byte	0x2
 4621 15c0 00       		.byte	0
 4622 15c1 24       		.uleb128 0x24
 4623 15c2 5A000000 		.4byte	.LVL190
 4624 15c6 D2180000 		.4byte	0x18d2
 4625 15ca 24       		.uleb128 0x24
 4626 15cb 6E000000 		.4byte	.LVL194
 4627 15cf DD180000 		.4byte	0x18dd
 4628 15d3 24       		.uleb128 0x24
 4629 15d4 72000000 		.4byte	.LVL195
 4630 15d8 D2180000 		.4byte	0x18d2
 4631 15dc 24       		.uleb128 0x24
 4632 15dd 86000000 		.4byte	.LVL199
 4633 15e1 DD180000 		.4byte	0x18dd
 4634 15e5 24       		.uleb128 0x24
 4635 15e6 8A000000 		.4byte	.LVL200
 4636 15ea D2180000 		.4byte	0x18d2
 4637 15ee 24       		.uleb128 0x24
 4638 15ef A0000000 		.4byte	.LVL204
 4639 15f3 DD180000 		.4byte	0x18dd
 4640 15f7 00       		.byte	0
 4641 15f8 1B       		.uleb128 0x1b
 4642 15f9 E4060000 		.4byte	.LASF228
 4643 15fd 01       		.byte	0x1
 4644 15fe 840C     		.2byte	0xc84
 4645 1600 76000000 		.4byte	0x76
 4646 1604 00000000 		.4byte	.LFB28
 4647 1608 18000000 		.4byte	.LFE28-.LFB28
 4648 160c 01       		.uleb128 0x1
 4649 160d 9C       		.byte	0x9c
 4650 160e 41160000 		.4byte	0x1641
 4651 1612 1C       		.uleb128 0x1c
 4652 1613 78020000 		.4byte	.LASF165
 4653 1617 01       		.byte	0x1
 4654 1618 840C     		.2byte	0xc84
 4655 161a FA0A0000 		.4byte	0xafa
 4656 161e 440B0000 		.4byte	.LLST70
 4657 1622 30       		.uleb128 0x30
 4658 1623 D70D0000 		.4byte	.LASF174
 4659 1627 01       		.byte	0x1
 4660 1628 840C     		.2byte	0xc84
 4661 162a 76000000 		.4byte	0x76
 4662 162e 01       		.uleb128 0x1
 4663 162f 51       		.byte	0x51
 4664 1630 1D       		.uleb128 0x1d
 4665 1631 810C0000 		.4byte	.LASF163
 4666 1635 01       		.byte	0x1
 4667 1636 860C     		.2byte	0xc86
 4668 1638 76000000 		.4byte	0x76
 4669 163c 650B0000 		.4byte	.LLST71
 4670 1640 00       		.byte	0
 4671 1641 26       		.uleb128 0x26
 4672 1642 A9070000 		.4byte	.LASF229
 4673 1646 01       		.byte	0x1
 4674 1647 D90C     		.2byte	0xcd9
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 145


 4675 1649 00000000 		.4byte	.LFB29
 4676 164d 1C000000 		.4byte	.LFE29-.LFB29
 4677 1651 01       		.uleb128 0x1
 4678 1652 9C       		.byte	0x9c
 4679 1653 AA160000 		.4byte	0x16aa
 4680 1657 1C       		.uleb128 0x1c
 4681 1658 B7020000 		.4byte	.LASF230
 4682 165c 01       		.byte	0x1
 4683 165d D90C     		.2byte	0xcd9
 4684 165f CF090000 		.4byte	0x9cf
 4685 1663 840B0000 		.4byte	.LLST72
 4686 1667 1C       		.uleb128 0x1c
 4687 1668 7D080000 		.4byte	.LASF129
 4688 166c 01       		.byte	0x1
 4689 166d D90C     		.2byte	0xcd9
 4690 166f 99000000 		.4byte	0x99
 4691 1673 B00B0000 		.4byte	.LLST73
 4692 1677 1C       		.uleb128 0x1c
 4693 1678 4C040000 		.4byte	.LASF231
 4694 167c 01       		.byte	0x1
 4695 167d D90C     		.2byte	0xcd9
 4696 167f 99000000 		.4byte	0x99
 4697 1683 DC0B0000 		.4byte	.LLST74
 4698 1687 1D       		.uleb128 0x1d
 4699 1688 CB010000 		.4byte	.LASF177
 4700 168c 01       		.byte	0x1
 4701 168d DB0C     		.2byte	0xcdb
 4702 168f 81000000 		.4byte	0x81
 4703 1693 080C0000 		.4byte	.LLST75
 4704 1697 24       		.uleb128 0x24
 4705 1698 0C000000 		.4byte	.LVL209
 4706 169c D2180000 		.4byte	0x18d2
 4707 16a0 24       		.uleb128 0x24
 4708 16a1 1A000000 		.4byte	.LVL211
 4709 16a5 DD180000 		.4byte	0x18dd
 4710 16a9 00       		.byte	0
 4711 16aa 31       		.uleb128 0x31
 4712 16ab 89000000 		.4byte	.LASF266
 4713 16af 01       		.byte	0x1
 4714 16b0 B903     		.2byte	0x3b9
 4715 16b2 01       		.byte	0x1
 4716 16b3 C4160000 		.4byte	0x16c4
 4717 16b7 17       		.uleb128 0x17
 4718 16b8 FC0E0000 		.4byte	.LASF194
 4719 16bc 01       		.byte	0x1
 4720 16bd BE03     		.2byte	0x3be
 4721 16bf 99000000 		.4byte	0x99
 4722 16c3 00       		.byte	0
 4723 16c4 20       		.uleb128 0x20
 4724 16c5 B50B0000 		.4byte	0xbb5
 4725 16c9 00000000 		.4byte	.LFB10
 4726 16cd 4C000000 		.4byte	.LFE10-.LFB10
 4727 16d1 01       		.uleb128 0x1
 4728 16d2 9C       		.byte	0x9c
 4729 16d3 55170000 		.4byte	0x1755
 4730 16d7 2A       		.uleb128 0x2a
 4731 16d8 C20B0000 		.4byte	0xbc2
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 146


 4732 16dc 1B0C0000 		.4byte	.LLST76
 4733 16e0 32       		.uleb128 0x32
 4734 16e1 AA160000 		.4byte	0x16aa
 4735 16e5 10000000 		.4byte	.LBB34
 4736 16e9 18000000 		.4byte	.LBE34-.LBB34
 4737 16ed 01       		.byte	0x1
 4738 16ee 3304     		.2byte	0x433
 4739 16f0 34170000 		.4byte	0x1734
 4740 16f4 22       		.uleb128 0x22
 4741 16f5 10000000 		.4byte	.LBB35
 4742 16f9 18000000 		.4byte	.LBE35-.LBB35
 4743 16fd 21       		.uleb128 0x21
 4744 16fe B7160000 		.4byte	0x16b7
 4745 1702 3C0C0000 		.4byte	.LLST77
 4746 1706 25       		.uleb128 0x25
 4747 1707 24000000 		.4byte	.LVL218
 4748 170b 41160000 		.4byte	0x1641
 4749 170f 29170000 		.4byte	0x1729
 4750 1713 1F       		.uleb128 0x1f
 4751 1714 01       		.uleb128 0x1
 4752 1715 50       		.byte	0x50
 4753 1716 05       		.uleb128 0x5
 4754 1717 0C       		.byte	0xc
 4755 1718 00040240 		.4byte	0x40020400
 4756 171c 1F       		.uleb128 0x1f
 4757 171d 01       		.uleb128 0x1
 4758 171e 51       		.byte	0x51
 4759 171f 03       		.uleb128 0x3
 4760 1720 0A       		.byte	0xa
 4761 1721 000F     		.2byte	0xf00
 4762 1723 1F       		.uleb128 0x1f
 4763 1724 01       		.uleb128 0x1
 4764 1725 52       		.byte	0x52
 4765 1726 01       		.uleb128 0x1
 4766 1727 30       		.byte	0x30
 4767 1728 00       		.byte	0
 4768 1729 24       		.uleb128 0x24
 4769 172a 28000000 		.4byte	.LVL219
 4770 172e 38190000 		.4byte	0x1938
 4771 1732 00       		.byte	0
 4772 1733 00       		.byte	0
 4773 1734 33       		.uleb128 0x33
 4774 1735 3A000000 		.4byte	.LBB36
 4775 1739 04000000 		.4byte	.LBE36-.LBB36
 4776 173d 4B170000 		.4byte	0x174b
 4777 1741 2A       		.uleb128 0x2a
 4778 1742 C20B0000 		.4byte	0xbc2
 4779 1746 4F0C0000 		.4byte	.LLST78
 4780 174a 00       		.byte	0
 4781 174b 24       		.uleb128 0x24
 4782 174c 30000000 		.4byte	.LVL220
 4783 1750 44190000 		.4byte	0x1944
 4784 1754 00       		.byte	0
 4785 1755 1B       		.uleb128 0x1b
 4786 1756 52090000 		.4byte	.LASF232
 4787 175a 01       		.byte	0x1
 4788 175b C302     		.2byte	0x2c3
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 147


 4789 175d BA000000 		.4byte	0xba
 4790 1761 00000000 		.4byte	.LFB7
 4791 1765 2C000000 		.4byte	.LFE7-.LFB7
 4792 1769 01       		.uleb128 0x1
 4793 176a 9C       		.byte	0x9c
 4794 176b BD170000 		.4byte	0x17bd
 4795 176f 27       		.uleb128 0x27
 4796 1770 AB0E0000 		.4byte	.LASF233
 4797 1774 01       		.byte	0x1
 4798 1775 C502     		.2byte	0x2c5
 4799 1777 BA000000 		.4byte	0xba
 4800 177b 00       		.byte	0
 4801 177c 24       		.uleb128 0x24
 4802 177d 08000000 		.4byte	.LVL224
 4803 1781 BC140000 		.4byte	0x14bc
 4804 1785 25       		.uleb128 0x25
 4805 1786 0E000000 		.4byte	.LVL225
 4806 178a 240E0000 		.4byte	0xe24
 4807 178e 99170000 		.4byte	0x1799
 4808 1792 1F       		.uleb128 0x1f
 4809 1793 01       		.uleb128 0x1
 4810 1794 50       		.byte	0x50
 4811 1795 02       		.uleb128 0x2
 4812 1796 74       		.byte	0x74
 4813 1797 00       		.sleb128 0
 4814 1798 00       		.byte	0
 4815 1799 25       		.uleb128 0x25
 4816 179a 1A000000 		.4byte	.LVL226
 4817 179e B50B0000 		.4byte	0xbb5
 4818 17a2 AD170000 		.4byte	0x17ad
 4819 17a6 1F       		.uleb128 0x1f
 4820 17a7 01       		.uleb128 0x1
 4821 17a8 50       		.byte	0x50
 4822 17a9 02       		.uleb128 0x2
 4823 17aa 74       		.byte	0x74
 4824 17ab 00       		.sleb128 0
 4825 17ac 00       		.byte	0
 4826 17ad 1E       		.uleb128 0x1e
 4827 17ae 20000000 		.4byte	.LVL227
 4828 17b2 B50B0000 		.4byte	0xbb5
 4829 17b6 1F       		.uleb128 0x1f
 4830 17b7 01       		.uleb128 0x1
 4831 17b8 50       		.byte	0x50
 4832 17b9 01       		.uleb128 0x1
 4833 17ba 31       		.byte	0x31
 4834 17bb 00       		.byte	0
 4835 17bc 00       		.byte	0
 4836 17bd 34       		.uleb128 0x34
 4837 17be D1070000 		.4byte	.LASF234
 4838 17c2 07       		.byte	0x7
 4839 17c3 A305     		.2byte	0x5a3
 4840 17c5 44090000 		.4byte	0x944
 4841 17c9 34       		.uleb128 0x34
 4842 17ca E9020000 		.4byte	.LASF235
 4843 17ce 07       		.byte	0x7
 4844 17cf A405     		.2byte	0x5a4
 4845 17d1 D5170000 		.4byte	0x17d5
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 148


 4846 17d5 28       		.uleb128 0x28
 4847 17d6 BC0A0000 		.4byte	0xabc
 4848 17da 0D       		.uleb128 0xd
 4849 17db 1F0E0000 		.4byte	0xe1f
 4850 17df EA170000 		.4byte	0x17ea
 4851 17e3 0E       		.uleb128 0xe
 4852 17e4 F8020000 		.4byte	0x2f8
 4853 17e8 21       		.byte	0x21
 4854 17e9 00       		.byte	0
 4855 17ea 34       		.uleb128 0x34
 4856 17eb B60E0000 		.4byte	.LASF236
 4857 17ef 07       		.byte	0x7
 4858 17f0 A505     		.2byte	0x5a5
 4859 17f2 F6170000 		.4byte	0x17f6
 4860 17f6 28       		.uleb128 0x28
 4861 17f7 DA170000 		.4byte	0x17da
 4862 17fb 35       		.uleb128 0x35
 4863 17fc D7000000 		.4byte	.LASF237
 4864 1800 01       		.byte	0x1
 4865 1801 BC       		.byte	0xbc
 4866 1802 C6000000 		.4byte	0xc6
 4867 1806 05       		.uleb128 0x5
 4868 1807 03       		.byte	0x3
 4869 1808 00000000 		.4byte	CapSense_widgetIndex
 4870 180c 35       		.uleb128 0x35
 4871 180d CC030000 		.4byte	.LASF238
 4872 1811 01       		.byte	0x1
 4873 1812 BD       		.byte	0xbd
 4874 1813 C6000000 		.4byte	0xc6
 4875 1817 05       		.uleb128 0x5
 4876 1818 03       		.byte	0x3
 4877 1819 00000000 		.4byte	CapSense_sensorIndex
 4878 181d 35       		.uleb128 0x35
 4879 181e B20F0000 		.4byte	.LASF239
 4880 1822 01       		.byte	0x1
 4881 1823 BE       		.byte	0xbe
 4882 1824 81000000 		.4byte	0x81
 4883 1828 05       		.uleb128 0x5
 4884 1829 03       		.byte	0x3
 4885 182a 00000000 		.4byte	CapSense_requestScanAllWidget
 4886 182e 35       		.uleb128 0x35
 4887 182f 440E0000 		.4byte	.LASF240
 4888 1833 01       		.byte	0x1
 4889 1834 C1       		.byte	0xc1
 4890 1835 760A0000 		.4byte	0xa76
 4891 1839 05       		.uleb128 0x5
 4892 183a 03       		.byte	0x3
 4893 183b 00000000 		.4byte	CapSense_curRamSnsPtr
 4894 183f 35       		.uleb128 0x35
 4895 1840 3A0C0000 		.4byte	.LASF241
 4896 1844 01       		.byte	0x1
 4897 1845 AF       		.byte	0xaf
 4898 1846 38020000 		.4byte	0x238
 4899 184a 05       		.uleb128 0x5
 4900 184b 03       		.byte	0x3
 4901 184c 00000000 		.4byte	CapSense_currentSenseMethod
 4902 1850 35       		.uleb128 0x35
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 149


 4903 1851 660E0000 		.4byte	.LASF242
 4904 1855 01       		.byte	0x1
 4905 1856 B8       		.byte	0xb8
 4906 1857 61180000 		.4byte	0x1861
 4907 185b 05       		.uleb128 0x5
 4908 185c 03       		.byte	0x3
 4909 185d 00000000 		.4byte	CapSense_scanFreqIndex
 4910 1861 28       		.uleb128 0x28
 4911 1862 81000000 		.4byte	0x81
 4912 1866 35       		.uleb128 0x35
 4913 1867 68080000 		.4byte	.LASF243
 4914 186b 01       		.byte	0x1
 4915 186c D0       		.byte	0xd0
 4916 186d 190E0000 		.4byte	0xe19
 4917 1871 05       		.uleb128 0x5
 4918 1872 03       		.byte	0x3
 4919 1873 00000000 		.4byte	CapSense_curSnsIOPtr
 4920 1877 0D       		.uleb128 0xd
 4921 1878 87180000 		.4byte	0x1887
 4922 187c 87180000 		.4byte	0x1887
 4923 1880 0E       		.uleb128 0xe
 4924 1881 F8020000 		.4byte	0x2f8
 4925 1885 05       		.byte	0x5
 4926 1886 00       		.byte	0
 4927 1887 28       		.uleb128 0x28
 4928 1888 260B0000 		.4byte	0xb26
 4929 188c 35       		.uleb128 0x35
 4930 188d F40F0000 		.4byte	.LASF244
 4931 1891 01       		.byte	0x1
 4932 1892 D2       		.byte	0xd2
 4933 1893 9D180000 		.4byte	0x189d
 4934 1897 05       		.uleb128 0x5
 4935 1898 03       		.byte	0x3
 4936 1899 00000000 		.4byte	CapSense_idacGainTable
 4937 189d 28       		.uleb128 0x28
 4938 189e 77180000 		.4byte	0x1877
 4939 18a2 36       		.uleb128 0x36
 4940 18a3 8C030000 		.4byte	.LASF245
 4941 18a7 8C030000 		.4byte	.LASF245
 4942 18ab 09       		.byte	0x9
 4943 18ac 8801     		.2byte	0x188
 4944 18ae 36       		.uleb128 0x36
 4945 18af A90D0000 		.4byte	.LASF246
 4946 18b3 A90D0000 		.4byte	.LASF246
 4947 18b7 09       		.byte	0x9
 4948 18b8 8A01     		.2byte	0x18a
 4949 18ba 36       		.uleb128 0x36
 4950 18bb 2B040000 		.4byte	.LASF247
 4951 18bf 2B040000 		.4byte	.LASF247
 4952 18c3 09       		.byte	0x9
 4953 18c4 8901     		.2byte	0x189
 4954 18c6 36       		.uleb128 0x36
 4955 18c7 2E0B0000 		.4byte	.LASF248
 4956 18cb 2E0B0000 		.4byte	.LASF248
 4957 18cf 09       		.byte	0x9
 4958 18d0 8B01     		.2byte	0x18b
 4959 18d2 37       		.uleb128 0x37
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 150


 4960 18d3 2D0E0000 		.4byte	.LASF249
 4961 18d7 2D0E0000 		.4byte	.LASF249
 4962 18db 0A       		.byte	0xa
 4963 18dc F8       		.byte	0xf8
 4964 18dd 37       		.uleb128 0x37
 4965 18de 80050000 		.4byte	.LASF250
 4966 18e2 80050000 		.4byte	.LASF250
 4967 18e6 0A       		.byte	0xa
 4968 18e7 F9       		.byte	0xf9
 4969 18e8 36       		.uleb128 0x36
 4970 18e9 910B0000 		.4byte	.LASF251
 4971 18ed 910B0000 		.4byte	.LASF251
 4972 18f1 09       		.byte	0x9
 4973 18f2 9101     		.2byte	0x191
 4974 18f4 37       		.uleb128 0x37
 4975 18f5 950C0000 		.4byte	.LASF252
 4976 18f9 950C0000 		.4byte	.LASF252
 4977 18fd 0B       		.byte	0xb
 4978 18fe 18       		.byte	0x18
 4979 18ff 36       		.uleb128 0x36
 4980 1900 A3000000 		.4byte	.LASF253
 4981 1904 A3000000 		.4byte	.LASF253
 4982 1908 09       		.byte	0x9
 4983 1909 8E01     		.2byte	0x18e
 4984 190b 36       		.uleb128 0x36
 4985 190c BE050000 		.4byte	.LASF254
 4986 1910 BE050000 		.4byte	.LASF254
 4987 1914 09       		.byte	0x9
 4988 1915 AE01     		.2byte	0x1ae
 4989 1917 37       		.uleb128 0x37
 4990 1918 4D0B0000 		.4byte	.LASF255
 4991 191c 4D0B0000 		.4byte	.LASF255
 4992 1920 06       		.byte	0x6
 4993 1921 B7       		.byte	0xb7
 4994 1922 37       		.uleb128 0x37
 4995 1923 1E020000 		.4byte	.LASF256
 4996 1927 1E020000 		.4byte	.LASF256
 4997 192b 06       		.byte	0x6
 4998 192c B8       		.byte	0xb8
 4999 192d 37       		.uleb128 0x37
 5000 192e BB080000 		.4byte	.LASF257
 5001 1932 BB080000 		.4byte	.LASF257
 5002 1936 0A       		.byte	0xa
 5003 1937 ED       		.byte	0xed
 5004 1938 36       		.uleb128 0x36
 5005 1939 8E090000 		.4byte	.LASF258
 5006 193d 8E090000 		.4byte	.LASF258
 5007 1941 09       		.byte	0x9
 5008 1942 A501     		.2byte	0x1a5
 5009 1944 36       		.uleb128 0x36
 5010 1945 2C070000 		.4byte	.LASF259
 5011 1949 2C070000 		.4byte	.LASF259
 5012 194d 09       		.byte	0x9
 5013 194e A101     		.2byte	0x1a1
 5014 1950 00       		.byte	0
 5015              		.section	.debug_abbrev,"",%progbits
 5016              	.Ldebug_abbrev0:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 151


 5017 0000 01       		.uleb128 0x1
 5018 0001 11       		.uleb128 0x11
 5019 0002 01       		.byte	0x1
 5020 0003 25       		.uleb128 0x25
 5021 0004 0E       		.uleb128 0xe
 5022 0005 13       		.uleb128 0x13
 5023 0006 0B       		.uleb128 0xb
 5024 0007 03       		.uleb128 0x3
 5025 0008 0E       		.uleb128 0xe
 5026 0009 1B       		.uleb128 0x1b
 5027 000a 0E       		.uleb128 0xe
 5028 000b 55       		.uleb128 0x55
 5029 000c 17       		.uleb128 0x17
 5030 000d 11       		.uleb128 0x11
 5031 000e 01       		.uleb128 0x1
 5032 000f 10       		.uleb128 0x10
 5033 0010 17       		.uleb128 0x17
 5034 0011 00       		.byte	0
 5035 0012 00       		.byte	0
 5036 0013 02       		.uleb128 0x2
 5037 0014 24       		.uleb128 0x24
 5038 0015 00       		.byte	0
 5039 0016 0B       		.uleb128 0xb
 5040 0017 0B       		.uleb128 0xb
 5041 0018 3E       		.uleb128 0x3e
 5042 0019 0B       		.uleb128 0xb
 5043 001a 03       		.uleb128 0x3
 5044 001b 0E       		.uleb128 0xe
 5045 001c 00       		.byte	0
 5046 001d 00       		.byte	0
 5047 001e 03       		.uleb128 0x3
 5048 001f 16       		.uleb128 0x16
 5049 0020 00       		.byte	0
 5050 0021 03       		.uleb128 0x3
 5051 0022 0E       		.uleb128 0xe
 5052 0023 3A       		.uleb128 0x3a
 5053 0024 0B       		.uleb128 0xb
 5054 0025 3B       		.uleb128 0x3b
 5055 0026 0B       		.uleb128 0xb
 5056 0027 49       		.uleb128 0x49
 5057 0028 13       		.uleb128 0x13
 5058 0029 00       		.byte	0
 5059 002a 00       		.byte	0
 5060 002b 04       		.uleb128 0x4
 5061 002c 24       		.uleb128 0x24
 5062 002d 00       		.byte	0
 5063 002e 0B       		.uleb128 0xb
 5064 002f 0B       		.uleb128 0xb
 5065 0030 3E       		.uleb128 0x3e
 5066 0031 0B       		.uleb128 0xb
 5067 0032 03       		.uleb128 0x3
 5068 0033 08       		.uleb128 0x8
 5069 0034 00       		.byte	0
 5070 0035 00       		.byte	0
 5071 0036 05       		.uleb128 0x5
 5072 0037 16       		.uleb128 0x16
 5073 0038 00       		.byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 152


 5074 0039 03       		.uleb128 0x3
 5075 003a 0E       		.uleb128 0xe
 5076 003b 3A       		.uleb128 0x3a
 5077 003c 0B       		.uleb128 0xb
 5078 003d 3B       		.uleb128 0x3b
 5079 003e 05       		.uleb128 0x5
 5080 003f 49       		.uleb128 0x49
 5081 0040 13       		.uleb128 0x13
 5082 0041 00       		.byte	0
 5083 0042 00       		.byte	0
 5084 0043 06       		.uleb128 0x6
 5085 0044 35       		.uleb128 0x35
 5086 0045 00       		.byte	0
 5087 0046 49       		.uleb128 0x49
 5088 0047 13       		.uleb128 0x13
 5089 0048 00       		.byte	0
 5090 0049 00       		.byte	0
 5091 004a 07       		.uleb128 0x7
 5092 004b 0F       		.uleb128 0xf
 5093 004c 00       		.byte	0
 5094 004d 0B       		.uleb128 0xb
 5095 004e 0B       		.uleb128 0xb
 5096 004f 49       		.uleb128 0x49
 5097 0050 13       		.uleb128 0x13
 5098 0051 00       		.byte	0
 5099 0052 00       		.byte	0
 5100 0053 08       		.uleb128 0x8
 5101 0054 15       		.uleb128 0x15
 5102 0055 00       		.byte	0
 5103 0056 27       		.uleb128 0x27
 5104 0057 19       		.uleb128 0x19
 5105 0058 00       		.byte	0
 5106 0059 00       		.byte	0
 5107 005a 09       		.uleb128 0x9
 5108 005b 13       		.uleb128 0x13
 5109 005c 01       		.byte	0x1
 5110 005d 0B       		.uleb128 0xb
 5111 005e 0B       		.uleb128 0xb
 5112 005f 3A       		.uleb128 0x3a
 5113 0060 0B       		.uleb128 0xb
 5114 0061 3B       		.uleb128 0x3b
 5115 0062 0B       		.uleb128 0xb
 5116 0063 01       		.uleb128 0x1
 5117 0064 13       		.uleb128 0x13
 5118 0065 00       		.byte	0
 5119 0066 00       		.byte	0
 5120 0067 0A       		.uleb128 0xa
 5121 0068 0D       		.uleb128 0xd
 5122 0069 00       		.byte	0
 5123 006a 03       		.uleb128 0x3
 5124 006b 0E       		.uleb128 0xe
 5125 006c 3A       		.uleb128 0x3a
 5126 006d 0B       		.uleb128 0xb
 5127 006e 3B       		.uleb128 0x3b
 5128 006f 0B       		.uleb128 0xb
 5129 0070 49       		.uleb128 0x49
 5130 0071 13       		.uleb128 0x13
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 153


 5131 0072 38       		.uleb128 0x38
 5132 0073 0B       		.uleb128 0xb
 5133 0074 00       		.byte	0
 5134 0075 00       		.byte	0
 5135 0076 0B       		.uleb128 0xb
 5136 0077 04       		.uleb128 0x4
 5137 0078 01       		.byte	0x1
 5138 0079 0B       		.uleb128 0xb
 5139 007a 0B       		.uleb128 0xb
 5140 007b 49       		.uleb128 0x49
 5141 007c 13       		.uleb128 0x13
 5142 007d 3A       		.uleb128 0x3a
 5143 007e 0B       		.uleb128 0xb
 5144 007f 3B       		.uleb128 0x3b
 5145 0080 0B       		.uleb128 0xb
 5146 0081 01       		.uleb128 0x1
 5147 0082 13       		.uleb128 0x13
 5148 0083 00       		.byte	0
 5149 0084 00       		.byte	0
 5150 0085 0C       		.uleb128 0xc
 5151 0086 28       		.uleb128 0x28
 5152 0087 00       		.byte	0
 5153 0088 03       		.uleb128 0x3
 5154 0089 0E       		.uleb128 0xe
 5155 008a 1C       		.uleb128 0x1c
 5156 008b 0B       		.uleb128 0xb
 5157 008c 00       		.byte	0
 5158 008d 00       		.byte	0
 5159 008e 0D       		.uleb128 0xd
 5160 008f 01       		.uleb128 0x1
 5161 0090 01       		.byte	0x1
 5162 0091 49       		.uleb128 0x49
 5163 0092 13       		.uleb128 0x13
 5164 0093 01       		.uleb128 0x1
 5165 0094 13       		.uleb128 0x13
 5166 0095 00       		.byte	0
 5167 0096 00       		.byte	0
 5168 0097 0E       		.uleb128 0xe
 5169 0098 21       		.uleb128 0x21
 5170 0099 00       		.byte	0
 5171 009a 49       		.uleb128 0x49
 5172 009b 13       		.uleb128 0x13
 5173 009c 2F       		.uleb128 0x2f
 5174 009d 0B       		.uleb128 0xb
 5175 009e 00       		.byte	0
 5176 009f 00       		.byte	0
 5177 00a0 0F       		.uleb128 0xf
 5178 00a1 0D       		.uleb128 0xd
 5179 00a2 00       		.byte	0
 5180 00a3 03       		.uleb128 0x3
 5181 00a4 0E       		.uleb128 0xe
 5182 00a5 3A       		.uleb128 0x3a
 5183 00a6 0B       		.uleb128 0xb
 5184 00a7 3B       		.uleb128 0x3b
 5185 00a8 05       		.uleb128 0x5
 5186 00a9 49       		.uleb128 0x49
 5187 00aa 13       		.uleb128 0x13
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 154


 5188 00ab 38       		.uleb128 0x38
 5189 00ac 0B       		.uleb128 0xb
 5190 00ad 00       		.byte	0
 5191 00ae 00       		.byte	0
 5192 00af 10       		.uleb128 0x10
 5193 00b0 13       		.uleb128 0x13
 5194 00b1 01       		.byte	0x1
 5195 00b2 0B       		.uleb128 0xb
 5196 00b3 05       		.uleb128 0x5
 5197 00b4 3A       		.uleb128 0x3a
 5198 00b5 0B       		.uleb128 0xb
 5199 00b6 3B       		.uleb128 0x3b
 5200 00b7 05       		.uleb128 0x5
 5201 00b8 01       		.uleb128 0x1
 5202 00b9 13       		.uleb128 0x13
 5203 00ba 00       		.byte	0
 5204 00bb 00       		.byte	0
 5205 00bc 11       		.uleb128 0x11
 5206 00bd 0D       		.uleb128 0xd
 5207 00be 00       		.byte	0
 5208 00bf 03       		.uleb128 0x3
 5209 00c0 0E       		.uleb128 0xe
 5210 00c1 3A       		.uleb128 0x3a
 5211 00c2 0B       		.uleb128 0xb
 5212 00c3 3B       		.uleb128 0x3b
 5213 00c4 05       		.uleb128 0x5
 5214 00c5 49       		.uleb128 0x49
 5215 00c6 13       		.uleb128 0x13
 5216 00c7 38       		.uleb128 0x38
 5217 00c8 05       		.uleb128 0x5
 5218 00c9 00       		.byte	0
 5219 00ca 00       		.byte	0
 5220 00cb 12       		.uleb128 0x12
 5221 00cc 13       		.uleb128 0x13
 5222 00cd 01       		.byte	0x1
 5223 00ce 0B       		.uleb128 0xb
 5224 00cf 0B       		.uleb128 0xb
 5225 00d0 3A       		.uleb128 0x3a
 5226 00d1 0B       		.uleb128 0xb
 5227 00d2 3B       		.uleb128 0x3b
 5228 00d3 05       		.uleb128 0x5
 5229 00d4 01       		.uleb128 0x1
 5230 00d5 13       		.uleb128 0x13
 5231 00d6 00       		.byte	0
 5232 00d7 00       		.byte	0
 5233 00d8 13       		.uleb128 0x13
 5234 00d9 0D       		.uleb128 0xd
 5235 00da 00       		.byte	0
 5236 00db 03       		.uleb128 0x3
 5237 00dc 08       		.uleb128 0x8
 5238 00dd 3A       		.uleb128 0x3a
 5239 00de 0B       		.uleb128 0xb
 5240 00df 3B       		.uleb128 0x3b
 5241 00e0 05       		.uleb128 0x5
 5242 00e1 49       		.uleb128 0x49
 5243 00e2 13       		.uleb128 0x13
 5244 00e3 38       		.uleb128 0x38
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 155


 5245 00e4 0B       		.uleb128 0xb
 5246 00e5 00       		.byte	0
 5247 00e6 00       		.byte	0
 5248 00e7 14       		.uleb128 0x14
 5249 00e8 26       		.uleb128 0x26
 5250 00e9 00       		.byte	0
 5251 00ea 00       		.byte	0
 5252 00eb 00       		.byte	0
 5253 00ec 15       		.uleb128 0x15
 5254 00ed 0F       		.uleb128 0xf
 5255 00ee 00       		.byte	0
 5256 00ef 0B       		.uleb128 0xb
 5257 00f0 0B       		.uleb128 0xb
 5258 00f1 00       		.byte	0
 5259 00f2 00       		.byte	0
 5260 00f3 16       		.uleb128 0x16
 5261 00f4 2E       		.uleb128 0x2e
 5262 00f5 01       		.byte	0x1
 5263 00f6 3F       		.uleb128 0x3f
 5264 00f7 19       		.uleb128 0x19
 5265 00f8 03       		.uleb128 0x3
 5266 00f9 0E       		.uleb128 0xe
 5267 00fa 3A       		.uleb128 0x3a
 5268 00fb 0B       		.uleb128 0xb
 5269 00fc 3B       		.uleb128 0x3b
 5270 00fd 05       		.uleb128 0x5
 5271 00fe 27       		.uleb128 0x27
 5272 00ff 19       		.uleb128 0x19
 5273 0100 49       		.uleb128 0x49
 5274 0101 13       		.uleb128 0x13
 5275 0102 20       		.uleb128 0x20
 5276 0103 0B       		.uleb128 0xb
 5277 0104 01       		.uleb128 0x1
 5278 0105 13       		.uleb128 0x13
 5279 0106 00       		.byte	0
 5280 0107 00       		.byte	0
 5281 0108 17       		.uleb128 0x17
 5282 0109 34       		.uleb128 0x34
 5283 010a 00       		.byte	0
 5284 010b 03       		.uleb128 0x3
 5285 010c 0E       		.uleb128 0xe
 5286 010d 3A       		.uleb128 0x3a
 5287 010e 0B       		.uleb128 0xb
 5288 010f 3B       		.uleb128 0x3b
 5289 0110 05       		.uleb128 0x5
 5290 0111 49       		.uleb128 0x49
 5291 0112 13       		.uleb128 0x13
 5292 0113 00       		.byte	0
 5293 0114 00       		.byte	0
 5294 0115 18       		.uleb128 0x18
 5295 0116 05       		.uleb128 0x5
 5296 0117 00       		.byte	0
 5297 0118 03       		.uleb128 0x3
 5298 0119 0E       		.uleb128 0xe
 5299 011a 3A       		.uleb128 0x3a
 5300 011b 0B       		.uleb128 0xb
 5301 011c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 156


 5302 011d 05       		.uleb128 0x5
 5303 011e 49       		.uleb128 0x49
 5304 011f 13       		.uleb128 0x13
 5305 0120 00       		.byte	0
 5306 0121 00       		.byte	0
 5307 0122 19       		.uleb128 0x19
 5308 0123 2E       		.uleb128 0x2e
 5309 0124 01       		.byte	0x1
 5310 0125 3F       		.uleb128 0x3f
 5311 0126 19       		.uleb128 0x19
 5312 0127 03       		.uleb128 0x3
 5313 0128 0E       		.uleb128 0xe
 5314 0129 3A       		.uleb128 0x3a
 5315 012a 0B       		.uleb128 0xb
 5316 012b 3B       		.uleb128 0x3b
 5317 012c 05       		.uleb128 0x5
 5318 012d 27       		.uleb128 0x27
 5319 012e 19       		.uleb128 0x19
 5320 012f 20       		.uleb128 0x20
 5321 0130 0B       		.uleb128 0xb
 5322 0131 01       		.uleb128 0x1
 5323 0132 13       		.uleb128 0x13
 5324 0133 00       		.byte	0
 5325 0134 00       		.byte	0
 5326 0135 1A       		.uleb128 0x1a
 5327 0136 2E       		.uleb128 0x2e
 5328 0137 00       		.byte	0
 5329 0138 3F       		.uleb128 0x3f
 5330 0139 19       		.uleb128 0x19
 5331 013a 03       		.uleb128 0x3
 5332 013b 0E       		.uleb128 0xe
 5333 013c 3A       		.uleb128 0x3a
 5334 013d 0B       		.uleb128 0xb
 5335 013e 3B       		.uleb128 0x3b
 5336 013f 0B       		.uleb128 0xb
 5337 0140 27       		.uleb128 0x27
 5338 0141 19       		.uleb128 0x19
 5339 0142 49       		.uleb128 0x49
 5340 0143 13       		.uleb128 0x13
 5341 0144 11       		.uleb128 0x11
 5342 0145 01       		.uleb128 0x1
 5343 0146 12       		.uleb128 0x12
 5344 0147 06       		.uleb128 0x6
 5345 0148 40       		.uleb128 0x40
 5346 0149 18       		.uleb128 0x18
 5347 014a 9742     		.uleb128 0x2117
 5348 014c 19       		.uleb128 0x19
 5349 014d 00       		.byte	0
 5350 014e 00       		.byte	0
 5351 014f 1B       		.uleb128 0x1b
 5352 0150 2E       		.uleb128 0x2e
 5353 0151 01       		.byte	0x1
 5354 0152 3F       		.uleb128 0x3f
 5355 0153 19       		.uleb128 0x19
 5356 0154 03       		.uleb128 0x3
 5357 0155 0E       		.uleb128 0xe
 5358 0156 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 157


 5359 0157 0B       		.uleb128 0xb
 5360 0158 3B       		.uleb128 0x3b
 5361 0159 05       		.uleb128 0x5
 5362 015a 27       		.uleb128 0x27
 5363 015b 19       		.uleb128 0x19
 5364 015c 49       		.uleb128 0x49
 5365 015d 13       		.uleb128 0x13
 5366 015e 11       		.uleb128 0x11
 5367 015f 01       		.uleb128 0x1
 5368 0160 12       		.uleb128 0x12
 5369 0161 06       		.uleb128 0x6
 5370 0162 40       		.uleb128 0x40
 5371 0163 18       		.uleb128 0x18
 5372 0164 9742     		.uleb128 0x2117
 5373 0166 19       		.uleb128 0x19
 5374 0167 01       		.uleb128 0x1
 5375 0168 13       		.uleb128 0x13
 5376 0169 00       		.byte	0
 5377 016a 00       		.byte	0
 5378 016b 1C       		.uleb128 0x1c
 5379 016c 05       		.uleb128 0x5
 5380 016d 00       		.byte	0
 5381 016e 03       		.uleb128 0x3
 5382 016f 0E       		.uleb128 0xe
 5383 0170 3A       		.uleb128 0x3a
 5384 0171 0B       		.uleb128 0xb
 5385 0172 3B       		.uleb128 0x3b
 5386 0173 05       		.uleb128 0x5
 5387 0174 49       		.uleb128 0x49
 5388 0175 13       		.uleb128 0x13
 5389 0176 02       		.uleb128 0x2
 5390 0177 17       		.uleb128 0x17
 5391 0178 00       		.byte	0
 5392 0179 00       		.byte	0
 5393 017a 1D       		.uleb128 0x1d
 5394 017b 34       		.uleb128 0x34
 5395 017c 00       		.byte	0
 5396 017d 03       		.uleb128 0x3
 5397 017e 0E       		.uleb128 0xe
 5398 017f 3A       		.uleb128 0x3a
 5399 0180 0B       		.uleb128 0xb
 5400 0181 3B       		.uleb128 0x3b
 5401 0182 05       		.uleb128 0x5
 5402 0183 49       		.uleb128 0x49
 5403 0184 13       		.uleb128 0x13
 5404 0185 02       		.uleb128 0x2
 5405 0186 17       		.uleb128 0x17
 5406 0187 00       		.byte	0
 5407 0188 00       		.byte	0
 5408 0189 1E       		.uleb128 0x1e
 5409 018a 898201   		.uleb128 0x4109
 5410 018d 01       		.byte	0x1
 5411 018e 11       		.uleb128 0x11
 5412 018f 01       		.uleb128 0x1
 5413 0190 31       		.uleb128 0x31
 5414 0191 13       		.uleb128 0x13
 5415 0192 00       		.byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 158


 5416 0193 00       		.byte	0
 5417 0194 1F       		.uleb128 0x1f
 5418 0195 8A8201   		.uleb128 0x410a
 5419 0198 00       		.byte	0
 5420 0199 02       		.uleb128 0x2
 5421 019a 18       		.uleb128 0x18
 5422 019b 9142     		.uleb128 0x2111
 5423 019d 18       		.uleb128 0x18
 5424 019e 00       		.byte	0
 5425 019f 00       		.byte	0
 5426 01a0 20       		.uleb128 0x20
 5427 01a1 2E       		.uleb128 0x2e
 5428 01a2 01       		.byte	0x1
 5429 01a3 31       		.uleb128 0x31
 5430 01a4 13       		.uleb128 0x13
 5431 01a5 11       		.uleb128 0x11
 5432 01a6 01       		.uleb128 0x1
 5433 01a7 12       		.uleb128 0x12
 5434 01a8 06       		.uleb128 0x6
 5435 01a9 40       		.uleb128 0x40
 5436 01aa 18       		.uleb128 0x18
 5437 01ab 9742     		.uleb128 0x2117
 5438 01ad 19       		.uleb128 0x19
 5439 01ae 01       		.uleb128 0x1
 5440 01af 13       		.uleb128 0x13
 5441 01b0 00       		.byte	0
 5442 01b1 00       		.byte	0
 5443 01b2 21       		.uleb128 0x21
 5444 01b3 34       		.uleb128 0x34
 5445 01b4 00       		.byte	0
 5446 01b5 31       		.uleb128 0x31
 5447 01b6 13       		.uleb128 0x13
 5448 01b7 02       		.uleb128 0x2
 5449 01b8 17       		.uleb128 0x17
 5450 01b9 00       		.byte	0
 5451 01ba 00       		.byte	0
 5452 01bb 22       		.uleb128 0x22
 5453 01bc 0B       		.uleb128 0xb
 5454 01bd 01       		.byte	0x1
 5455 01be 11       		.uleb128 0x11
 5456 01bf 01       		.uleb128 0x1
 5457 01c0 12       		.uleb128 0x12
 5458 01c1 06       		.uleb128 0x6
 5459 01c2 00       		.byte	0
 5460 01c3 00       		.byte	0
 5461 01c4 23       		.uleb128 0x23
 5462 01c5 34       		.uleb128 0x34
 5463 01c6 00       		.byte	0
 5464 01c7 31       		.uleb128 0x31
 5465 01c8 13       		.uleb128 0x13
 5466 01c9 00       		.byte	0
 5467 01ca 00       		.byte	0
 5468 01cb 24       		.uleb128 0x24
 5469 01cc 898201   		.uleb128 0x4109
 5470 01cf 00       		.byte	0
 5471 01d0 11       		.uleb128 0x11
 5472 01d1 01       		.uleb128 0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 159


 5473 01d2 31       		.uleb128 0x31
 5474 01d3 13       		.uleb128 0x13
 5475 01d4 00       		.byte	0
 5476 01d5 00       		.byte	0
 5477 01d6 25       		.uleb128 0x25
 5478 01d7 898201   		.uleb128 0x4109
 5479 01da 01       		.byte	0x1
 5480 01db 11       		.uleb128 0x11
 5481 01dc 01       		.uleb128 0x1
 5482 01dd 31       		.uleb128 0x31
 5483 01de 13       		.uleb128 0x13
 5484 01df 01       		.uleb128 0x1
 5485 01e0 13       		.uleb128 0x13
 5486 01e1 00       		.byte	0
 5487 01e2 00       		.byte	0
 5488 01e3 26       		.uleb128 0x26
 5489 01e4 2E       		.uleb128 0x2e
 5490 01e5 01       		.byte	0x1
 5491 01e6 3F       		.uleb128 0x3f
 5492 01e7 19       		.uleb128 0x19
 5493 01e8 03       		.uleb128 0x3
 5494 01e9 0E       		.uleb128 0xe
 5495 01ea 3A       		.uleb128 0x3a
 5496 01eb 0B       		.uleb128 0xb
 5497 01ec 3B       		.uleb128 0x3b
 5498 01ed 05       		.uleb128 0x5
 5499 01ee 27       		.uleb128 0x27
 5500 01ef 19       		.uleb128 0x19
 5501 01f0 11       		.uleb128 0x11
 5502 01f1 01       		.uleb128 0x1
 5503 01f2 12       		.uleb128 0x12
 5504 01f3 06       		.uleb128 0x6
 5505 01f4 40       		.uleb128 0x40
 5506 01f5 18       		.uleb128 0x18
 5507 01f6 9742     		.uleb128 0x2117
 5508 01f8 19       		.uleb128 0x19
 5509 01f9 01       		.uleb128 0x1
 5510 01fa 13       		.uleb128 0x13
 5511 01fb 00       		.byte	0
 5512 01fc 00       		.byte	0
 5513 01fd 27       		.uleb128 0x27
 5514 01fe 34       		.uleb128 0x34
 5515 01ff 00       		.byte	0
 5516 0200 03       		.uleb128 0x3
 5517 0201 0E       		.uleb128 0xe
 5518 0202 3A       		.uleb128 0x3a
 5519 0203 0B       		.uleb128 0xb
 5520 0204 3B       		.uleb128 0x3b
 5521 0205 05       		.uleb128 0x5
 5522 0206 49       		.uleb128 0x49
 5523 0207 13       		.uleb128 0x13
 5524 0208 1C       		.uleb128 0x1c
 5525 0209 0B       		.uleb128 0xb
 5526 020a 00       		.byte	0
 5527 020b 00       		.byte	0
 5528 020c 28       		.uleb128 0x28
 5529 020d 26       		.uleb128 0x26
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 160


 5530 020e 00       		.byte	0
 5531 020f 49       		.uleb128 0x49
 5532 0210 13       		.uleb128 0x13
 5533 0211 00       		.byte	0
 5534 0212 00       		.byte	0
 5535 0213 29       		.uleb128 0x29
 5536 0214 34       		.uleb128 0x34
 5537 0215 00       		.byte	0
 5538 0216 03       		.uleb128 0x3
 5539 0217 0E       		.uleb128 0xe
 5540 0218 3A       		.uleb128 0x3a
 5541 0219 0B       		.uleb128 0xb
 5542 021a 3B       		.uleb128 0x3b
 5543 021b 05       		.uleb128 0x5
 5544 021c 49       		.uleb128 0x49
 5545 021d 13       		.uleb128 0x13
 5546 021e 02       		.uleb128 0x2
 5547 021f 18       		.uleb128 0x18
 5548 0220 00       		.byte	0
 5549 0221 00       		.byte	0
 5550 0222 2A       		.uleb128 0x2a
 5551 0223 05       		.uleb128 0x5
 5552 0224 00       		.byte	0
 5553 0225 31       		.uleb128 0x31
 5554 0226 13       		.uleb128 0x13
 5555 0227 02       		.uleb128 0x2
 5556 0228 17       		.uleb128 0x17
 5557 0229 00       		.byte	0
 5558 022a 00       		.byte	0
 5559 022b 2B       		.uleb128 0x2b
 5560 022c 2E       		.uleb128 0x2e
 5561 022d 01       		.byte	0x1
 5562 022e 03       		.uleb128 0x3
 5563 022f 0E       		.uleb128 0xe
 5564 0230 3A       		.uleb128 0x3a
 5565 0231 0B       		.uleb128 0xb
 5566 0232 3B       		.uleb128 0x3b
 5567 0233 05       		.uleb128 0x5
 5568 0234 27       		.uleb128 0x27
 5569 0235 19       		.uleb128 0x19
 5570 0236 49       		.uleb128 0x49
 5571 0237 13       		.uleb128 0x13
 5572 0238 20       		.uleb128 0x20
 5573 0239 0B       		.uleb128 0xb
 5574 023a 01       		.uleb128 0x1
 5575 023b 13       		.uleb128 0x13
 5576 023c 00       		.byte	0
 5577 023d 00       		.byte	0
 5578 023e 2C       		.uleb128 0x2c
 5579 023f 2E       		.uleb128 0x2e
 5580 0240 01       		.byte	0x1
 5581 0241 03       		.uleb128 0x3
 5582 0242 0E       		.uleb128 0xe
 5583 0243 3A       		.uleb128 0x3a
 5584 0244 0B       		.uleb128 0xb
 5585 0245 3B       		.uleb128 0x3b
 5586 0246 05       		.uleb128 0x5
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 161


 5587 0247 27       		.uleb128 0x27
 5588 0248 19       		.uleb128 0x19
 5589 0249 11       		.uleb128 0x11
 5590 024a 01       		.uleb128 0x1
 5591 024b 12       		.uleb128 0x12
 5592 024c 06       		.uleb128 0x6
 5593 024d 40       		.uleb128 0x40
 5594 024e 18       		.uleb128 0x18
 5595 024f 9642     		.uleb128 0x2116
 5596 0251 19       		.uleb128 0x19
 5597 0252 01       		.uleb128 0x1
 5598 0253 13       		.uleb128 0x13
 5599 0254 00       		.byte	0
 5600 0255 00       		.byte	0
 5601 0256 2D       		.uleb128 0x2d
 5602 0257 1D       		.uleb128 0x1d
 5603 0258 01       		.byte	0x1
 5604 0259 31       		.uleb128 0x31
 5605 025a 13       		.uleb128 0x13
 5606 025b 52       		.uleb128 0x52
 5607 025c 01       		.uleb128 0x1
 5608 025d 55       		.uleb128 0x55
 5609 025e 17       		.uleb128 0x17
 5610 025f 58       		.uleb128 0x58
 5611 0260 0B       		.uleb128 0xb
 5612 0261 59       		.uleb128 0x59
 5613 0262 05       		.uleb128 0x5
 5614 0263 01       		.uleb128 0x1
 5615 0264 13       		.uleb128 0x13
 5616 0265 00       		.byte	0
 5617 0266 00       		.byte	0
 5618 0267 2E       		.uleb128 0x2e
 5619 0268 0B       		.uleb128 0xb
 5620 0269 01       		.byte	0x1
 5621 026a 55       		.uleb128 0x55
 5622 026b 17       		.uleb128 0x17
 5623 026c 00       		.byte	0
 5624 026d 00       		.byte	0
 5625 026e 2F       		.uleb128 0x2f
 5626 026f 2E       		.uleb128 0x2e
 5627 0270 01       		.byte	0x1
 5628 0271 3F       		.uleb128 0x3f
 5629 0272 19       		.uleb128 0x19
 5630 0273 03       		.uleb128 0x3
 5631 0274 0E       		.uleb128 0xe
 5632 0275 3A       		.uleb128 0x3a
 5633 0276 0B       		.uleb128 0xb
 5634 0277 3B       		.uleb128 0x3b
 5635 0278 05       		.uleb128 0x5
 5636 0279 27       		.uleb128 0x27
 5637 027a 19       		.uleb128 0x19
 5638 027b 49       		.uleb128 0x49
 5639 027c 13       		.uleb128 0x13
 5640 027d 11       		.uleb128 0x11
 5641 027e 01       		.uleb128 0x1
 5642 027f 12       		.uleb128 0x12
 5643 0280 06       		.uleb128 0x6
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 162


 5644 0281 40       		.uleb128 0x40
 5645 0282 18       		.uleb128 0x18
 5646 0283 9642     		.uleb128 0x2116
 5647 0285 19       		.uleb128 0x19
 5648 0286 01       		.uleb128 0x1
 5649 0287 13       		.uleb128 0x13
 5650 0288 00       		.byte	0
 5651 0289 00       		.byte	0
 5652 028a 30       		.uleb128 0x30
 5653 028b 05       		.uleb128 0x5
 5654 028c 00       		.byte	0
 5655 028d 03       		.uleb128 0x3
 5656 028e 0E       		.uleb128 0xe
 5657 028f 3A       		.uleb128 0x3a
 5658 0290 0B       		.uleb128 0xb
 5659 0291 3B       		.uleb128 0x3b
 5660 0292 05       		.uleb128 0x5
 5661 0293 49       		.uleb128 0x49
 5662 0294 13       		.uleb128 0x13
 5663 0295 02       		.uleb128 0x2
 5664 0296 18       		.uleb128 0x18
 5665 0297 00       		.byte	0
 5666 0298 00       		.byte	0
 5667 0299 31       		.uleb128 0x31
 5668 029a 2E       		.uleb128 0x2e
 5669 029b 01       		.byte	0x1
 5670 029c 03       		.uleb128 0x3
 5671 029d 0E       		.uleb128 0xe
 5672 029e 3A       		.uleb128 0x3a
 5673 029f 0B       		.uleb128 0xb
 5674 02a0 3B       		.uleb128 0x3b
 5675 02a1 05       		.uleb128 0x5
 5676 02a2 27       		.uleb128 0x27
 5677 02a3 19       		.uleb128 0x19
 5678 02a4 20       		.uleb128 0x20
 5679 02a5 0B       		.uleb128 0xb
 5680 02a6 01       		.uleb128 0x1
 5681 02a7 13       		.uleb128 0x13
 5682 02a8 00       		.byte	0
 5683 02a9 00       		.byte	0
 5684 02aa 32       		.uleb128 0x32
 5685 02ab 1D       		.uleb128 0x1d
 5686 02ac 01       		.byte	0x1
 5687 02ad 31       		.uleb128 0x31
 5688 02ae 13       		.uleb128 0x13
 5689 02af 11       		.uleb128 0x11
 5690 02b0 01       		.uleb128 0x1
 5691 02b1 12       		.uleb128 0x12
 5692 02b2 06       		.uleb128 0x6
 5693 02b3 58       		.uleb128 0x58
 5694 02b4 0B       		.uleb128 0xb
 5695 02b5 59       		.uleb128 0x59
 5696 02b6 05       		.uleb128 0x5
 5697 02b7 01       		.uleb128 0x1
 5698 02b8 13       		.uleb128 0x13
 5699 02b9 00       		.byte	0
 5700 02ba 00       		.byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 163


 5701 02bb 33       		.uleb128 0x33
 5702 02bc 0B       		.uleb128 0xb
 5703 02bd 01       		.byte	0x1
 5704 02be 11       		.uleb128 0x11
 5705 02bf 01       		.uleb128 0x1
 5706 02c0 12       		.uleb128 0x12
 5707 02c1 06       		.uleb128 0x6
 5708 02c2 01       		.uleb128 0x1
 5709 02c3 13       		.uleb128 0x13
 5710 02c4 00       		.byte	0
 5711 02c5 00       		.byte	0
 5712 02c6 34       		.uleb128 0x34
 5713 02c7 34       		.uleb128 0x34
 5714 02c8 00       		.byte	0
 5715 02c9 03       		.uleb128 0x3
 5716 02ca 0E       		.uleb128 0xe
 5717 02cb 3A       		.uleb128 0x3a
 5718 02cc 0B       		.uleb128 0xb
 5719 02cd 3B       		.uleb128 0x3b
 5720 02ce 05       		.uleb128 0x5
 5721 02cf 49       		.uleb128 0x49
 5722 02d0 13       		.uleb128 0x13
 5723 02d1 3F       		.uleb128 0x3f
 5724 02d2 19       		.uleb128 0x19
 5725 02d3 3C       		.uleb128 0x3c
 5726 02d4 19       		.uleb128 0x19
 5727 02d5 00       		.byte	0
 5728 02d6 00       		.byte	0
 5729 02d7 35       		.uleb128 0x35
 5730 02d8 34       		.uleb128 0x34
 5731 02d9 00       		.byte	0
 5732 02da 03       		.uleb128 0x3
 5733 02db 0E       		.uleb128 0xe
 5734 02dc 3A       		.uleb128 0x3a
 5735 02dd 0B       		.uleb128 0xb
 5736 02de 3B       		.uleb128 0x3b
 5737 02df 0B       		.uleb128 0xb
 5738 02e0 49       		.uleb128 0x49
 5739 02e1 13       		.uleb128 0x13
 5740 02e2 3F       		.uleb128 0x3f
 5741 02e3 19       		.uleb128 0x19
 5742 02e4 02       		.uleb128 0x2
 5743 02e5 18       		.uleb128 0x18
 5744 02e6 00       		.byte	0
 5745 02e7 00       		.byte	0
 5746 02e8 36       		.uleb128 0x36
 5747 02e9 2E       		.uleb128 0x2e
 5748 02ea 00       		.byte	0
 5749 02eb 3F       		.uleb128 0x3f
 5750 02ec 19       		.uleb128 0x19
 5751 02ed 3C       		.uleb128 0x3c
 5752 02ee 19       		.uleb128 0x19
 5753 02ef 6E       		.uleb128 0x6e
 5754 02f0 0E       		.uleb128 0xe
 5755 02f1 03       		.uleb128 0x3
 5756 02f2 0E       		.uleb128 0xe
 5757 02f3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 164


 5758 02f4 0B       		.uleb128 0xb
 5759 02f5 3B       		.uleb128 0x3b
 5760 02f6 05       		.uleb128 0x5
 5761 02f7 00       		.byte	0
 5762 02f8 00       		.byte	0
 5763 02f9 37       		.uleb128 0x37
 5764 02fa 2E       		.uleb128 0x2e
 5765 02fb 00       		.byte	0
 5766 02fc 3F       		.uleb128 0x3f
 5767 02fd 19       		.uleb128 0x19
 5768 02fe 3C       		.uleb128 0x3c
 5769 02ff 19       		.uleb128 0x19
 5770 0300 6E       		.uleb128 0x6e
 5771 0301 0E       		.uleb128 0xe
 5772 0302 03       		.uleb128 0x3
 5773 0303 0E       		.uleb128 0xe
 5774 0304 3A       		.uleb128 0x3a
 5775 0305 0B       		.uleb128 0xb
 5776 0306 3B       		.uleb128 0x3b
 5777 0307 0B       		.uleb128 0xb
 5778 0308 00       		.byte	0
 5779 0309 00       		.byte	0
 5780 030a 00       		.byte	0
 5781              		.section	.debug_loc,"",%progbits
 5782              	.Ldebug_loc0:
 5783              	.LLST0:
 5784 0000 00000000 		.4byte	.LVL0
 5785 0004 2B000000 		.4byte	.LVL2-1
 5786 0008 0100     		.2byte	0x1
 5787 000a 50       		.byte	0x50
 5788 000b 2B000000 		.4byte	.LVL2-1
 5789 000f 38000000 		.4byte	.LFE2
 5790 0013 0400     		.2byte	0x4
 5791 0015 F3       		.byte	0xf3
 5792 0016 01       		.uleb128 0x1
 5793 0017 50       		.byte	0x50
 5794 0018 9F       		.byte	0x9f
 5795 0019 00000000 		.4byte	0
 5796 001d 00000000 		.4byte	0
 5797              	.LLST1:
 5798 0021 28000000 		.4byte	.LVL1
 5799 0025 2E000000 		.4byte	.LVL3
 5800 0029 0200     		.2byte	0x2
 5801 002b 30       		.byte	0x30
 5802 002c 9F       		.byte	0x9f
 5803 002d 00000000 		.4byte	0
 5804 0031 00000000 		.4byte	0
 5805              	.LLST2:
 5806 0035 00000000 		.4byte	.LVL4
 5807 0039 26000000 		.4byte	.LVL6
 5808 003d 0200     		.2byte	0x2
 5809 003f 30       		.byte	0x30
 5810 0040 9F       		.byte	0x9f
 5811 0041 26000000 		.4byte	.LVL6
 5812 0045 30000000 		.4byte	.LFE3
 5813 0049 0100     		.2byte	0x1
 5814 004b 50       		.byte	0x50
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 165


 5815 004c 00000000 		.4byte	0
 5816 0050 00000000 		.4byte	0
 5817              	.LLST3:
 5818 0054 00000000 		.4byte	.LVL7
 5819 0058 14000000 		.4byte	.LVL9
 5820 005c 0300     		.2byte	0x3
 5821 005e 09       		.byte	0x9
 5822 005f FF       		.byte	0xff
 5823 0060 9F       		.byte	0x9f
 5824 0061 14000000 		.4byte	.LVL9
 5825 0065 29000000 		.4byte	.LVL10-1
 5826 0069 0100     		.2byte	0x1
 5827 006b 50       		.byte	0x50
 5828 006c 2A000000 		.4byte	.LVL10
 5829 0070 3C000000 		.4byte	.LFE4
 5830 0074 0100     		.2byte	0x1
 5831 0076 50       		.byte	0x50
 5832 0077 00000000 		.4byte	0
 5833 007b 00000000 		.4byte	0
 5834              	.LLST4:
 5835 007f 0E000000 		.4byte	.LVL8
 5836 0083 32000000 		.4byte	.LVL12
 5837 0087 0100     		.2byte	0x1
 5838 0089 54       		.byte	0x54
 5839 008a 00000000 		.4byte	0
 5840 008e 00000000 		.4byte	0
 5841              	.LLST5:
 5842 0092 00000000 		.4byte	.LVL13
 5843 0096 37000000 		.4byte	.LVL15-1
 5844 009a 0100     		.2byte	0x1
 5845 009c 50       		.byte	0x50
 5846 009d 37000000 		.4byte	.LVL15-1
 5847 00a1 48000000 		.4byte	.LFE5
 5848 00a5 0400     		.2byte	0x4
 5849 00a7 F3       		.byte	0xf3
 5850 00a8 01       		.uleb128 0x1
 5851 00a9 50       		.byte	0x50
 5852 00aa 9F       		.byte	0x9f
 5853 00ab 00000000 		.4byte	0
 5854 00af 00000000 		.4byte	0
 5855              	.LLST6:
 5856 00b3 00000000 		.4byte	.LVL13
 5857 00b7 37000000 		.4byte	.LVL15-1
 5858 00bb 0100     		.2byte	0x1
 5859 00bd 51       		.byte	0x51
 5860 00be 37000000 		.4byte	.LVL15-1
 5861 00c2 48000000 		.4byte	.LFE5
 5862 00c6 0400     		.2byte	0x4
 5863 00c8 F3       		.byte	0xf3
 5864 00c9 01       		.uleb128 0x1
 5865 00ca 51       		.byte	0x51
 5866 00cb 9F       		.byte	0x9f
 5867 00cc 00000000 		.4byte	0
 5868 00d0 00000000 		.4byte	0
 5869              	.LLST7:
 5870 00d4 34000000 		.4byte	.LVL14
 5871 00d8 3A000000 		.4byte	.LVL16
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 166


 5872 00dc 0200     		.2byte	0x2
 5873 00de 30       		.byte	0x30
 5874 00df 9F       		.byte	0x9f
 5875 00e0 00000000 		.4byte	0
 5876 00e4 00000000 		.4byte	0
 5877              	.LLST8:
 5878 00e8 00000000 		.4byte	.LVL17
 5879 00ec 26000000 		.4byte	.LVL19
 5880 00f0 0200     		.2byte	0x2
 5881 00f2 30       		.byte	0x30
 5882 00f3 9F       		.byte	0x9f
 5883 00f4 26000000 		.4byte	.LVL19
 5884 00f8 30000000 		.4byte	.LFE6
 5885 00fc 0100     		.2byte	0x1
 5886 00fe 50       		.byte	0x50
 5887 00ff 00000000 		.4byte	0
 5888 0103 00000000 		.4byte	0
 5889              	.LLST9:
 5890 0107 00000000 		.4byte	.LVL20
 5891 010b 08000000 		.4byte	.LVL22
 5892 010f 0100     		.2byte	0x1
 5893 0111 50       		.byte	0x50
 5894 0112 08000000 		.4byte	.LVL22
 5895 0116 84000000 		.4byte	.LFE8
 5896 011a 0400     		.2byte	0x4
 5897 011c F3       		.byte	0xf3
 5898 011d 01       		.uleb128 0x1
 5899 011e 50       		.byte	0x50
 5900 011f 9F       		.byte	0x9f
 5901 0120 00000000 		.4byte	0
 5902 0124 00000000 		.4byte	0
 5903              	.LLST10:
 5904 0128 00000000 		.4byte	.LVL20
 5905 012c 04000000 		.4byte	.LVL21
 5906 0130 0100     		.2byte	0x1
 5907 0132 51       		.byte	0x51
 5908 0133 04000000 		.4byte	.LVL21
 5909 0137 84000000 		.4byte	.LFE8
 5910 013b 0400     		.2byte	0x4
 5911 013d F3       		.byte	0xf3
 5912 013e 01       		.uleb128 0x1
 5913 013f 51       		.byte	0x51
 5914 0140 9F       		.byte	0x9f
 5915 0141 00000000 		.4byte	0
 5916 0145 00000000 		.4byte	0
 5917              	.LLST11:
 5918 0149 00000000 		.4byte	.LVL20
 5919 014d 13000000 		.4byte	.LVL24-1
 5920 0151 0100     		.2byte	0x1
 5921 0153 52       		.byte	0x52
 5922 0154 13000000 		.4byte	.LVL24-1
 5923 0158 50000000 		.4byte	.LVL29
 5924 015c 0100     		.2byte	0x1
 5925 015e 55       		.byte	0x55
 5926 015f 50000000 		.4byte	.LVL29
 5927 0163 6A000000 		.4byte	.LVL31
 5928 0167 0400     		.2byte	0x4
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 167


 5929 0169 F3       		.byte	0xf3
 5930 016a 01       		.uleb128 0x1
 5931 016b 52       		.byte	0x52
 5932 016c 9F       		.byte	0x9f
 5933 016d 6A000000 		.4byte	.LVL31
 5934 0171 74000000 		.4byte	.LVL33
 5935 0175 0100     		.2byte	0x1
 5936 0177 55       		.byte	0x55
 5937 0178 74000000 		.4byte	.LVL33
 5938 017c 84000000 		.4byte	.LFE8
 5939 0180 0400     		.2byte	0x4
 5940 0182 F3       		.byte	0xf3
 5941 0183 01       		.uleb128 0x1
 5942 0184 52       		.byte	0x52
 5943 0185 9F       		.byte	0x9f
 5944 0186 00000000 		.4byte	0
 5945 018a 00000000 		.4byte	0
 5946              	.LLST12:
 5947 018e 10000000 		.4byte	.LVL23
 5948 0192 46000000 		.4byte	.LVL26
 5949 0196 0200     		.2byte	0x2
 5950 0198 30       		.byte	0x30
 5951 0199 9F       		.byte	0x9f
 5952 019a 46000000 		.4byte	.LVL26
 5953 019e 48000000 		.4byte	.LVL27
 5954 01a2 0200     		.2byte	0x2
 5955 01a4 31       		.byte	0x31
 5956 01a5 9F       		.byte	0x9f
 5957 01a6 48000000 		.4byte	.LVL27
 5958 01aa 7E000000 		.4byte	.LVL35
 5959 01ae 0200     		.2byte	0x2
 5960 01b0 30       		.byte	0x30
 5961 01b1 9F       		.byte	0x9f
 5962 01b2 00000000 		.4byte	0
 5963 01b6 00000000 		.4byte	0
 5964              	.LLST13:
 5965 01ba 14000000 		.4byte	.LVL24
 5966 01be 33000000 		.4byte	.LVL25-1
 5967 01c2 0100     		.2byte	0x1
 5968 01c4 50       		.byte	0x50
 5969 01c5 4C000000 		.4byte	.LVL28
 5970 01c9 6A000000 		.4byte	.LVL31
 5971 01cd 0100     		.2byte	0x1
 5972 01cf 50       		.byte	0x50
 5973 01d0 6E000000 		.4byte	.LVL32
 5974 01d4 7D000000 		.4byte	.LVL35-1
 5975 01d8 0100     		.2byte	0x1
 5976 01da 50       		.byte	0x50
 5977 01db 00000000 		.4byte	0
 5978 01df 00000000 		.4byte	0
 5979              	.LLST14:
 5980 01e3 10000000 		.4byte	.LVL23
 5981 01e7 46000000 		.4byte	.LVL26
 5982 01eb 0100     		.2byte	0x1
 5983 01ed 54       		.byte	0x54
 5984 01ee 46000000 		.4byte	.LVL26
 5985 01f2 48000000 		.4byte	.LVL27
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 168


 5986 01f6 0300     		.2byte	0x3
 5987 01f8 74       		.byte	0x74
 5988 01f9 1C       		.sleb128 28
 5989 01fa 9F       		.byte	0x9f
 5990 01fb 48000000 		.4byte	.LVL27
 5991 01ff 60000000 		.4byte	.LVL30
 5992 0203 0100     		.2byte	0x1
 5993 0205 54       		.byte	0x54
 5994 0206 6A000000 		.4byte	.LVL31
 5995 020a 7A000000 		.4byte	.LVL34
 5996 020e 0100     		.2byte	0x1
 5997 0210 54       		.byte	0x54
 5998 0211 00000000 		.4byte	0
 5999 0215 00000000 		.4byte	0
 6000              	.LLST15:
 6001 0219 00000000 		.4byte	.LVL36
 6002 021d 1A000000 		.4byte	.LVL40
 6003 0221 0100     		.2byte	0x1
 6004 0223 50       		.byte	0x50
 6005 0224 1A000000 		.4byte	.LVL40
 6006 0228 70000000 		.4byte	.LFE11
 6007 022c 0400     		.2byte	0x4
 6008 022e F3       		.byte	0xf3
 6009 022f 01       		.uleb128 0x1
 6010 0230 50       		.byte	0x50
 6011 0231 9F       		.byte	0x9f
 6012 0232 00000000 		.4byte	0
 6013 0236 00000000 		.4byte	0
 6014              	.LLST16:
 6015 023a 18000000 		.4byte	.LVL39
 6016 023e 1A000000 		.4byte	.LVL40
 6017 0242 0200     		.2byte	0x2
 6018 0244 30       		.byte	0x30
 6019 0245 9F       		.byte	0x9f
 6020 0246 00000000 		.4byte	0
 6021 024a 00000000 		.4byte	0
 6022              	.LLST17:
 6023 024e 0A000000 		.4byte	.LVL37
 6024 0252 0E000000 		.4byte	.LVL38
 6025 0256 0200     		.2byte	0x2
 6026 0258 30       		.byte	0x30
 6027 0259 9F       		.byte	0x9f
 6028 025a 18000000 		.4byte	.LVL39
 6029 025e 64000000 		.4byte	.LVL59
 6030 0262 0100     		.2byte	0x1
 6031 0264 56       		.byte	0x56
 6032 0265 00000000 		.4byte	0
 6033 0269 00000000 		.4byte	0
 6034              	.LLST18:
 6035 026d 0A000000 		.4byte	.LVL37
 6036 0271 0E000000 		.4byte	.LVL38
 6037 0275 0200     		.2byte	0x2
 6038 0277 35       		.byte	0x35
 6039 0278 9F       		.byte	0x9f
 6040 0279 18000000 		.4byte	.LVL39
 6041 027d 64000000 		.4byte	.LVL58
 6042 0281 0100     		.2byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 169


 6043 0283 55       		.byte	0x55
 6044 0284 00000000 		.4byte	0
 6045 0288 00000000 		.4byte	0
 6046              	.LLST19:
 6047 028c 36000000 		.4byte	.LVL46
 6048 0290 46000000 		.4byte	.LVL49
 6049 0294 0100     		.2byte	0x1
 6050 0296 52       		.byte	0x52
 6051 0297 46000000 		.4byte	.LVL49
 6052 029b 4E000000 		.4byte	.LVL51
 6053 029f 0300     		.2byte	0x3
 6054 02a1 74       		.byte	0x74
 6055 02a2 00       		.sleb128 0
 6056 02a3 06       		.byte	0x6
 6057 02a4 52000000 		.4byte	.LVL52
 6058 02a8 5B000000 		.4byte	.LVL55-1
 6059 02ac 0100     		.2byte	0x1
 6060 02ae 53       		.byte	0x53
 6061 02af 00000000 		.4byte	0
 6062 02b3 00000000 		.4byte	0
 6063              	.LLST20:
 6064 02b7 2A000000 		.4byte	.LVL44
 6065 02bb 52000000 		.4byte	.LVL52
 6066 02bf 0100     		.2byte	0x1
 6067 02c1 53       		.byte	0x53
 6068 02c2 52000000 		.4byte	.LVL52
 6069 02c6 58000000 		.4byte	.LVL54
 6070 02ca 0300     		.2byte	0x3
 6071 02cc 74       		.byte	0x74
 6072 02cd 7C       		.sleb128 -4
 6073 02ce 06       		.byte	0x6
 6074 02cf 00000000 		.4byte	0
 6075 02d3 00000000 		.4byte	0
 6076              	.LLST21:
 6077 02d7 1A000000 		.4byte	.LVL40
 6078 02db 24000000 		.4byte	.LVL43
 6079 02df 0300     		.2byte	0x3
 6080 02e1 74       		.byte	0x74
 6081 02e2 7C       		.sleb128 -4
 6082 02e3 9F       		.byte	0x9f
 6083 02e4 24000000 		.4byte	.LVL43
 6084 02e8 2A000000 		.4byte	.LVL44
 6085 02ec 0100     		.2byte	0x1
 6086 02ee 53       		.byte	0x53
 6087 02ef 2A000000 		.4byte	.LVL44
 6088 02f3 5C000000 		.4byte	.LVL55
 6089 02f7 0300     		.2byte	0x3
 6090 02f9 74       		.byte	0x74
 6091 02fa 7C       		.sleb128 -4
 6092 02fb 9F       		.byte	0x9f
 6093 02fc 5C000000 		.4byte	.LVL55
 6094 0300 60000000 		.4byte	.LVL56
 6095 0304 0300     		.2byte	0x3
 6096 0306 74       		.byte	0x74
 6097 0307 18       		.sleb128 24
 6098 0308 9F       		.byte	0x9f
 6099 0309 60000000 		.4byte	.LVL56
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 170


 6100 030d 64000000 		.4byte	.LVL57
 6101 0311 0300     		.2byte	0x3
 6102 0313 74       		.byte	0x74
 6103 0314 7C       		.sleb128 -4
 6104 0315 9F       		.byte	0x9f
 6105 0316 00000000 		.4byte	0
 6106 031a 00000000 		.4byte	0
 6107              	.LLST22:
 6108 031e 14000000 		.4byte	.LVL60
 6109 0322 23000000 		.4byte	.LVL61-1
 6110 0326 0100     		.2byte	0x1
 6111 0328 50       		.byte	0x50
 6112 0329 26000000 		.4byte	.LVL62
 6113 032d 2C000000 		.4byte	.LVL63
 6114 0331 0100     		.2byte	0x1
 6115 0333 50       		.byte	0x50
 6116 0334 4C000000 		.4byte	.LVL64
 6117 0338 4E000000 		.4byte	.LVL65
 6118 033c 0200     		.2byte	0x2
 6119 033e 30       		.byte	0x30
 6120 033f 9F       		.byte	0x9f
 6121 0340 00000000 		.4byte	0
 6122 0344 00000000 		.4byte	0
 6123              	.LLST23:
 6124 0348 00000000 		.4byte	.LVL66
 6125 034c 05000000 		.4byte	.LVL67-1
 6126 0350 0100     		.2byte	0x1
 6127 0352 50       		.byte	0x50
 6128 0353 05000000 		.4byte	.LVL67-1
 6129 0357 08000000 		.4byte	.LFE13
 6130 035b 0400     		.2byte	0x4
 6131 035d F3       		.byte	0xf3
 6132 035e 01       		.uleb128 0x1
 6133 035f 50       		.byte	0x50
 6134 0360 9F       		.byte	0x9f
 6135 0361 00000000 		.4byte	0
 6136 0365 00000000 		.4byte	0
 6137              	.LLST24:
 6138 0369 00000000 		.4byte	.LVL68
 6139 036d 06000000 		.4byte	.LVL69
 6140 0371 0100     		.2byte	0x1
 6141 0373 50       		.byte	0x50
 6142 0374 06000000 		.4byte	.LVL69
 6143 0378 0C000000 		.4byte	.LVL70
 6144 037c 0300     		.2byte	0x3
 6145 037e 70       		.byte	0x70
 6146 037f 01       		.sleb128 1
 6147 0380 9F       		.byte	0x9f
 6148 0381 0C000000 		.4byte	.LVL70
 6149 0385 2C000000 		.4byte	.LFE14
 6150 0389 0400     		.2byte	0x4
 6151 038b F3       		.byte	0xf3
 6152 038c 01       		.uleb128 0x1
 6153 038d 50       		.byte	0x50
 6154 038e 9F       		.byte	0x9f
 6155 038f 00000000 		.4byte	0
 6156 0393 00000000 		.4byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 171


 6157              	.LLST25:
 6158 0397 00000000 		.4byte	.LVL71
 6159 039b 04000000 		.4byte	.LVL72
 6160 039f 0100     		.2byte	0x1
 6161 03a1 50       		.byte	0x50
 6162 03a2 04000000 		.4byte	.LVL72
 6163 03a6 0C000000 		.4byte	.LVL76
 6164 03aa 0300     		.2byte	0x3
 6165 03ac 70       		.byte	0x70
 6166 03ad 01       		.sleb128 1
 6167 03ae 9F       		.byte	0x9f
 6168 03af 0C000000 		.4byte	.LVL76
 6169 03b3 14000000 		.4byte	.LFE15
 6170 03b7 0400     		.2byte	0x4
 6171 03b9 F3       		.byte	0xf3
 6172 03ba 01       		.uleb128 0x1
 6173 03bb 50       		.byte	0x50
 6174 03bc 9F       		.byte	0x9f
 6175 03bd 00000000 		.4byte	0
 6176 03c1 00000000 		.4byte	0
 6177              	.LLST26:
 6178 03c5 06000000 		.4byte	.LVL73
 6179 03c9 08000000 		.4byte	.LVL74
 6180 03cd 0100     		.2byte	0x1
 6181 03cf 53       		.byte	0x53
 6182 03d0 0A000000 		.4byte	.LVL75
 6183 03d4 0C000000 		.4byte	.LVL76
 6184 03d8 0100     		.2byte	0x1
 6185 03da 53       		.byte	0x53
 6186 03db 0C000000 		.4byte	.LVL76
 6187 03df 14000000 		.4byte	.LFE15
 6188 03e3 0100     		.2byte	0x1
 6189 03e5 50       		.byte	0x50
 6190 03e6 00000000 		.4byte	0
 6191 03ea 00000000 		.4byte	0
 6192              	.LLST27:
 6193 03ee 00000000 		.4byte	.LVL77
 6194 03f2 06000000 		.4byte	.LVL78
 6195 03f6 0100     		.2byte	0x1
 6196 03f8 50       		.byte	0x50
 6197 03f9 06000000 		.4byte	.LVL78
 6198 03fd 10000000 		.4byte	.LVL81
 6199 0401 0100     		.2byte	0x1
 6200 0403 54       		.byte	0x54
 6201 0404 10000000 		.4byte	.LVL81
 6202 0408 12000000 		.4byte	.LFE16
 6203 040c 0400     		.2byte	0x4
 6204 040e F3       		.byte	0xf3
 6205 040f 01       		.uleb128 0x1
 6206 0410 50       		.byte	0x50
 6207 0411 9F       		.byte	0x9f
 6208 0412 00000000 		.4byte	0
 6209 0416 00000000 		.4byte	0
 6210              	.LLST28:
 6211 041a 00000000 		.4byte	.LVL77
 6212 041e 09000000 		.4byte	.LVL79-1
 6213 0422 0100     		.2byte	0x1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 172


 6214 0424 51       		.byte	0x51
 6215 0425 09000000 		.4byte	.LVL79-1
 6216 0429 12000000 		.4byte	.LFE16
 6217 042d 0400     		.2byte	0x4
 6218 042f F3       		.byte	0xf3
 6219 0430 01       		.uleb128 0x1
 6220 0431 51       		.byte	0x51
 6221 0432 9F       		.byte	0x9f
 6222 0433 00000000 		.4byte	0
 6223 0437 00000000 		.4byte	0
 6224              	.LLST29:
 6225 043b 00000000 		.4byte	.LVL82
 6226 043f 08000000 		.4byte	.LVL83
 6227 0443 0100     		.2byte	0x1
 6228 0445 50       		.byte	0x50
 6229 0446 08000000 		.4byte	.LVL83
 6230 044a 0A000000 		.4byte	.LVL84
 6231 044e 0400     		.2byte	0x4
 6232 0450 F3       		.byte	0xf3
 6233 0451 01       		.uleb128 0x1
 6234 0452 50       		.byte	0x50
 6235 0453 9F       		.byte	0x9f
 6236 0454 0A000000 		.4byte	.LVL84
 6237 0458 0F000000 		.4byte	.LVL85-1
 6238 045c 0100     		.2byte	0x1
 6239 045e 50       		.byte	0x50
 6240 045f 0F000000 		.4byte	.LVL85-1
 6241 0463 12000000 		.4byte	.LFE17
 6242 0467 0400     		.2byte	0x4
 6243 0469 F3       		.byte	0xf3
 6244 046a 01       		.uleb128 0x1
 6245 046b 50       		.byte	0x50
 6246 046c 9F       		.byte	0x9f
 6247 046d 00000000 		.4byte	0
 6248 0471 00000000 		.4byte	0
 6249              	.LLST30:
 6250 0475 00000000 		.4byte	.LVL82
 6251 0479 10000000 		.4byte	.LVL85
 6252 047d 0200     		.2byte	0x2
 6253 047f 30       		.byte	0x30
 6254 0480 9F       		.byte	0x9f
 6255 0481 00000000 		.4byte	0
 6256 0485 00000000 		.4byte	0
 6257              	.LLST31:
 6258 0489 0A000000 		.4byte	.LVL84
 6259 048d 0F000000 		.4byte	.LVL85-1
 6260 0491 0100     		.2byte	0x1
 6261 0493 50       		.byte	0x50
 6262 0494 0F000000 		.4byte	.LVL85-1
 6263 0498 10000000 		.4byte	.LVL85
 6264 049c 0400     		.2byte	0x4
 6265 049e F3       		.byte	0xf3
 6266 049f 01       		.uleb128 0x1
 6267 04a0 50       		.byte	0x50
 6268 04a1 9F       		.byte	0x9f
 6269 04a2 00000000 		.4byte	0
 6270 04a6 00000000 		.4byte	0
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 173


 6271              	.LLST32:
 6272 04aa 00000000 		.4byte	.LVL86
 6273 04ae 06000000 		.4byte	.LVL87
 6274 04b2 0200     		.2byte	0x2
 6275 04b4 30       		.byte	0x30
 6276 04b5 9F       		.byte	0x9f
 6277 04b6 06000000 		.4byte	.LVL87
 6278 04ba 16000000 		.4byte	.LVL92
 6279 04be 0100     		.2byte	0x1
 6280 04c0 55       		.byte	0x55
 6281 04c1 16000000 		.4byte	.LVL92
 6282 04c5 18000000 		.4byte	.LFE18
 6283 04c9 0100     		.2byte	0x1
 6284 04cb 50       		.byte	0x50
 6285 04cc 00000000 		.4byte	0
 6286 04d0 00000000 		.4byte	0
 6287              	.LLST33:
 6288 04d4 00000000 		.4byte	.LVL86
 6289 04d8 06000000 		.4byte	.LVL87
 6290 04dc 0200     		.2byte	0x2
 6291 04de 30       		.byte	0x30
 6292 04df 9F       		.byte	0x9f
 6293 04e0 06000000 		.4byte	.LVL87
 6294 04e4 0E000000 		.4byte	.LVL89
 6295 04e8 0100     		.2byte	0x1
 6296 04ea 54       		.byte	0x54
 6297 04eb 0E000000 		.4byte	.LVL89
 6298 04ef 10000000 		.4byte	.LVL90
 6299 04f3 0300     		.2byte	0x3
 6300 04f5 74       		.byte	0x74
 6301 04f6 7F       		.sleb128 -1
 6302 04f7 9F       		.byte	0x9f
 6303 04f8 10000000 		.4byte	.LVL90
 6304 04fc 16000000 		.4byte	.LVL91
 6305 0500 0100     		.2byte	0x1
 6306 0502 54       		.byte	0x54
 6307 0503 00000000 		.4byte	0
 6308 0507 00000000 		.4byte	0
 6309              	.LLST34:
 6310 050b 00000000 		.4byte	.LVL93
 6311 050f 04000000 		.4byte	.LVL94
 6312 0513 0100     		.2byte	0x1
 6313 0515 50       		.byte	0x50
 6314 0516 04000000 		.4byte	.LVL94
 6315 051a 10000000 		.4byte	.LFE25
 6316 051e 0400     		.2byte	0x4
 6317 0520 F3       		.byte	0xf3
 6318 0521 01       		.uleb128 0x1
 6319 0522 50       		.byte	0x50
 6320 0523 9F       		.byte	0x9f
 6321 0524 00000000 		.4byte	0
 6322 0528 00000000 		.4byte	0
 6323              	.LLST35:
 6324 052c 00000000 		.4byte	.LVL95
 6325 0530 14000000 		.4byte	.LVL97
 6326 0534 0100     		.2byte	0x1
 6327 0536 50       		.byte	0x50
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 174


 6328 0537 14000000 		.4byte	.LVL97
 6329 053b 20000000 		.4byte	.LFE26
 6330 053f 0400     		.2byte	0x4
 6331 0541 F3       		.byte	0xf3
 6332 0542 01       		.uleb128 0x1
 6333 0543 50       		.byte	0x50
 6334 0544 9F       		.byte	0x9f
 6335 0545 00000000 		.4byte	0
 6336 0549 00000000 		.4byte	0
 6337              	.LLST36:
 6338 054d 00000000 		.4byte	.LVL95
 6339 0551 06000000 		.4byte	.LVL96
 6340 0555 0100     		.2byte	0x1
 6341 0557 51       		.byte	0x51
 6342 0558 06000000 		.4byte	.LVL96
 6343 055c 20000000 		.4byte	.LFE26
 6344 0560 0400     		.2byte	0x4
 6345 0562 F3       		.byte	0xf3
 6346 0563 01       		.uleb128 0x1
 6347 0564 51       		.byte	0x51
 6348 0565 9F       		.byte	0x9f
 6349 0566 00000000 		.4byte	0
 6350 056a 00000000 		.4byte	0
 6351              	.LLST37:
 6352 056e 00000000 		.4byte	.LVL99
 6353 0572 06000000 		.4byte	.LVL100
 6354 0576 0100     		.2byte	0x1
 6355 0578 50       		.byte	0x50
 6356 0579 06000000 		.4byte	.LVL100
 6357 057d BC000000 		.4byte	.LFE22
 6358 0581 0400     		.2byte	0x4
 6359 0583 F3       		.byte	0xf3
 6360 0584 01       		.uleb128 0x1
 6361 0585 50       		.byte	0x50
 6362 0586 9F       		.byte	0x9f
 6363 0587 00000000 		.4byte	0
 6364 058b 00000000 		.4byte	0
 6365              	.LLST38:
 6366 058f 00000000 		.4byte	.LVL99
 6367 0593 10000000 		.4byte	.LVL102
 6368 0597 0100     		.2byte	0x1
 6369 0599 51       		.byte	0x51
 6370 059a 10000000 		.4byte	.LVL102
 6371 059e A6000000 		.4byte	.LVL126
 6372 05a2 0100     		.2byte	0x1
 6373 05a4 54       		.byte	0x54
 6374 05a5 A6000000 		.4byte	.LVL126
 6375 05a9 A8000000 		.4byte	.LVL128
 6376 05ad 0400     		.2byte	0x4
 6377 05af F3       		.byte	0xf3
 6378 05b0 01       		.uleb128 0x1
 6379 05b1 51       		.byte	0x51
 6380 05b2 9F       		.byte	0x9f
 6381 05b3 A8000000 		.4byte	.LVL128
 6382 05b7 BC000000 		.4byte	.LFE22
 6383 05bb 0100     		.2byte	0x1
 6384 05bd 54       		.byte	0x54
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 175


 6385 05be 00000000 		.4byte	0
 6386 05c2 00000000 		.4byte	0
 6387              	.LLST39:
 6388 05c6 7C000000 		.4byte	.LVL117
 6389 05ca 82000000 		.4byte	.LVL118
 6390 05ce 0100     		.2byte	0x1
 6391 05d0 50       		.byte	0x50
 6392 05d1 82000000 		.4byte	.LVL118
 6393 05d5 A0000000 		.4byte	.LVL125
 6394 05d9 0100     		.2byte	0x1
 6395 05db 55       		.byte	0x55
 6396 05dc 00000000 		.4byte	0
 6397 05e0 00000000 		.4byte	0
 6398              	.LLST40:
 6399 05e4 1A000000 		.4byte	.LVL104
 6400 05e8 29000000 		.4byte	.LVL105-1
 6401 05ec 0100     		.2byte	0x1
 6402 05ee 50       		.byte	0x50
 6403 05ef 29000000 		.4byte	.LVL105-1
 6404 05f3 32000000 		.4byte	.LVL106
 6405 05f7 0100     		.2byte	0x1
 6406 05f9 57       		.byte	0x57
 6407 05fa 32000000 		.4byte	.LVL106
 6408 05fe 3A000000 		.4byte	.LVL107
 6409 0602 0100     		.2byte	0x1
 6410 0604 50       		.byte	0x50
 6411 0605 3A000000 		.4byte	.LVL107
 6412 0609 4A000000 		.4byte	.LVL109
 6413 060d 0100     		.2byte	0x1
 6414 060f 57       		.byte	0x57
 6415 0610 4A000000 		.4byte	.LVL109
 6416 0614 4E000000 		.4byte	.LVL110
 6417 0618 0100     		.2byte	0x1
 6418 061a 50       		.byte	0x50
 6419 061b 4E000000 		.4byte	.LVL110
 6420 061f 5E000000 		.4byte	.LVL112
 6421 0623 0100     		.2byte	0x1
 6422 0625 57       		.byte	0x57
 6423 0626 5E000000 		.4byte	.LVL112
 6424 062a 62000000 		.4byte	.LVL113
 6425 062e 0100     		.2byte	0x1
 6426 0630 50       		.byte	0x50
 6427 0631 62000000 		.4byte	.LVL113
 6428 0635 A6000000 		.4byte	.LVL127
 6429 0639 0100     		.2byte	0x1
 6430 063b 57       		.byte	0x57
 6431 063c A8000000 		.4byte	.LVL128
 6432 0640 BC000000 		.4byte	.LFE22
 6433 0644 0100     		.2byte	0x1
 6434 0646 57       		.byte	0x57
 6435 0647 00000000 		.4byte	0
 6436 064b 00000000 		.4byte	0
 6437              	.LLST41:
 6438 064f 00000000 		.4byte	.LVL99
 6439 0653 06000000 		.4byte	.LVL100
 6440 0657 0100     		.2byte	0x1
 6441 0659 50       		.byte	0x50
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 176


 6442 065a 06000000 		.4byte	.LVL100
 6443 065e 0E000000 		.4byte	.LVL101
 6444 0662 0400     		.2byte	0x4
 6445 0664 F3       		.byte	0xf3
 6446 0665 01       		.uleb128 0x1
 6447 0666 50       		.byte	0x50
 6448 0667 9F       		.byte	0x9f
 6449 0668 00000000 		.4byte	0
 6450 066c 00000000 		.4byte	0
 6451              	.LLST42:
 6452 0670 1A000000 		.4byte	.LVL104
 6453 0674 29000000 		.4byte	.LVL105-1
 6454 0678 0100     		.2byte	0x1
 6455 067a 50       		.byte	0x50
 6456 067b 29000000 		.4byte	.LVL105-1
 6457 067f 32000000 		.4byte	.LVL106
 6458 0683 0100     		.2byte	0x1
 6459 0685 57       		.byte	0x57
 6460 0686 32000000 		.4byte	.LVL106
 6461 068a 3A000000 		.4byte	.LVL107
 6462 068e 0100     		.2byte	0x1
 6463 0690 50       		.byte	0x50
 6464 0691 3A000000 		.4byte	.LVL107
 6465 0695 4A000000 		.4byte	.LVL109
 6466 0699 0100     		.2byte	0x1
 6467 069b 57       		.byte	0x57
 6468 069c 4A000000 		.4byte	.LVL109
 6469 06a0 4E000000 		.4byte	.LVL110
 6470 06a4 0100     		.2byte	0x1
 6471 06a6 50       		.byte	0x50
 6472 06a7 4E000000 		.4byte	.LVL110
 6473 06ab 5E000000 		.4byte	.LVL112
 6474 06af 0100     		.2byte	0x1
 6475 06b1 57       		.byte	0x57
 6476 06b2 5E000000 		.4byte	.LVL112
 6477 06b6 62000000 		.4byte	.LVL113
 6478 06ba 0100     		.2byte	0x1
 6479 06bc 50       		.byte	0x50
 6480 06bd 62000000 		.4byte	.LVL113
 6481 06c1 6E000000 		.4byte	.LVL115
 6482 06c5 0100     		.2byte	0x1
 6483 06c7 57       		.byte	0x57
 6484 06c8 A8000000 		.4byte	.LVL128
 6485 06cc AA000000 		.4byte	.LVL129
 6486 06d0 0100     		.2byte	0x1
 6487 06d2 57       		.byte	0x57
 6488 06d3 00000000 		.4byte	0
 6489 06d7 00000000 		.4byte	0
 6490              	.LLST43:
 6491 06db 1A000000 		.4byte	.LVL104
 6492 06df 6E000000 		.4byte	.LVL115
 6493 06e3 0100     		.2byte	0x1
 6494 06e5 56       		.byte	0x56
 6495 06e6 A8000000 		.4byte	.LVL128
 6496 06ea AA000000 		.4byte	.LVL129
 6497 06ee 0100     		.2byte	0x1
 6498 06f0 56       		.byte	0x56
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 177


 6499 06f1 00000000 		.4byte	0
 6500 06f5 00000000 		.4byte	0
 6501              	.LLST44:
 6502 06f9 1A000000 		.4byte	.LVL104
 6503 06fd 6E000000 		.4byte	.LVL115
 6504 0701 0200     		.2byte	0x2
 6505 0703 30       		.byte	0x30
 6506 0704 9F       		.byte	0x9f
 6507 0705 A8000000 		.4byte	.LVL128
 6508 0709 AA000000 		.4byte	.LVL129
 6509 070d 0200     		.2byte	0x2
 6510 070f 30       		.byte	0x30
 6511 0710 9F       		.byte	0x9f
 6512 0711 00000000 		.4byte	0
 6513 0715 00000000 		.4byte	0
 6514              	.LLST46:
 6515 0719 7C000000 		.4byte	.LVL117
 6516 071d A0000000 		.4byte	.LVL125
 6517 0721 0100     		.2byte	0x1
 6518 0723 56       		.byte	0x56
 6519 0724 00000000 		.4byte	0
 6520 0728 00000000 		.4byte	0
 6521              	.LLST47:
 6522 072c 8C000000 		.4byte	.LVL119
 6523 0730 8E000000 		.4byte	.LVL120
 6524 0734 0200     		.2byte	0x2
 6525 0736 30       		.byte	0x30
 6526 0737 9F       		.byte	0x9f
 6527 0738 8E000000 		.4byte	.LVL120
 6528 073c A0000000 		.4byte	.LVL125
 6529 0740 0100     		.2byte	0x1
 6530 0742 53       		.byte	0x53
 6531 0743 00000000 		.4byte	0
 6532 0747 00000000 		.4byte	0
 6533              	.LLST48:
 6534 074b 82000000 		.4byte	.LVL118
 6535 074f A0000000 		.4byte	.LVL125
 6536 0753 0200     		.2byte	0x2
 6537 0755 40       		.byte	0x40
 6538 0756 9F       		.byte	0x9f
 6539 0757 00000000 		.4byte	0
 6540 075b 00000000 		.4byte	0
 6541              	.LLST49:
 6542 075f 8C000000 		.4byte	.LVL119
 6543 0763 9A000000 		.4byte	.LVL123
 6544 0767 0100     		.2byte	0x1
 6545 0769 50       		.byte	0x50
 6546 076a 9A000000 		.4byte	.LVL123
 6547 076e 9E000000 		.4byte	.LVL124
 6548 0772 0300     		.2byte	0x3
 6549 0774 70       		.byte	0x70
 6550 0775 0A       		.sleb128 10
 6551 0776 9F       		.byte	0x9f
 6552 0777 00000000 		.4byte	0
 6553 077b 00000000 		.4byte	0
 6554              	.LLST50:
 6555 077f 00000000 		.4byte	.LVL130
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 178


 6556 0783 18000000 		.4byte	.LVL132
 6557 0787 0100     		.2byte	0x1
 6558 0789 50       		.byte	0x50
 6559 078a 18000000 		.4byte	.LVL132
 6560 078e F2000000 		.4byte	.LVL157
 6561 0792 0100     		.2byte	0x1
 6562 0794 56       		.byte	0x56
 6563 0795 F2000000 		.4byte	.LVL157
 6564 0799 14010000 		.4byte	.LFE19
 6565 079d 0400     		.2byte	0x4
 6566 079f F3       		.byte	0xf3
 6567 07a0 01       		.uleb128 0x1
 6568 07a1 50       		.byte	0x50
 6569 07a2 9F       		.byte	0x9f
 6570 07a3 00000000 		.4byte	0
 6571 07a7 00000000 		.4byte	0
 6572              	.LLST51:
 6573 07ab 00000000 		.4byte	.LVL130
 6574 07af BA000000 		.4byte	.LVL149
 6575 07b3 0200     		.2byte	0x2
 6576 07b5 30       		.byte	0x30
 6577 07b6 9F       		.byte	0x9f
 6578 07b7 BA000000 		.4byte	.LVL149
 6579 07bb EE000000 		.4byte	.LVL154
 6580 07bf 0100     		.2byte	0x1
 6581 07c1 57       		.byte	0x57
 6582 07c2 EE000000 		.4byte	.LVL154
 6583 07c6 F0000000 		.4byte	.LVL155
 6584 07ca 0600     		.2byte	0x6
 6585 07cc 77       		.byte	0x77
 6586 07cd 00       		.sleb128 0
 6587 07ce 70       		.byte	0x70
 6588 07cf 00       		.sleb128 0
 6589 07d0 21       		.byte	0x21
 6590 07d1 9F       		.byte	0x9f
 6591 07d2 F0000000 		.4byte	.LVL155
 6592 07d6 14010000 		.4byte	.LFE19
 6593 07da 0100     		.2byte	0x1
 6594 07dc 50       		.byte	0x50
 6595 07dd 00000000 		.4byte	0
 6596 07e1 00000000 		.4byte	0
 6597              	.LLST52:
 6598 07e5 4E000000 		.4byte	.LVL136
 6599 07e9 56000000 		.4byte	.LVL137
 6600 07ed 0200     		.2byte	0x2
 6601 07ef 30       		.byte	0x30
 6602 07f0 9F       		.byte	0x9f
 6603 07f1 56000000 		.4byte	.LVL137
 6604 07f5 6C000000 		.4byte	.LVL141
 6605 07f9 0100     		.2byte	0x1
 6606 07fb 51       		.byte	0x51
 6607 07fc 6C000000 		.4byte	.LVL141
 6608 0800 70000000 		.4byte	.LVL142
 6609 0804 0300     		.2byte	0x3
 6610 0806 71       		.byte	0x71
 6611 0807 7F       		.sleb128 -1
 6612 0808 9F       		.byte	0x9f
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 179


 6613 0809 70000000 		.4byte	.LVL142
 6614 080d 74000000 		.4byte	.LVL144
 6615 0811 0100     		.2byte	0x1
 6616 0813 51       		.byte	0x51
 6617 0814 00000000 		.4byte	0
 6618 0818 00000000 		.4byte	0
 6619              	.LLST53:
 6620 081c 28000000 		.4byte	.LVL134
 6621 0820 3F000000 		.4byte	.LVL135-1
 6622 0824 0100     		.2byte	0x1
 6623 0826 50       		.byte	0x50
 6624 0827 00000000 		.4byte	0
 6625 082b 00000000 		.4byte	0
 6626              	.LLST54:
 6627 082f 28000000 		.4byte	.LVL134
 6628 0833 3F000000 		.4byte	.LVL135-1
 6629 0837 1100     		.2byte	0x11
 6630 0839 70       		.byte	0x70
 6631 083a 00       		.sleb128 0
 6632 083b 0A       		.byte	0xa
 6633 083c E803     		.2byte	0x3e8
 6634 083e 1E       		.byte	0x1e
 6635 083f F7       		.byte	0xf7
 6636 0840 25       		.uleb128 0x25
 6637 0841 0A       		.byte	0xa
 6638 0842 7017     		.2byte	0x1770
 6639 0844 F7       		.byte	0xf7
 6640 0845 25       		.uleb128 0x25
 6641 0846 1B       		.byte	0x1b
 6642 0847 F7       		.byte	0xf7
 6643 0848 00       		.uleb128 0
 6644 0849 9F       		.byte	0x9f
 6645 084a 00000000 		.4byte	0
 6646 084e 00000000 		.4byte	0
 6647              	.LLST55:
 6648 0852 00000000 		.4byte	.LVL130
 6649 0856 56000000 		.4byte	.LVL137
 6650 085a 0200     		.2byte	0x2
 6651 085c 30       		.byte	0x30
 6652 085d 9F       		.byte	0x9f
 6653 085e 56000000 		.4byte	.LVL137
 6654 0862 97000000 		.4byte	.LVL147-1
 6655 0866 0100     		.2byte	0x1
 6656 0868 52       		.byte	0x52
 6657 0869 00000000 		.4byte	0
 6658 086d 00000000 		.4byte	0
 6659              	.LLST56:
 6660 0871 00000000 		.4byte	.LVL130
 6661 0875 A0000000 		.4byte	.LVL148
 6662 0879 0200     		.2byte	0x2
 6663 087b 30       		.byte	0x30
 6664 087c 9F       		.byte	0x9f
 6665 087d A0000000 		.4byte	.LVL148
 6666 0881 BE000000 		.4byte	.LVL150
 6667 0885 0100     		.2byte	0x1
 6668 0887 50       		.byte	0x50
 6669 0888 BE000000 		.4byte	.LVL150
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 180


 6670 088c C1000000 		.4byte	.LVL151-1
 6671 0890 0200     		.2byte	0x2
 6672 0892 74       		.byte	0x74
 6673 0893 00       		.sleb128 0
 6674 0894 00000000 		.4byte	0
 6675 0898 00000000 		.4byte	0
 6676              	.LLST57:
 6677 089c 00000000 		.4byte	.LVL130
 6678 08a0 56000000 		.4byte	.LVL137
 6679 08a4 0200     		.2byte	0x2
 6680 08a6 30       		.byte	0x30
 6681 08a7 9F       		.byte	0x9f
 6682 08a8 56000000 		.4byte	.LVL137
 6683 08ac 62000000 		.4byte	.LVL138
 6684 08b0 0100     		.2byte	0x1
 6685 08b2 53       		.byte	0x53
 6686 08b3 62000000 		.4byte	.LVL138
 6687 08b7 68000000 		.4byte	.LVL140
 6688 08bb 0100     		.2byte	0x1
 6689 08bd 50       		.byte	0x50
 6690 08be 68000000 		.4byte	.LVL140
 6691 08c2 7A000000 		.4byte	.LVL145
 6692 08c6 0100     		.2byte	0x1
 6693 08c8 53       		.byte	0x53
 6694 08c9 00000000 		.4byte	0
 6695 08cd 00000000 		.4byte	0
 6696              	.LLST58:
 6697 08d1 08000000 		.4byte	.LVL131
 6698 08d5 56000000 		.4byte	.LVL137
 6699 08d9 0100     		.2byte	0x1
 6700 08db 57       		.byte	0x57
 6701 08dc 00000000 		.4byte	0
 6702 08e0 00000000 		.4byte	0
 6703              	.LLST59:
 6704 08e4 28000000 		.4byte	.LVL134
 6705 08e8 F2000000 		.4byte	.LVL156
 6706 08ec 0100     		.2byte	0x1
 6707 08ee 55       		.byte	0x55
 6708 08ef F2000000 		.4byte	.LVL157
 6709 08f3 14010000 		.4byte	.LFE19
 6710 08f7 0600     		.2byte	0x6
 6711 08f9 91       		.byte	0x91
 6712 08fa 40       		.sleb128 -64
 6713 08fb 06       		.byte	0x6
 6714 08fc 3C       		.byte	0x3c
 6715 08fd 1C       		.byte	0x1c
 6716 08fe 9F       		.byte	0x9f
 6717 08ff 00000000 		.4byte	0
 6718 0903 00000000 		.4byte	0
 6719              	.LLST60:
 6720 0907 28000000 		.4byte	.LVL134
 6721 090b 56000000 		.4byte	.LVL137
 6722 090f 0200     		.2byte	0x2
 6723 0911 77       		.byte	0x77
 6724 0912 08       		.sleb128 8
 6725 0913 56000000 		.4byte	.LVL137
 6726 0917 70000000 		.4byte	.LVL142
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 181


 6727 091b 0200     		.2byte	0x2
 6728 091d 7D       		.byte	0x7d
 6729 091e 00       		.sleb128 0
 6730 091f 70000000 		.4byte	.LVL142
 6731 0923 72000000 		.4byte	.LVL143
 6732 0927 0100     		.2byte	0x1
 6733 0929 50       		.byte	0x50
 6734 092a 72000000 		.4byte	.LVL143
 6735 092e 92000000 		.4byte	.LVL146
 6736 0932 0200     		.2byte	0x2
 6737 0934 7D       		.byte	0x7d
 6738 0935 00       		.sleb128 0
 6739 0936 00000000 		.4byte	0
 6740 093a 00000000 		.4byte	0
 6741              	.LLST61:
 6742 093e 00000000 		.4byte	.LVL158
 6743 0942 06000000 		.4byte	.LVL159
 6744 0946 0200     		.2byte	0x2
 6745 0948 30       		.byte	0x30
 6746 0949 9F       		.byte	0x9f
 6747 094a 06000000 		.4byte	.LVL159
 6748 094e 16000000 		.4byte	.LVL164
 6749 0952 0100     		.2byte	0x1
 6750 0954 55       		.byte	0x55
 6751 0955 16000000 		.4byte	.LVL164
 6752 0959 18000000 		.4byte	.LFE20
 6753 095d 0100     		.2byte	0x1
 6754 095f 50       		.byte	0x50
 6755 0960 00000000 		.4byte	0
 6756 0964 00000000 		.4byte	0
 6757              	.LLST62:
 6758 0968 00000000 		.4byte	.LVL158
 6759 096c 06000000 		.4byte	.LVL159
 6760 0970 0200     		.2byte	0x2
 6761 0972 30       		.byte	0x30
 6762 0973 9F       		.byte	0x9f
 6763 0974 06000000 		.4byte	.LVL159
 6764 0978 0E000000 		.4byte	.LVL161
 6765 097c 0100     		.2byte	0x1
 6766 097e 54       		.byte	0x54
 6767 097f 0E000000 		.4byte	.LVL161
 6768 0983 10000000 		.4byte	.LVL162
 6769 0987 0300     		.2byte	0x3
 6770 0989 74       		.byte	0x74
 6771 098a 7F       		.sleb128 -1
 6772 098b 9F       		.byte	0x9f
 6773 098c 10000000 		.4byte	.LVL162
 6774 0990 16000000 		.4byte	.LVL163
 6775 0994 0100     		.2byte	0x1
 6776 0996 54       		.byte	0x54
 6777 0997 00000000 		.4byte	0
 6778 099b 00000000 		.4byte	0
 6779              	.LLST63:
 6780 099f 00000000 		.4byte	.LVL165
 6781 09a3 04000000 		.4byte	.LVL166
 6782 09a7 0200     		.2byte	0x2
 6783 09a9 30       		.byte	0x30
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 182


 6784 09aa 9F       		.byte	0x9f
 6785 09ab 04000000 		.4byte	.LVL166
 6786 09af 10000000 		.4byte	.LVL167
 6787 09b3 0100     		.2byte	0x1
 6788 09b5 54       		.byte	0x54
 6789 09b6 10000000 		.4byte	.LVL167
 6790 09ba 13000000 		.4byte	.LVL168-1
 6791 09be 0100     		.2byte	0x1
 6792 09c0 50       		.byte	0x50
 6793 09c1 13000000 		.4byte	.LVL168-1
 6794 09c5 14000000 		.4byte	.LVL168
 6795 09c9 0300     		.2byte	0x3
 6796 09cb 74       		.byte	0x74
 6797 09cc 7F       		.sleb128 -1
 6798 09cd 9F       		.byte	0x9f
 6799 09ce 14000000 		.4byte	.LVL168
 6800 09d2 18000000 		.4byte	.LVL169
 6801 09d6 0100     		.2byte	0x1
 6802 09d8 54       		.byte	0x54
 6803 09d9 00000000 		.4byte	0
 6804 09dd 00000000 		.4byte	0
 6805              	.LLST64:
 6806 09e1 00000000 		.4byte	.LVL170
 6807 09e5 1D000000 		.4byte	.LVL176-1
 6808 09e9 0100     		.2byte	0x1
 6809 09eb 50       		.byte	0x50
 6810 09ec 1D000000 		.4byte	.LVL176-1
 6811 09f0 B8000000 		.4byte	.LFE27
 6812 09f4 0200     		.2byte	0x2
 6813 09f6 91       		.byte	0x91
 6814 09f7 64       		.sleb128 -28
 6815 09f8 00000000 		.4byte	0
 6816 09fc 00000000 		.4byte	0
 6817              	.LLST65:
 6818 0a00 0E000000 		.4byte	.LVL171
 6819 0a04 10000000 		.4byte	.LVL172
 6820 0a08 0700     		.2byte	0x7
 6821 0a0a 73       		.byte	0x73
 6822 0a0b 00       		.sleb128 0
 6823 0a0c 0A       		.byte	0xa
 6824 0a0d 000F     		.2byte	0xf00
 6825 0a0f 1A       		.byte	0x1a
 6826 0a10 9F       		.byte	0x9f
 6827 0a11 10000000 		.4byte	.LVL172
 6828 0a15 A2000000 		.4byte	.LVL205
 6829 0a19 0800     		.2byte	0x8
 6830 0a1b 7D       		.byte	0x7d
 6831 0a1c 00       		.sleb128 0
 6832 0a1d 06       		.byte	0x6
 6833 0a1e 0A       		.byte	0xa
 6834 0a1f 000F     		.2byte	0xf00
 6835 0a21 1A       		.byte	0x1a
 6836 0a22 9F       		.byte	0x9f
 6837 0a23 A2000000 		.4byte	.LVL205
 6838 0a27 B8000000 		.4byte	.LFE27
 6839 0a2b 0800     		.2byte	0x8
 6840 0a2d 91       		.byte	0x91
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 183


 6841 0a2e 58       		.sleb128 -40
 6842 0a2f 06       		.byte	0x6
 6843 0a30 0A       		.byte	0xa
 6844 0a31 000F     		.2byte	0xf00
 6845 0a33 1A       		.byte	0x1a
 6846 0a34 9F       		.byte	0x9f
 6847 0a35 00000000 		.4byte	0
 6848 0a39 00000000 		.4byte	0
 6849              	.LLST66:
 6850 0a3d 14000000 		.4byte	.LVL173
 6851 0a41 16000000 		.4byte	.LVL174
 6852 0a45 0500     		.2byte	0x5
 6853 0a47 73       		.byte	0x73
 6854 0a48 00       		.sleb128 0
 6855 0a49 34       		.byte	0x34
 6856 0a4a 1A       		.byte	0x1a
 6857 0a4b 9F       		.byte	0x9f
 6858 0a4c 16000000 		.4byte	.LVL174
 6859 0a50 B8000000 		.4byte	.LFE27
 6860 0a54 0600     		.2byte	0x6
 6861 0a56 91       		.byte	0x91
 6862 0a57 5C       		.sleb128 -36
 6863 0a58 06       		.byte	0x6
 6864 0a59 34       		.byte	0x34
 6865 0a5a 1A       		.byte	0x1a
 6866 0a5b 9F       		.byte	0x9f
 6867 0a5c 00000000 		.4byte	0
 6868 0a60 00000000 		.4byte	0
 6869              	.LLST67:
 6870 0a64 1A000000 		.4byte	.LVL175
 6871 0a68 1D000000 		.4byte	.LVL176-1
 6872 0a6c 0700     		.2byte	0x7
 6873 0a6e 73       		.byte	0x73
 6874 0a6f 00       		.sleb128 0
 6875 0a70 0A       		.byte	0xa
 6876 0a71 C001     		.2byte	0x1c0
 6877 0a73 1A       		.byte	0x1a
 6878 0a74 9F       		.byte	0x9f
 6879 0a75 1D000000 		.4byte	.LVL176-1
 6880 0a79 B8000000 		.4byte	.LFE27
 6881 0a7d 0800     		.2byte	0x8
 6882 0a7f 91       		.byte	0x91
 6883 0a80 60       		.sleb128 -32
 6884 0a81 06       		.byte	0x6
 6885 0a82 0A       		.byte	0xa
 6886 0a83 C001     		.2byte	0x1c0
 6887 0a85 1A       		.byte	0x1a
 6888 0a86 9F       		.byte	0x9f
 6889 0a87 00000000 		.4byte	0
 6890 0a8b 00000000 		.4byte	0
 6891              	.LLST68:
 6892 0a8f 20000000 		.4byte	.LVL177
 6893 0a93 29000000 		.4byte	.LVL179-1
 6894 0a97 0100     		.2byte	0x1
 6895 0a99 53       		.byte	0x53
 6896 0a9a 32000000 		.4byte	.LVL181
 6897 0a9e 39000000 		.4byte	.LVL183-1
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 184


 6898 0aa2 0100     		.2byte	0x1
 6899 0aa4 53       		.byte	0x53
 6900 0aa5 42000000 		.4byte	.LVL185
 6901 0aa9 4D000000 		.4byte	.LVL188-1
 6902 0aad 0100     		.2byte	0x1
 6903 0aaf 53       		.byte	0x53
 6904 0ab0 5C000000 		.4byte	.LVL191
 6905 0ab4 60000000 		.4byte	.LVL192
 6906 0ab8 0100     		.2byte	0x1
 6907 0aba 53       		.byte	0x53
 6908 0abb 60000000 		.4byte	.LVL192
 6909 0abf 78000000 		.4byte	.LVL196
 6910 0ac3 0100     		.2byte	0x1
 6911 0ac5 54       		.byte	0x54
 6912 0ac6 78000000 		.4byte	.LVL196
 6913 0aca 85000000 		.4byte	.LVL199-1
 6914 0ace 0100     		.2byte	0x1
 6915 0ad0 53       		.byte	0x53
 6916 0ad1 8C000000 		.4byte	.LVL201
 6917 0ad5 92000000 		.4byte	.LVL202
 6918 0ad9 0100     		.2byte	0x1
 6919 0adb 53       		.byte	0x53
 6920 0adc 92000000 		.4byte	.LVL202
 6921 0ae0 9A000000 		.4byte	.LVL203
 6922 0ae4 0100     		.2byte	0x1
 6923 0ae6 52       		.byte	0x52
 6924 0ae7 9A000000 		.4byte	.LVL203
 6925 0aeb 9F000000 		.4byte	.LVL204-1
 6926 0aef 0100     		.2byte	0x1
 6927 0af1 53       		.byte	0x53
 6928 0af2 00000000 		.4byte	0
 6929 0af6 00000000 		.4byte	0
 6930              	.LLST69:
 6931 0afa 1E000000 		.4byte	.LVL176
 6932 0afe 29000000 		.4byte	.LVL179-1
 6933 0b02 0100     		.2byte	0x1
 6934 0b04 50       		.byte	0x50
 6935 0b05 2E000000 		.4byte	.LVL180
 6936 0b09 39000000 		.4byte	.LVL183-1
 6937 0b0d 0100     		.2byte	0x1
 6938 0b0f 50       		.byte	0x50
 6939 0b10 3E000000 		.4byte	.LVL184
 6940 0b14 4D000000 		.4byte	.LVL188-1
 6941 0b18 0100     		.2byte	0x1
 6942 0b1a 50       		.byte	0x50
 6943 0b1b 5A000000 		.4byte	.LVL190
 6944 0b1f 6D000000 		.4byte	.LVL194-1
 6945 0b23 0100     		.2byte	0x1
 6946 0b25 50       		.byte	0x50
 6947 0b26 72000000 		.4byte	.LVL195
 6948 0b2a 85000000 		.4byte	.LVL199-1
 6949 0b2e 0100     		.2byte	0x1
 6950 0b30 50       		.byte	0x50
 6951 0b31 8A000000 		.4byte	.LVL200
 6952 0b35 9F000000 		.4byte	.LVL204-1
 6953 0b39 0100     		.2byte	0x1
 6954 0b3b 50       		.byte	0x50
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 185


 6955 0b3c 00000000 		.4byte	0
 6956 0b40 00000000 		.4byte	0
 6957              	.LLST70:
 6958 0b44 00000000 		.4byte	.LVL206
 6959 0b48 10000000 		.4byte	.LVL207
 6960 0b4c 0100     		.2byte	0x1
 6961 0b4e 50       		.byte	0x50
 6962 0b4f 10000000 		.4byte	.LVL207
 6963 0b53 18000000 		.4byte	.LFE28
 6964 0b57 0400     		.2byte	0x4
 6965 0b59 F3       		.byte	0xf3
 6966 0b5a 01       		.uleb128 0x1
 6967 0b5b 50       		.byte	0x50
 6968 0b5c 9F       		.byte	0x9f
 6969 0b5d 00000000 		.4byte	0
 6970 0b61 00000000 		.4byte	0
 6971              	.LLST71:
 6972 0b65 00000000 		.4byte	.LVL206
 6973 0b69 10000000 		.4byte	.LVL207
 6974 0b6d 0200     		.2byte	0x2
 6975 0b6f 30       		.byte	0x30
 6976 0b70 9F       		.byte	0x9f
 6977 0b71 10000000 		.4byte	.LVL207
 6978 0b75 18000000 		.4byte	.LFE28
 6979 0b79 0100     		.2byte	0x1
 6980 0b7b 50       		.byte	0x50
 6981 0b7c 00000000 		.4byte	0
 6982 0b80 00000000 		.4byte	0
 6983              	.LLST72:
 6984 0b84 00000000 		.4byte	.LVL208
 6985 0b88 0B000000 		.4byte	.LVL209-1
 6986 0b8c 0100     		.2byte	0x1
 6987 0b8e 50       		.byte	0x50
 6988 0b8f 0B000000 		.4byte	.LVL209-1
 6989 0b93 1A000000 		.4byte	.LVL212
 6990 0b97 0100     		.2byte	0x1
 6991 0b99 55       		.byte	0x55
 6992 0b9a 1A000000 		.4byte	.LVL212
 6993 0b9e 1C000000 		.4byte	.LFE29
 6994 0ba2 0400     		.2byte	0x4
 6995 0ba4 F3       		.byte	0xf3
 6996 0ba5 01       		.uleb128 0x1
 6997 0ba6 50       		.byte	0x50
 6998 0ba7 9F       		.byte	0x9f
 6999 0ba8 00000000 		.4byte	0
 7000 0bac 00000000 		.4byte	0
 7001              	.LLST73:
 7002 0bb0 00000000 		.4byte	.LVL208
 7003 0bb4 0B000000 		.4byte	.LVL209-1
 7004 0bb8 0100     		.2byte	0x1
 7005 0bba 51       		.byte	0x51
 7006 0bbb 0B000000 		.4byte	.LVL209-1
 7007 0bbf 1A000000 		.4byte	.LVL213
 7008 0bc3 0100     		.2byte	0x1
 7009 0bc5 56       		.byte	0x56
 7010 0bc6 1A000000 		.4byte	.LVL213
 7011 0bca 1C000000 		.4byte	.LFE29
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 186


 7012 0bce 0400     		.2byte	0x4
 7013 0bd0 F3       		.byte	0xf3
 7014 0bd1 01       		.uleb128 0x1
 7015 0bd2 51       		.byte	0x51
 7016 0bd3 9F       		.byte	0x9f
 7017 0bd4 00000000 		.4byte	0
 7018 0bd8 00000000 		.4byte	0
 7019              	.LLST74:
 7020 0bdc 00000000 		.4byte	.LVL208
 7021 0be0 0B000000 		.4byte	.LVL209-1
 7022 0be4 0100     		.2byte	0x1
 7023 0be6 52       		.byte	0x52
 7024 0be7 0B000000 		.4byte	.LVL209-1
 7025 0beb 10000000 		.4byte	.LVL210
 7026 0bef 0100     		.2byte	0x1
 7027 0bf1 54       		.byte	0x54
 7028 0bf2 10000000 		.4byte	.LVL210
 7029 0bf6 1C000000 		.4byte	.LFE29
 7030 0bfa 0400     		.2byte	0x4
 7031 0bfc F3       		.byte	0xf3
 7032 0bfd 01       		.uleb128 0x1
 7033 0bfe 52       		.byte	0x52
 7034 0bff 9F       		.byte	0x9f
 7035 0c00 00000000 		.4byte	0
 7036 0c04 00000000 		.4byte	0
 7037              	.LLST75:
 7038 0c08 0C000000 		.4byte	.LVL209
 7039 0c0c 19000000 		.4byte	.LVL211-1
 7040 0c10 0100     		.2byte	0x1
 7041 0c12 50       		.byte	0x50
 7042 0c13 00000000 		.4byte	0
 7043 0c17 00000000 		.4byte	0
 7044              	.LLST76:
 7045 0c1b 00000000 		.4byte	.LVL214
 7046 0c1f 14000000 		.4byte	.LVL215
 7047 0c23 0100     		.2byte	0x1
 7048 0c25 50       		.byte	0x50
 7049 0c26 14000000 		.4byte	.LVL215
 7050 0c2a 4C000000 		.4byte	.LFE10
 7051 0c2e 0400     		.2byte	0x4
 7052 0c30 F3       		.byte	0xf3
 7053 0c31 01       		.uleb128 0x1
 7054 0c32 50       		.byte	0x50
 7055 0c33 9F       		.byte	0x9f
 7056 0c34 00000000 		.4byte	0
 7057 0c38 00000000 		.4byte	0
 7058              	.LLST77:
 7059 0c3c 16000000 		.4byte	.LVL216
 7060 0c40 23000000 		.4byte	.LVL218-1
 7061 0c44 0100     		.2byte	0x1
 7062 0c46 53       		.byte	0x53
 7063 0c47 00000000 		.4byte	0
 7064 0c4b 00000000 		.4byte	0
 7065              	.LLST78:
 7066 0c4f 3A000000 		.4byte	.LVL221
 7067 0c53 3E000000 		.4byte	.LVL222
 7068 0c57 0300     		.2byte	0x3
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 187


 7069 0c59 74       		.byte	0x74
 7070 0c5a 02       		.sleb128 2
 7071 0c5b 9F       		.byte	0x9f
 7072 0c5c 00000000 		.4byte	0
 7073 0c60 00000000 		.4byte	0
 7074              		.section	.debug_aranges,"",%progbits
 7075 0000 E4000000 		.4byte	0xe4
 7076 0004 0200     		.2byte	0x2
 7077 0006 00000000 		.4byte	.Ldebug_info0
 7078 000a 04       		.byte	0x4
 7079 000b 00       		.byte	0
 7080 000c 0000     		.2byte	0
 7081 000e 0000     		.2byte	0
 7082 0010 00000000 		.4byte	.LFB1
 7083 0014 10000000 		.4byte	.LFE1-.LFB1
 7084 0018 00000000 		.4byte	.LFB2
 7085 001c 38000000 		.4byte	.LFE2-.LFB2
 7086 0020 00000000 		.4byte	.LFB3
 7087 0024 30000000 		.4byte	.LFE3-.LFB3
 7088 0028 00000000 		.4byte	.LFB4
 7089 002c 3C000000 		.4byte	.LFE4-.LFB4
 7090 0030 00000000 		.4byte	.LFB5
 7091 0034 48000000 		.4byte	.LFE5-.LFB5
 7092 0038 00000000 		.4byte	.LFB6
 7093 003c 30000000 		.4byte	.LFE6-.LFB6
 7094 0040 00000000 		.4byte	.LFB8
 7095 0044 84000000 		.4byte	.LFE8-.LFB8
 7096 0048 00000000 		.4byte	.LFB11
 7097 004c 70000000 		.4byte	.LFE11-.LFB11
 7098 0050 00000000 		.4byte	.LFB12
 7099 0054 68000000 		.4byte	.LFE12-.LFB12
 7100 0058 00000000 		.4byte	.LFB13
 7101 005c 08000000 		.4byte	.LFE13-.LFB13
 7102 0060 00000000 		.4byte	.LFB14
 7103 0064 2C000000 		.4byte	.LFE14-.LFB14
 7104 0068 00000000 		.4byte	.LFB15
 7105 006c 14000000 		.4byte	.LFE15-.LFB15
 7106 0070 00000000 		.4byte	.LFB16
 7107 0074 12000000 		.4byte	.LFE16-.LFB16
 7108 0078 00000000 		.4byte	.LFB17
 7109 007c 12000000 		.4byte	.LFE17-.LFB17
 7110 0080 00000000 		.4byte	.LFB18
 7111 0084 18000000 		.4byte	.LFE18-.LFB18
 7112 0088 00000000 		.4byte	.LFB25
 7113 008c 10000000 		.4byte	.LFE25-.LFB25
 7114 0090 00000000 		.4byte	.LFB26
 7115 0094 20000000 		.4byte	.LFE26-.LFB26
 7116 0098 00000000 		.4byte	.LFB22
 7117 009c BC000000 		.4byte	.LFE22-.LFB22
 7118 00a0 00000000 		.4byte	.LFB19
 7119 00a4 14010000 		.4byte	.LFE19-.LFB19
 7120 00a8 00000000 		.4byte	.LFB20
 7121 00ac 18000000 		.4byte	.LFE20-.LFB20
 7122 00b0 00000000 		.4byte	.LFB21
 7123 00b4 20000000 		.4byte	.LFE21-.LFB21
 7124 00b8 00000000 		.4byte	.LFB27
 7125 00bc B8000000 		.4byte	.LFE27-.LFB27
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 188


 7126 00c0 00000000 		.4byte	.LFB28
 7127 00c4 18000000 		.4byte	.LFE28-.LFB28
 7128 00c8 00000000 		.4byte	.LFB29
 7129 00cc 1C000000 		.4byte	.LFE29-.LFB29
 7130 00d0 00000000 		.4byte	.LFB10
 7131 00d4 4C000000 		.4byte	.LFE10-.LFB10
 7132 00d8 00000000 		.4byte	.LFB7
 7133 00dc 2C000000 		.4byte	.LFE7-.LFB7
 7134 00e0 00000000 		.4byte	0
 7135 00e4 00000000 		.4byte	0
 7136              		.section	.debug_ranges,"",%progbits
 7137              	.Ldebug_ranges0:
 7138 0000 02000000 		.4byte	.LBB18
 7139 0004 0A000000 		.4byte	.LBE18
 7140 0008 0C000000 		.4byte	.LBB21
 7141 000c 0E000000 		.4byte	.LBE21
 7142 0010 00000000 		.4byte	0
 7143 0014 00000000 		.4byte	0
 7144 0018 1A000000 		.4byte	.LBB22
 7145 001c 6E000000 		.4byte	.LBE22
 7146 0020 A8000000 		.4byte	.LBB29
 7147 0024 BC000000 		.4byte	.LBE29
 7148 0028 00000000 		.4byte	0
 7149 002c 00000000 		.4byte	0
 7150 0030 76000000 		.4byte	.LBB25
 7151 0034 7A000000 		.4byte	.LBE25
 7152 0038 7C000000 		.4byte	.LBB28
 7153 003c A0000000 		.4byte	.LBE28
 7154 0040 00000000 		.4byte	0
 7155 0044 00000000 		.4byte	0
 7156 0048 00000000 		.4byte	.LFB1
 7157 004c 10000000 		.4byte	.LFE1
 7158 0050 00000000 		.4byte	.LFB2
 7159 0054 38000000 		.4byte	.LFE2
 7160 0058 00000000 		.4byte	.LFB3
 7161 005c 30000000 		.4byte	.LFE3
 7162 0060 00000000 		.4byte	.LFB4
 7163 0064 3C000000 		.4byte	.LFE4
 7164 0068 00000000 		.4byte	.LFB5
 7165 006c 48000000 		.4byte	.LFE5
 7166 0070 00000000 		.4byte	.LFB6
 7167 0074 30000000 		.4byte	.LFE6
 7168 0078 00000000 		.4byte	.LFB8
 7169 007c 84000000 		.4byte	.LFE8
 7170 0080 00000000 		.4byte	.LFB11
 7171 0084 70000000 		.4byte	.LFE11
 7172 0088 00000000 		.4byte	.LFB12
 7173 008c 68000000 		.4byte	.LFE12
 7174 0090 00000000 		.4byte	.LFB13
 7175 0094 08000000 		.4byte	.LFE13
 7176 0098 00000000 		.4byte	.LFB14
 7177 009c 2C000000 		.4byte	.LFE14
 7178 00a0 00000000 		.4byte	.LFB15
 7179 00a4 14000000 		.4byte	.LFE15
 7180 00a8 00000000 		.4byte	.LFB16
 7181 00ac 12000000 		.4byte	.LFE16
 7182 00b0 00000000 		.4byte	.LFB17
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 189


 7183 00b4 12000000 		.4byte	.LFE17
 7184 00b8 00000000 		.4byte	.LFB18
 7185 00bc 18000000 		.4byte	.LFE18
 7186 00c0 00000000 		.4byte	.LFB25
 7187 00c4 10000000 		.4byte	.LFE25
 7188 00c8 00000000 		.4byte	.LFB26
 7189 00cc 20000000 		.4byte	.LFE26
 7190 00d0 00000000 		.4byte	.LFB22
 7191 00d4 BC000000 		.4byte	.LFE22
 7192 00d8 00000000 		.4byte	.LFB19
 7193 00dc 14010000 		.4byte	.LFE19
 7194 00e0 00000000 		.4byte	.LFB20
 7195 00e4 18000000 		.4byte	.LFE20
 7196 00e8 00000000 		.4byte	.LFB21
 7197 00ec 20000000 		.4byte	.LFE21
 7198 00f0 00000000 		.4byte	.LFB27
 7199 00f4 B8000000 		.4byte	.LFE27
 7200 00f8 00000000 		.4byte	.LFB28
 7201 00fc 18000000 		.4byte	.LFE28
 7202 0100 00000000 		.4byte	.LFB29
 7203 0104 1C000000 		.4byte	.LFE29
 7204 0108 00000000 		.4byte	.LFB10
 7205 010c 4C000000 		.4byte	.LFE10
 7206 0110 00000000 		.4byte	.LFB7
 7207 0114 2C000000 		.4byte	.LFE7
 7208 0118 00000000 		.4byte	0
 7209 011c 00000000 		.4byte	0
 7210              		.section	.debug_line,"",%progbits
 7211              	.Ldebug_line0:
 7212 0000 A9060000 		.section	.debug_str,"MS",%progbits,1
 7212      0200E901 
 7212      00000201 
 7212      FB0E0D00 
 7212      01010101 
 7213              	.LASF74:
 7214 0000 62757474 		.ascii	"button12\000"
 7214      6F6E3132 
 7214      00
 7215              	.LASF75:
 7216 0009 62757474 		.ascii	"button13\000"
 7216      6F6E3133 
 7216      00
 7217              	.LASF76:
 7218 0012 62757474 		.ascii	"button14\000"
 7218      6F6E3134 
 7218      00
 7219              	.LASF77:
 7220 001b 62757474 		.ascii	"button15\000"
 7220      6F6E3135 
 7220      00
 7221              	.LASF78:
 7222 0024 62757474 		.ascii	"button16\000"
 7222      6F6E3136 
 7222      00
 7223              	.LASF79:
 7224 002d 62757474 		.ascii	"button17\000"
 7224      6F6E3137 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 190


 7224      00
 7225              	.LASF80:
 7226 0036 62757474 		.ascii	"button18\000"
 7226      6F6E3138 
 7226      00
 7227              	.LASF81:
 7228 003f 62757474 		.ascii	"button19\000"
 7228      6F6E3139 
 7228      00
 7229              	.LASF161:
 7230 0048 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 7230      656E7365 
 7230      5F537343 
 7230      53444765 
 7230      74436F6C 
 7231              	.LASF173:
 7232 006a 73656E73 		.ascii	"sensorElement\000"
 7232      6F72456C 
 7232      656D656E 
 7232      7400
 7233              	.LASF216:
 7234 0078 6D617843 		.ascii	"maxCp\000"
 7234      7000
 7235              	.LASF159:
 7236 007e 7363616E 		.ascii	"scanStatus\000"
 7236      53746174 
 7236      757300
 7237              	.LASF266:
 7238 0089 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 7238      656E7365 
 7238      5F537343 
 7238      53444469 
 7238      7361626C 
 7239              	.LASF253:
 7240 00a3 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 7240      656E7365 
 7240      5F435344 
 7240      43616C69 
 7240      62726174 
 7241              	.LASF170:
 7242 00bf 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 7242      656E7365 
 7242      5F536574 
 7242      75705769 
 7242      64676574 
 7243              	.LASF237:
 7244 00d7 43617053 		.ascii	"CapSense_widgetIndex\000"
 7244      656E7365 
 7244      5F776964 
 7244      67657449 
 7244      6E646578 
 7245              	.LASF117:
 7246 00ec 736E7254 		.ascii	"snrTestWidgetId\000"
 7246      65737457 
 7246      69646765 
 7246      74496400 
 7247              	.LASF42:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 191


 7248 00fc 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 7248      656E7365 
 7248      5F554E44 
 7248      4546494E 
 7248      45445F45 
 7249              	.LASF82:
 7250 0111 62757474 		.ascii	"button20\000"
 7250      6F6E3230 
 7250      00
 7251              	.LASF83:
 7252 011a 62757474 		.ascii	"button21\000"
 7252      6F6E3231 
 7252      00
 7253              	.LASF84:
 7254 0123 62757474 		.ascii	"button22\000"
 7254      6F6E3232 
 7254      00
 7255              	.LASF85:
 7256 012c 62757474 		.ascii	"button23\000"
 7256      6F6E3233 
 7256      00
 7257              	.LASF86:
 7258 0135 62757474 		.ascii	"button24\000"
 7258      6F6E3234 
 7258      00
 7259              	.LASF87:
 7260 013e 62757474 		.ascii	"button25\000"
 7260      6F6E3235 
 7260      00
 7261              	.LASF88:
 7262 0147 62757474 		.ascii	"button26\000"
 7262      6F6E3236 
 7262      00
 7263              	.LASF89:
 7264 0150 62757474 		.ascii	"button27\000"
 7264      6F6E3237 
 7264      00
 7265              	.LASF90:
 7266 0159 62757474 		.ascii	"button28\000"
 7266      6F6E3238 
 7266      00
 7267              	.LASF91:
 7268 0162 62757474 		.ascii	"button29\000"
 7268      6F6E3239 
 7268      00
 7269              	.LASF0:
 7270 016b 756E7369 		.ascii	"unsigned int\000"
 7270      676E6564 
 7270      20696E74 
 7270      00
 7271              	.LASF108:
 7272 0178 7363616E 		.ascii	"scanCounter\000"
 7272      436F756E 
 7272      74657200 
 7273              	.LASF211:
 7274 0184 696E7075 		.ascii	"inputSnsClk\000"
 7274      74536E73 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 192


 7274      436C6B00 
 7275              	.LASF106:
 7276 0190 6877436C 		.ascii	"hwClock\000"
 7276      6F636B00 
 7277              	.LASF121:
 7278 0198 7363616E 		.ascii	"scanCsdISC\000"
 7278      43736449 
 7278      534300
 7279              	.LASF219:
 7280 01a3 70747252 		.ascii	"ptrRamWidget\000"
 7280      616D5769 
 7280      64676574 
 7280      00
 7281              	.LASF152:
 7282 01b0 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 7282      656E7365 
 7282      5F424953 
 7282      545F4353 
 7282      445F5348 
 7283              	.LASF177:
 7284 01cb 696E7465 		.ascii	"interruptState\000"
 7284      72727570 
 7284      74537461 
 7284      746500
 7285              	.LASF43:
 7286 01da 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 7286      656E7365 
 7286      5F53454E 
 7286      53455F4D 
 7286      4554484F 
 7287              	.LASF205:
 7288 01f6 6C667372 		.ascii	"lfsrScale\000"
 7288      5363616C 
 7288      6500
 7289              	.LASF226:
 7290 0200 64725265 		.ascii	"drReg\000"
 7290      6700
 7291              	.LASF218:
 7292 0206 70747246 		.ascii	"ptrFlashWidget\000"
 7292      6C617368 
 7292      57696467 
 7292      657400
 7293              	.LASF23:
 7294 0215 69446163 		.ascii	"iDacGain\000"
 7294      4761696E 
 7294      00
 7295              	.LASF256:
 7296 021e 536D6172 		.ascii	"SmartSense_TuneSensitivity\000"
 7296      7453656E 
 7296      73655F54 
 7296      756E6553 
 7296      656E7369 
 7297              	.LASF92:
 7298 0239 62757474 		.ascii	"button30\000"
 7298      6F6E3330 
 7298      00
 7299              	.LASF93:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 193


 7300 0242 62757474 		.ascii	"button31\000"
 7300      6F6E3331 
 7300      00
 7301              	.LASF94:
 7302 024b 62757474 		.ascii	"button32\000"
 7302      6F6E3332 
 7302      00
 7303              	.LASF95:
 7304 0254 62757474 		.ascii	"button33\000"
 7304      6F6E3333 
 7304      00
 7305              	.LASF29:
 7306 025d 736E7343 		.ascii	"snsClkInputClock\000"
 7306      6C6B496E 
 7306      70757443 
 7306      6C6F636B 
 7306      00
 7307              	.LASF206:
 7308 026e 6C667372 		.ascii	"lfsrRange\000"
 7308      52616E67 
 7308      6500
 7309              	.LASF165:
 7310 0278 6D6F6465 		.ascii	"mode\000"
 7310      00
 7311              	.LASF264:
 7312 027d 43617053 		.ascii	"CapSense_IsBusy\000"
 7312      656E7365 
 7312      5F497342 
 7312      75737900 
 7313              	.LASF225:
 7314 028d 6873696F 		.ascii	"hsiomReg\000"
 7314      6D526567 
 7314      00
 7315              	.LASF191:
 7316 0296 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 7316      656E7365 
 7316      5F537353 
 7316      65744D6F 
 7316      64436C6B 
 7317              	.LASF230:
 7318 02b7 72656750 		.ascii	"regPtr\000"
 7318      747200
 7319              	.LASF96:
 7320 02be 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 7320      656E7365 
 7320      5F52414D 
 7320      5F57445F 
 7320      4C495354 
 7321              	.LASF171:
 7322 02da 73656E73 		.ascii	"sensorId\000"
 7322      6F724964 
 7322      00
 7323              	.LASF127:
 7324 02e3 70735074 		.ascii	"psPtr\000"
 7324      7200
 7325              	.LASF235:
 7326 02e9 43617053 		.ascii	"CapSense_dsFlash\000"
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 194


 7326      656E7365 
 7326      5F647346 
 7326      6C617368 
 7326      00
 7327              	.LASF164:
 7328 02fa 70747257 		.ascii	"ptrWdgt\000"
 7328      64677400 
 7329              	.LASF10:
 7330 0302 75696E74 		.ascii	"uint32_t\000"
 7330      33325F74 
 7330      00
 7331              	.LASF265:
 7332 030b 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 7332      656E7365 
 7332      5F537353 
 7332      65745769 
 7332      64676574 
 7333              	.LASF56:
 7334 032b 69646163 		.ascii	"idacGainIndex\000"
 7334      4761696E 
 7334      496E6465 
 7334      7800
 7335              	.LASF181:
 7336 0339 6C6F6F70 		.ascii	"loopIndex\000"
 7336      496E6465 
 7336      7800
 7337              	.LASF204:
 7338 0343 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 7338      656E7365 
 7338      5F537343 
 7338      616C634C 
 7338      66737253 
 7339              	.LASF14:
 7340 035c 666C6F61 		.ascii	"float\000"
 7340      7400
 7341              	.LASF132:
 7342 0362 73686966 		.ascii	"shift\000"
 7342      7400
 7343              	.LASF145:
 7344 0368 77646774 		.ascii	"wdgtArray\000"
 7344      41727261 
 7344      7900
 7345              	.LASF208:
 7346 0372 43617053 		.ascii	"CapSense_SsAutoTuneWidget\000"
 7346      656E7365 
 7346      5F537341 
 7346      75746F54 
 7346      756E6557 
 7347              	.LASF245:
 7348 038c 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 7348      656E7365 
 7348      5F435344 
 7348      53657475 
 7348      70576964 
 7349              	.LASF186:
 7350 03a4 736E7349 		.ascii	"snsIoPtr\000"
 7350      6F507472 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 195


 7350      00
 7351              	.LASF116:
 7352 03ad 736E734C 		.ascii	"snsList\000"
 7352      69737400 
 7353              	.LASF8:
 7354 03b5 6C6F6E67 		.ascii	"long long unsigned int\000"
 7354      206C6F6E 
 7354      6720756E 
 7354      7369676E 
 7354      65642069 
 7355              	.LASF238:
 7356 03cc 43617053 		.ascii	"CapSense_sensorIndex\000"
 7356      656E7365 
 7356      5F73656E 
 7356      736F7249 
 7356      6E646578 
 7357              	.LASF133:
 7358 03e1 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 7358      656E7365 
 7358      5F464C41 
 7358      53485F49 
 7358      4F5F5354 
 7359              	.LASF118:
 7360 03fa 736E7254 		.ascii	"snrTestSensorId\000"
 7360      65737453 
 7360      656E736F 
 7360      72496400 
 7361              	.LASF143:
 7362 040a 70747232 		.ascii	"ptr2NoiseEnvlp\000"
 7362      4E6F6973 
 7362      65456E76 
 7362      6C7000
 7363              	.LASF141:
 7364 0419 77646774 		.ascii	"wdgtType\000"
 7364      54797065 
 7364      00
 7365              	.LASF202:
 7366 0422 6C667372 		.ascii	"lfsrSize\000"
 7366      53697A65 
 7366      00
 7367              	.LASF247:
 7368 042b 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 7368      656E7365 
 7368      5F435344 
 7368      53657475 
 7368      70576964 
 7369              	.LASF227:
 7370 0446 70635265 		.ascii	"pcReg\000"
 7370      6700
 7371              	.LASF231:
 7372 044c 76616C75 		.ascii	"value\000"
 7372      6500
 7373              	.LASF183:
 7374 0452 6E657750 		.ascii	"newPinHsiomVal\000"
 7374      696E4873 
 7374      696F6D56 
 7374      616C00
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 196


 7375              	.LASF209:
 7376 0461 6175746F 		.ascii	"autoTuneStatus\000"
 7376      54756E65 
 7376      53746174 
 7376      757300
 7377              	.LASF114:
 7378 0470 6D6F6443 		.ascii	"modCsdClk\000"
 7378      7364436C 
 7378      6B00
 7379              	.LASF102:
 7380 047a 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 7380      656E7365 
 7380      5F52414D 
 7380      5F534E53 
 7380      5F535452 
 7381              	.LASF197:
 7382 0492 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 7382      656E7365 
 7382      5F537343 
 7382      53444361 
 7382      6C635072 
 7383              	.LASF30:
 7384 04ac 63616C54 		.ascii	"calTarget\000"
 7384      61726765 
 7384      7400
 7385              	.LASF126:
 7386 04b6 64725074 		.ascii	"drPtr\000"
 7386      7200
 7387              	.LASF192:
 7388 04bc 6D6F6443 		.ascii	"modClk\000"
 7388      6C6B00
 7389              	.LASF182:
 7390 04c3 6E657750 		.ascii	"newPinPcVal\000"
 7390      696E5063 
 7390      56616C00 
 7391              	.LASF25:
 7392 04cf 73696750 		.ascii	"sigPFC\000"
 7392      464300
 7393              	.LASF52:
 7394 04d6 68797374 		.ascii	"hysteresis\000"
 7394      65726573 
 7394      697300
 7395              	.LASF224:
 7396 04e1 64697363 		.ascii	"dischargeTime\000"
 7396      68617267 
 7396      6554696D 
 7396      6500
 7397              	.LASF144:
 7398 04ef 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 7398      656E7365 
 7398      5F464C41 
 7398      53485F57 
 7398      445F5354 
 7399              	.LASF175:
 7400 0508 656C7464 		.ascii	"eltdNum\000"
 7400      4E756D00 
 7401              	.LASF54:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 197


 7402 0510 6C6F7742 		.ascii	"lowBslnRst\000"
 7402      736C6E52 
 7402      737400
 7403              	.LASF203:
 7404 051b 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 7404      656E7365 
 7404      5F537343 
 7404      616C634C 
 7404      66737253 
 7405              	.LASF140:
 7406 0533 746F7461 		.ascii	"totalNumSns\000"
 7406      6C4E756D 
 7406      536E7300 
 7407              	.LASF41:
 7408 053f 534D4152 		.ascii	"SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT\000"
 7408      5453454E 
 7408      53455F43 
 7408      53445F4E 
 7408      4F495345 
 7409              	.LASF214:
 7410 0564 6175746F 		.ascii	"autoTuneConfig\000"
 7410      54756E65 
 7410      436F6E66 
 7410      696700
 7411              	.LASF50:
 7412 0573 6E6F6973 		.ascii	"noiseTh\000"
 7412      65546800 
 7413              	.LASF16:
 7414 057b 63686172 		.ascii	"char\000"
 7414      00
 7415              	.LASF250:
 7416 0580 43794578 		.ascii	"CyExitCriticalSection\000"
 7416      69744372 
 7416      69746963 
 7416      616C5365 
 7416      6374696F 
 7417              	.LASF31:
 7418 0596 69446163 		.ascii	"iDacMod\000"
 7418      4D6F6400 
 7419              	.LASF223:
 7420 059e 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 7420      656E7365 
 7420      5F446973 
 7420      63686172 
 7420      67654578 
 7421              	.LASF254:
 7422 05be 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 7422      656E7365 
 7422      5F537343 
 7422      53444765 
 7422      744E756D 
 7423              	.LASF184:
 7424 05e3 746D7050 		.ascii	"tmpPcDrRegValue\000"
 7424      63447252 
 7424      65675661 
 7424      6C756500 
 7425              	.LASF150:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 198


 7426 05f3 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 7426      656E7365 
 7426      5F424953 
 7426      545F4353 
 7426      445F534E 
 7427              	.LASF130:
 7428 060f 6873696F 		.ascii	"hsiomShift\000"
 7428      6D536869 
 7428      667400
 7429              	.LASF12:
 7430 061a 75696E74 		.ascii	"uint16\000"
 7430      313600
 7431              	.LASF201:
 7432 0621 636F6E76 		.ascii	"conversionsNum\000"
 7432      65727369 
 7432      6F6E734E 
 7432      756D00
 7433              	.LASF220:
 7434 0630 70747252 		.ascii	"ptrRamSensor\000"
 7434      616D5365 
 7434      6E736F72 
 7434      00
 7435              	.LASF221:
 7436 063d 43617053 		.ascii	"CapSense_SsAutoTune\000"
 7436      656E7365 
 7436      5F537341 
 7436      75746F54 
 7436      756E6500 
 7437              	.LASF48:
 7438 0651 7265736F 		.ascii	"resolution\000"
 7438      6C757469 
 7438      6F6E00
 7439              	.LASF109:
 7440 065c 73746174 		.ascii	"status\000"
 7440      757300
 7441              	.LASF158:
 7442 0663 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 7442      656E7365 
 7442      5F43616C 
 7442      69627261 
 7442      74655769 
 7443              	.LASF149:
 7444 067c 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
 7444      656E7365 
 7444      5F534341 
 7444      4E5F4353 
 7444      585F4500 
 7445              	.LASF21:
 7446 0690 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 7446      656E7365 
 7446      5F4C4F57 
 7446      5F42534C 
 7446      4E5F5253 
 7447              	.LASF193:
 7448 06ab 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 7448      656E7365 
 7448      5F537353 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 199


 7448      6574536E 
 7448      73436C6F 
 7449              	.LASF47:
 7450 06c9 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 7450      656E7365 
 7450      5F53454E 
 7450      53455F4D 
 7450      4554484F 
 7451              	.LASF228:
 7452 06e4 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 7452      656E7365 
 7452      5F536574 
 7452      496E6163 
 7452      74697665 
 7453              	.LASF101:
 7454 0707 69646163 		.ascii	"idacComp\000"
 7454      436F6D70 
 7454      00
 7455              	.LASF125:
 7456 0710 70635074 		.ascii	"pcPtr\000"
 7456      7200
 7457              	.LASF7:
 7458 0716 6C6F6E67 		.ascii	"long long int\000"
 7458      206C6F6E 
 7458      6720696E 
 7458      7400
 7459              	.LASF142:
 7460 0724 6E756D43 		.ascii	"numCols\000"
 7460      6F6C7300 
 7461              	.LASF259:
 7462 072c 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 7462      656E7365 
 7462      5F537343 
 7462      5344496E 
 7462      69746961 
 7463              	.LASF53:
 7464 0745 6F6E4465 		.ascii	"onDebounce\000"
 7464      626F756E 
 7464      636500
 7465              	.LASF190:
 7466 0750 61646472 		.ascii	"address\000"
 7466      65737300 
 7467              	.LASF160:
 7468 0758 63616C69 		.ascii	"calibrateStatus\000"
 7468      62726174 
 7468      65537461 
 7468      74757300 
 7469              	.LASF115:
 7470 0768 77646774 		.ascii	"wdgtList\000"
 7470      4C697374 
 7470      00
 7471              	.LASF148:
 7472 0771 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 7472      656E7365 
 7472      5F534341 
 7472      4E5F4353 
 7472      445F4500 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 200


 7473              	.LASF146:
 7474 0785 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 7474      656E7365 
 7474      5F464C41 
 7474      53485F53 
 7474      54525543 
 7475              	.LASF157:
 7476 079b 43617053 		.ascii	"CapSense_Scan\000"
 7476      656E7365 
 7476      5F536361 
 7476      6E00
 7477              	.LASF229:
 7478 07a9 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 7478      656E7365 
 7478      5F577269 
 7478      74654269 
 7478      74735361 
 7479              	.LASF185:
 7480 07c0 746D7048 		.ascii	"tmpHsiomRegValue\000"
 7480      73696F6D 
 7480      52656756 
 7480      616C7565 
 7480      00
 7481              	.LASF234:
 7482 07d1 43617053 		.ascii	"CapSense_dsRam\000"
 7482      656E7365 
 7482      5F647352 
 7482      616D00
 7483              	.LASF120:
 7484 07e0 736E7254 		.ascii	"snrTestRawCount\000"
 7484      65737452 
 7484      6177436F 
 7484      756E7400 
 7485              	.LASF51:
 7486 07f0 6E4E6F69 		.ascii	"nNoiseTh\000"
 7486      73655468 
 7486      00
 7487              	.LASF113:
 7488 07f9 63736430 		.ascii	"csd0Config\000"
 7488      436F6E66 
 7488      696700
 7489              	.LASF19:
 7490 0804 63796973 		.ascii	"cyisraddress\000"
 7490      72616464 
 7490      72657373 
 7490      00
 7491              	.LASF172:
 7492 0811 43617053 		.ascii	"CapSense_ScanExt\000"
 7492      656E7365 
 7492      5F536361 
 7492      6E457874 
 7492      00
 7493              	.LASF60:
 7494 0822 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 7494      656E7365 
 7494      5F52414D 
 7494      5F57445F 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 201


 7494      42415345 
 7495              	.LASF124:
 7496 083e 6873696F 		.ascii	"hsiomPtr\000"
 7496      6D507472 
 7496      00
 7497              	.LASF13:
 7498 0847 75696E74 		.ascii	"uint32\000"
 7498      333200
 7499              	.LASF137:
 7500 084e 70747232 		.ascii	"ptr2FltrHistory\000"
 7500      466C7472 
 7500      48697374 
 7500      6F727900 
 7501              	.LASF155:
 7502 085e 6761696E 		.ascii	"gainValue\000"
 7502      56616C75 
 7502      6500
 7503              	.LASF243:
 7504 0868 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 7504      656E7365 
 7504      5F637572 
 7504      536E7349 
 7504      4F507472 
 7505              	.LASF129:
 7506 087d 6D61736B 		.ascii	"mask\000"
 7506      00
 7507              	.LASF195:
 7508 0882 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 7508      656E7365 
 7508      5F537353 
 7508      6574436C 
 7508      6F636B44 
 7509              	.LASF153:
 7510 089e 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 7510      656E7365 
 7510      5F4F5045 
 7510      52415449 
 7510      4F4E5F4D 
 7511              	.LASF257:
 7512 08bb 43794465 		.ascii	"CyDelayUs\000"
 7512      6C617955 
 7512      7300
 7513              	.LASF24:
 7514 08c5 70747253 		.ascii	"ptrSenseClk\000"
 7514      656E7365 
 7514      436C6B00 
 7515              	.LASF169:
 7516 08d1 77646774 		.ascii	"wdgtIndex\000"
 7516      496E6465 
 7516      7800
 7517              	.LASF210:
 7518 08db 736E7349 		.ascii	"snsIndex\000"
 7518      6E646578 
 7518      00
 7519              	.LASF46:
 7520 08e4 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 7520      656E7365 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 202


 7520      5F53454E 
 7520      53455F4D 
 7520      4554484F 
 7521              	.LASF147:
 7522 0900 6C6F6E67 		.ascii	"long double\000"
 7522      20646F75 
 7522      626C6500 
 7523              	.LASF26:
 7524 090c 736E7343 		.ascii	"snsClkConstantR\000"
 7524      6C6B436F 
 7524      6E737461 
 7524      6E745200 
 7525              	.LASF18:
 7526 091c 72656733 		.ascii	"reg32\000"
 7526      3200
 7527              	.LASF119:
 7528 0922 736E7254 		.ascii	"snrTestScanCounter\000"
 7528      65737453 
 7528      63616E43 
 7528      6F756E74 
 7528      657200
 7529              	.LASF32:
 7530 0935 69446163 		.ascii	"iDacComp\000"
 7530      436F6D70 
 7530      00
 7531              	.LASF104:
 7532 093e 636F6E66 		.ascii	"configId\000"
 7532      69674964 
 7532      00
 7533              	.LASF136:
 7534 0947 70747232 		.ascii	"ptr2SnsRam\000"
 7534      536E7352 
 7534      616D00
 7535              	.LASF232:
 7536 0952 43617053 		.ascii	"CapSense_SsInitialize\000"
 7536      656E7365 
 7536      5F537349 
 7536      6E697469 
 7536      616C697A 
 7537              	.LASF112:
 7538 0968 736E7353 		.ascii	"snsStatus\000"
 7538      74617475 
 7538      7300
 7539              	.LASF188:
 7540 0972 706F7374 		.ascii	"postScanStatus\000"
 7540      5363616E 
 7540      53746174 
 7540      757300
 7541              	.LASF58:
 7542 0981 736E7343 		.ascii	"snsClkSource\000"
 7542      6C6B536F 
 7542      75726365 
 7542      00
 7543              	.LASF258:
 7544 098e 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 7544      656E7365 
 7544      5F537343 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 203


 7544      5344456C 
 7544      65637472 
 7545              	.LASF189:
 7546 09ab 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 7546      656E7365 
 7546      5F537349 
 7546      7372496E 
 7546      69746961 
 7547              	.LASF3:
 7548 09c4 73686F72 		.ascii	"short int\000"
 7548      7420696E 
 7548      7400
 7549              	.LASF123:
 7550 09ce 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 7550      656E7365 
 7550      5F52414D 
 7550      5F535452 
 7550      55435400 
 7551              	.LASF180:
 7552 09e2 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 7552      656E7365 
 7552      5F537353 
 7552      6574416C 
 7552      6C494F73 
 7553              	.LASF5:
 7554 09fc 6C6F6E67 		.ascii	"long int\000"
 7554      20696E74 
 7554      00
 7555              	.LASF110:
 7556 0a05 77646774 		.ascii	"wdgtEnable\000"
 7556      456E6162 
 7556      6C6500
 7557              	.LASF99:
 7558 0a10 64696666 		.ascii	"diff\000"
 7558      00
 7559              	.LASF107:
 7560 0a15 74756E65 		.ascii	"tunerCmd\000"
 7560      72436D64 
 7560      00
 7561              	.LASF44:
 7562 0a1e 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 7562      656E7365 
 7562      5F53454E 
 7562      53455F4D 
 7562      4554484F 
 7563              	.LASF262:
 7564 0a3a 433A5C55 		.ascii	"C:\\Users\\Qinh\\Documents\\PSoC Creator\\Workspace"
 7564      73657273 
 7564      5C51696E 
 7564      685C446F 
 7564      63756D65 
 7565 0a68 30315C63 		.ascii	"01\\cy8c4025-34channel-touch.cydsn\000"
 7565      79386334 
 7565      3032352D 
 7565      33346368 
 7565      616E6E65 
 7566              	.LASF166:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 204


 7567 0a8a 43617053 		.ascii	"CapSense_SetupWidget\000"
 7567      656E7365 
 7567      5F536574 
 7567      75705769 
 7567      64676574 
 7568              	.LASF62:
 7569 0a9f 62757474 		.ascii	"button0\000"
 7569      6F6E3000 
 7570              	.LASF63:
 7571 0aa7 62757474 		.ascii	"button1\000"
 7571      6F6E3100 
 7572              	.LASF64:
 7573 0aaf 62757474 		.ascii	"button2\000"
 7573      6F6E3200 
 7574              	.LASF65:
 7575 0ab7 62757474 		.ascii	"button3\000"
 7575      6F6E3300 
 7576              	.LASF66:
 7577 0abf 62757474 		.ascii	"button4\000"
 7577      6F6E3400 
 7578              	.LASF67:
 7579 0ac7 62757474 		.ascii	"button5\000"
 7579      6F6E3500 
 7580              	.LASF68:
 7581 0acf 62757474 		.ascii	"button6\000"
 7581      6F6E3600 
 7582              	.LASF69:
 7583 0ad7 62757474 		.ascii	"button7\000"
 7583      6F6E3700 
 7584              	.LASF70:
 7585 0adf 62757474 		.ascii	"button8\000"
 7585      6F6E3800 
 7586              	.LASF71:
 7587 0ae7 62757474 		.ascii	"button9\000"
 7587      6F6E3900 
 7588              	.LASF154:
 7589 0aef 6761696E 		.ascii	"gainReg\000"
 7589      52656700 
 7590              	.LASF213:
 7591 0af7 6D696E53 		.ascii	"minSnsClkDivTmp\000"
 7591      6E73436C 
 7591      6B446976 
 7591      546D7000 
 7592              	.LASF196:
 7593 0b07 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 7593      656E7365 
 7593      5F43616C 
 7593      69627261 
 7593      7465416C 
 7594              	.LASF28:
 7595 0b24 66696E67 		.ascii	"fingerCap\000"
 7595      65724361 
 7595      7000
 7596              	.LASF248:
 7597 0b2e 43617053 		.ascii	"CapSense_CSDScanExt\000"
 7597      656E7365 
 7597      5F435344 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 205


 7597      5363616E 
 7597      45787400 
 7598              	.LASF111:
 7599 0b42 77646774 		.ascii	"wdgtStatus\000"
 7599      53746174 
 7599      757300
 7600              	.LASF255:
 7601 0b4d 536D6172 		.ascii	"SmartSense_TunePrescalers\000"
 7601      7453656E 
 7601      73655F54 
 7601      756E6550 
 7601      72657363 
 7602              	.LASF261:
 7603 0b67 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 7603      72617465 
 7603      645F536F 
 7603      75726365 
 7603      5C50536F 
 7604              	.LASF251:
 7605 0b91 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 7605      656E7365 
 7605      5F435344 
 7605      436F6E6E 
 7605      65637453 
 7606              	.LASF260:
 7607 0ba8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7607      43313120 
 7607      352E342E 
 7607      31203230 
 7607      31363036 
 7608 0bdb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 7608      20726576 
 7608      6973696F 
 7608      6E203233 
 7608      37373135 
 7609 0c0e 67202D4F 		.ascii	"g -Os -ffunction-sections -ffat-lto-objects\000"
 7609      73202D66 
 7609      66756E63 
 7609      74696F6E 
 7609      2D736563 
 7610              	.LASF241:
 7611 0c3a 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 7611      656E7365 
 7611      5F637572 
 7611      72656E74 
 7611      53656E73 
 7612              	.LASF199:
 7613 0c56 70727353 		.ascii	"prsSize\000"
 7613      697A6500 
 7614              	.LASF59:
 7615 0c5e 73697A65 		.ascii	"sizetype\000"
 7615      74797065 
 7615      00
 7616              	.LASF131:
 7617 0c67 64725368 		.ascii	"drShift\000"
 7617      69667400 
 7618              	.LASF6:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 206


 7619 0c6f 6C6F6E67 		.ascii	"long unsigned int\000"
 7619      20756E73 
 7619      69676E65 
 7619      6420696E 
 7619      7400
 7620              	.LASF163:
 7621 0c81 72657456 		.ascii	"retVal\000"
 7621      616C00
 7622              	.LASF27:
 7623 0c88 76526566 		.ascii	"vRef\000"
 7623      00
 7624              	.LASF55:
 7625 0c8d 69646163 		.ascii	"idacMod\000"
 7625      4D6F6400 
 7626              	.LASF252:
 7627 0c95 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 7627      656E7365 
 7627      5F495352 
 7627      5F537461 
 7627      72744578 
 7628              	.LASF138:
 7629 0caa 70747232 		.ascii	"ptr2DebounceArr\000"
 7629      4465626F 
 7629      756E6365 
 7629      41727200 
 7630              	.LASF49:
 7631 0cba 66696E67 		.ascii	"fingerTh\000"
 7631      65725468 
 7631      00
 7632              	.LASF98:
 7633 0cc3 62736C6E 		.ascii	"bslnExt\000"
 7633      45787400 
 7634              	.LASF156:
 7635 0ccb 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
 7635      656E7365 
 7635      5F494441 
 7635      435F4741 
 7635      494E5F54 
 7636              	.LASF61:
 7637 0ceb 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 7637      656E7365 
 7637      5F52414D 
 7637      5F57445F 
 7637      42555454 
 7638              	.LASF17:
 7639 0d09 63797374 		.ascii	"cystatus\000"
 7639      61747573 
 7639      00
 7640              	.LASF2:
 7641 0d12 756E7369 		.ascii	"unsigned char\000"
 7641      676E6564 
 7641      20636861 
 7641      7200
 7642              	.LASF217:
 7643 0d20 6D617849 		.ascii	"maxIdacComp\000"
 7643      64616343 
 7643      6F6D7000 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 207


 7644              	.LASF9:
 7645 0d2c 5F5F7569 		.ascii	"__uint32_t\000"
 7645      6E743332 
 7645      5F7400
 7646              	.LASF179:
 7647 0d37 43617053 		.ascii	"CapSense_SetPinState\000"
 7647      656E7365 
 7647      5F536574 
 7647      50696E53 
 7647      74617465 
 7648              	.LASF139:
 7649 0d4c 73746174 		.ascii	"staticConfig\000"
 7649      6963436F 
 7649      6E666967 
 7649      00
 7650              	.LASF22:
 7651 0d59 73656E73 		.ascii	"sensorCap\000"
 7651      6F724361 
 7651      7000
 7652              	.LASF178:
 7653 0d63 696F5074 		.ascii	"ioPtr\000"
 7653      7200
 7654              	.LASF122:
 7655 0d69 7363616E 		.ascii	"scanCurrentISC\000"
 7655      43757272 
 7655      656E7449 
 7655      534300
 7656              	.LASF135:
 7657 0d78 70747232 		.ascii	"ptr2WdgtRam\000"
 7657      57646774 
 7657      52616D00 
 7658              	.LASF20:
 7659 0d84 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 7659      656E7365 
 7659      5F544852 
 7659      4553484F 
 7659      4C445F54 
 7660              	.LASF212:
 7661 0d9c 6D696E53 		.ascii	"minSnsClkDiv\000"
 7661      6E73436C 
 7661      6B446976 
 7661      00
 7662              	.LASF246:
 7663 0da9 43617053 		.ascii	"CapSense_CSDScan\000"
 7663      656E7365 
 7663      5F435344 
 7663      5363616E 
 7663      00
 7664              	.LASF45:
 7665 0dba 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 7665      656E7365 
 7665      5F53454E 
 7665      53455F4D 
 7665      4554484F 
 7666              	.LASF174:
 7667 0dd7 73746174 		.ascii	"state\000"
 7667      6500
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 208


 7668              	.LASF176:
 7669 0ddd 656C7464 		.ascii	"eltdIndex\000"
 7669      496E6465 
 7669      7800
 7670              	.LASF167:
 7671 0de7 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 7671      656E7365 
 7671      5F536361 
 7671      6E416C6C 
 7671      57696467 
 7672              	.LASF128:
 7673 0dff 6873696F 		.ascii	"hsiomMask\000"
 7673      6D4D6173 
 7673      6B00
 7674              	.LASF57:
 7675 0e09 736E7343 		.ascii	"snsClk\000"
 7675      6C6B00
 7676              	.LASF263:
 7677 0e10 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 7677      656E7365 
 7677      5F537353 
 7677      77697463 
 7677      6853656E 
 7678              	.LASF249:
 7679 0e2d 4379456E 		.ascii	"CyEnterCriticalSection\000"
 7679      74657243 
 7679      72697469 
 7679      63616C53 
 7679      65637469 
 7680              	.LASF240:
 7681 0e44 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 7681      656E7365 
 7681      5F637572 
 7681      52616D53 
 7681      6E735074 
 7682              	.LASF1:
 7683 0e5a 7369676E 		.ascii	"signed char\000"
 7683      65642063 
 7683      68617200 
 7684              	.LASF242:
 7685 0e66 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 7685      656E7365 
 7685      5F736361 
 7685      6E467265 
 7685      71496E64 
 7686              	.LASF97:
 7687 0e7d 62736C6E 		.ascii	"bsln\000"
 7687      00
 7688              	.LASF4:
 7689 0e82 73686F72 		.ascii	"short unsigned int\000"
 7689      7420756E 
 7689      7369676E 
 7689      65642069 
 7689      6E7400
 7690              	.LASF33:
 7691 0e95 4155544F 		.ascii	"AUTO_TUNE_CONFIG_TYPE\000"
 7691      5F54554E 
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 209


 7691      455F434F 
 7691      4E464947 
 7691      5F545950 
 7692              	.LASF233:
 7693 0eab 696E6974 		.ascii	"initStatus\000"
 7693      53746174 
 7693      757300
 7694              	.LASF236:
 7695 0eb6 43617053 		.ascii	"CapSense_ioList\000"
 7695      656E7365 
 7695      5F696F4C 
 7695      69737400 
 7696              	.LASF187:
 7697 0ec6 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 7697      656E7365 
 7697      5F537350 
 7697      6F737441 
 7697      6C6C5769 
 7698              	.LASF134:
 7699 0ee4 70747232 		.ascii	"ptr2SnsFlash\000"
 7699      536E7346 
 7699      6C617368 
 7699      00
 7700              	.LASF207:
 7701 0ef1 6C667372 		.ascii	"lfsrDither\000"
 7701      44697468 
 7701      657200
 7702              	.LASF194:
 7703 0efc 6E657752 		.ascii	"newRegValue\000"
 7703      65675661 
 7703      6C756500 
 7704              	.LASF215:
 7705 0f08 6D617852 		.ascii	"maxRaw\000"
 7705      617700
 7706              	.LASF11:
 7707 0f0f 75696E74 		.ascii	"uint8\000"
 7707      3800
 7708              	.LASF15:
 7709 0f15 646F7562 		.ascii	"double\000"
 7709      6C6500
 7710              	.LASF100:
 7711 0f1c 6E656742 		.ascii	"negBslnRstCnt\000"
 7711      736C6E52 
 7711      7374436E 
 7711      7400
 7712              	.LASF34:
 7713 0f2a 70617261 		.ascii	"param0\000"
 7713      6D3000
 7714              	.LASF35:
 7715 0f31 70617261 		.ascii	"param1\000"
 7715      6D3100
 7716              	.LASF36:
 7717 0f38 70617261 		.ascii	"param2\000"
 7717      6D3200
 7718              	.LASF37:
 7719 0f3f 70617261 		.ascii	"param3\000"
 7719      6D3300
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 210


 7720              	.LASF38:
 7721 0f46 70617261 		.ascii	"param4\000"
 7721      6D3400
 7722              	.LASF39:
 7723 0f4d 70617261 		.ascii	"param5\000"
 7723      6D3500
 7724              	.LASF40:
 7725 0f54 70617261 		.ascii	"param6\000"
 7725      6D3600
 7726              	.LASF198:
 7727 0f5b 736E7343 		.ascii	"snsClkDivider\000"
 7727      6C6B4469 
 7727      76696465 
 7727      7200
 7728              	.LASF200:
 7729 0f69 6D6F6443 		.ascii	"modClkDivider\000"
 7729      6C6B4469 
 7729      76696465 
 7729      7200
 7730              	.LASF105:
 7731 0f77 64657669 		.ascii	"deviceId\000"
 7731      63654964 
 7731      00
 7732              	.LASF168:
 7733 0f80 77696467 		.ascii	"widgetStatus\000"
 7733      65745374 
 7733      61747573 
 7733      00
 7734              	.LASF151:
 7735 0f8d 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 7735      656E7365 
 7735      5F424953 
 7735      545F4353 
 7735      585F534E 
 7736              	.LASF162:
 7737 0fa9 77696467 		.ascii	"widgetId\000"
 7737      65744964 
 7737      00
 7738              	.LASF239:
 7739 0fb2 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 7739      656E7365 
 7739      5F726571 
 7739      75657374 
 7739      5363616E 
 7740              	.LASF222:
 7741 0fd0 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 7741      656E7365 
 7741      5F537349 
 7741      6E697469 
 7741      616C697A 
 7742              	.LASF244:
 7743 0ff4 43617053 		.ascii	"CapSense_idacGainTable\000"
 7743      656E7365 
 7743      5F696461 
 7743      63476169 
 7743      6E546162 
 7744              	.LASF103:
ARM GAS  C:\Users\Qinh\AppData\Local\Temp\ccbH3RgR.s 			page 211


 7745 100b 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 7745      656E7365 
 7745      5F52414D 
 7745      5F534E53 
 7745      5F4C4953 
 7746              	.LASF72:
 7747 1028 62757474 		.ascii	"button10\000"
 7747      6F6E3130 
 7747      00
 7748              	.LASF73:
 7749 1031 62757474 		.ascii	"button11\000"
 7749      6F6E3131 
 7749      00
 7750              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
